var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.157,1,0.884]],["body/components/AppComponent.html",[0,0.238,1,1.253,2,1.33,3,0.268,4,0.129,5,1.749,6,0.79,7,1.735,8,0.79,9,0.129,10,2.116,11,0.346,12,3.182,13,3.74,14,3.74,15,3.74,16,1.056,17,1.428,18,0.79,19,2.138,20,1.714,21,1.614,22,1.188,23,4.494,24,1.188,25,3.74,26,0.223,27,0.645,28,3.182,29,3.966,30,3.052,31,1.428,32,4.968,33,0.562,34,4.252,35,1.588,36,4.252,37,0.675,38,1.872,39,2.648,40,3.101,41,2.157,42,0.78,43,3.74,44,0.488,45,0.024,46,0.456,47,0.758,48,0.374,49,1.474,50,2.814,51,2.54,52,2.54,53,3.182,54,4.521,55,1.541,56,3.218,57,2.32,58,1.515,59,2.488,60,3.182,61,1.8,62,4.521,63,1.506,64,3.485,65,2.593,66,0.675,67,0.827,68,2.488,69,1.614,70,2.32,71,3.052,72,1.589,73,3.761,74,3.182,75,3.182,76,1.423,77,2.52,78,1.589,79,2.381,80,3.761,81,3.728,82,3.382,83,3.74,84,2.814,85,2.814,86,2.814,87,2.814,88,3.052,89,2.488,90,2.54,91,4.521,92,3.182,93,1.614,94,3.325,95,2.138,96,3.052,97,3.101,98,2.54,99,1.723,100,3.394,101,1.515,102,2.814,103,2.54,104,2.54,105,2.32,106,3.094,107,4.394,108,3.822,109,2.32,110,2.488,111,1.723,112,4.252,113,1.516,114,1.269,115,2.488,116,2.488,117,1.982,118,2.814,119,0.497,120,0.299,121,1.422,122,1.872,123,0.148,124,0.168,125,2.116,126,0.781,127,1.227,128,1.227,129,2.116,130,2.488,131,2.116,132,1.422,133,2.116,134,1.872,135,1.872,136,2.116,137,3.823,138,2.116,139,1.146,140,1.689,141,2.116,142,1.872,143,1.689,144,2.488,145,1.318,146,1.689,147,2.116,148,2.488,149,2.488,150,2.116,151,2.116,152,2.116,153,1.845,154,2.116,155,2.814,156,1.875,157,1.723,158,4.998,159,2.138,160,1.614,161,3.101,162,1.346,163,1.845,164,1.723,165,2.32,166,1.12,167,4.494,168,1.423,169,1.428,170,1.515,171,1.689,172,2.488,173,2.814,174,3.74,175,1.227,176,1.872,177,1.146,178,1.422,179,2.488,180,2.116,181,2.488,182,2.488,183,2.116,184,1.074,185,2.488,186,2.488,187,2.488,188,0.702,189,1.227,190,2.116,191,1.227,192,0.702,193,0.79,194,1.588,195,0.79,196,0.79,197,0.587,198,0.79,199,0.553,200,0.79,201,0.587,202,0.79,203,0.624,204,0.79,205,0.624,206,0.79,207,0.624,208,0.79,209,0.624,210,0.79,211,0.587,212,0.79,213,0.587,214,0.662,215,0.79,216,0.587,217,0.79,218,0.624,219,0.79,220,0.587,221,0.79,222,0.624,223,0.79,224,0.587,225,0.79,226,0.79,227,0.008,228,0.012,229,0.008]],["title/modules/AppModule.html",[230,2.189,231,2.395]],["body/modules/AppModule.html",[0,0.256,1,1.635,3,0.233,4,0.137,9,0.137,20,0.661,31,0.837,37,0.396,39,3.047,41,2.482,45,0.024,70,1.635,76,1.003,99,1.799,119,0.803,120,0.316,121,1.506,122,1.983,123,0.278,124,0.178,153,1.3,156,1.169,159,1.506,192,0.744,197,1.405,199,1.358,201,1.358,203,1.442,205,1.442,207,1.442,209,1.442,211,1.405,213,1.358,216,1.405,218,1.442,220,1.405,222,1.442,224,1.405,227,0.008,228,0.012,229,0.008,230,1.635,231,4.902,232,1.506,233,1.789,234,3.957,235,3.5,236,3.957,237,2.651,238,2.242,239,2.242,240,2.242,241,2.242,242,2.242,243,3.568,244,3.568,245,2.938,246,1.983,247,3.904,248,2.938,249,3.904,250,3.322,251,1.789,252,2.938,253,3.904,254,2.938,255,3.904,256,2.635,257,2.635,258,3.904,259,2.635,260,3.904,261,2.635,262,2.635,263,3.904,264,2.635,265,2.635,266,2.242,267,3.904,268,2.635,269,3.904,270,2.635,271,3.904,272,2.635,273,2.242,274,1.635,275,2.635,276,2.242,277,3.904,278,2.635,279,1.3,280,3.904,281,2.635,282,3.904,283,2.635,284,3.904,285,2.635,286,3.904,287,2.242,288,2.242,289,2.635,290,4.651,291,2.635,292,3.904,293,1.635,294,1.789,295,2.242,296,1.983,297,4.651,298,1.635,299,3.904,300,1.635,301,3.904,302,2.635,303,3.904,304,2.635,305,2.007,306,4.375,307,2.635,308,1.137,309,3.322,310,2.242,311,3.729,312,3.158,313,1.789,314,2.242,315,1.983,316,2.938,317,2.635,318,4.671,319,5.142,320,2.242,321,2.242,322,2.242,323,1.789,324,2.242,325,1.789,326,3.191,327,2.242,328,1.396,329,2.242,330,2.635,331,3.904,332,2.635,333,3.904,334,2.635,335,2.635,336,2.635,337,2.242,338,2.242,339,3.904,340,2.635,341,2.294,342,2.635,343,4.671,344,2.938,345,1.983,346,1.396,347,2.242,348,2.242,349,2.635,350,3.322,351,3.322,352,3.322,353,1.789,354,3.322,355,2.635,356,2.635,357,2.938,358,2.635,359,2.635,360,2.635,361,2.635,362,2.635,363,2.242,364,1.983,365,1.983,366,2.635,367,2.635,368,3.322,369,3.904,370,2.635,371,2.635,372,2.635,373,2.242,374,2.422,375,1.983,376,1.685,377,1.398,378,2.242,379,2.242,380,0.889,381,2.635]],["title/classes/AppPage.html",[124,0.238,382,2.654]],["body/classes/AppPage.html",[3,0.311,4,0.271,9,0.271,21,2.249,26,0.311,33,0.926,42,0.799,45,0.023,61,1.561,66,0.926,119,0.577,123,0.311,124,0.352,171,3.539,227,0.017,228,0.02,229,0.017,251,3.539,376,2.659,382,4.636,383,3.539,384,4.434,385,6.777,386,6.777,387,5.212,388,7.011,389,5.212,390,4.434,391,5.212,392,5.212,393,5.212]],["title/modules/AppRoutingModule.html",[230,2.189,243,2.189]],["body/modules/AppRoutingModule.html",[0,0.309,3,0.348,4,0.247,9,0.247,45,0.024,99,2.904,119,0.787,120,0.57,123,0.284,124,0.321,159,2.716,164,2.189,197,1.376,201,1.122,211,1.376,213,1.376,216,1.376,220,1.376,224,1.376,227,0.015,228,0.019,229,0.015,232,2.716,237,3.226,243,3.615,248,3.575,252,4.384,266,4.042,273,4.957,274,2.948,276,4.042,321,4.042,322,4.042,323,3.226,324,4.042,326,3.91,327,4.042,328,2.517,329,4.042,337,4.042,338,4.042,341,2.344,343,5.838,344,4.384,345,3.575,346,2.517,347,4.042,348,4.042,394,4.751,395,4.751,396,4.751]],["title/interceptors/AuthInterceptor.html",[294,2.395,296,2.654]],["body/interceptors/AuthInterceptor.html",[3,0.257,4,0.223,9,0.223,11,0.558,16,1.213,26,0.257,33,0.822,37,0.905,40,3.736,41,2.736,42,0.71,44,1.074,45,0.024,46,0.555,47,0.71,48,0.822,49,1.216,58,2.216,66,0.646,94,3.933,97,3.933,119,0.666,120,0.516,121,2.457,123,0.257,124,0.29,126,1.258,127,2.12,227,0.014,228,0.017,229,0.014,294,3.716,308,1.855,341,2.7,376,1.855,380,1.846,397,4.298,398,5.123,399,3.657,400,5.473,401,5.693,402,2.465,403,4.118,404,4.656,405,3.359,406,4.656,407,5.473,408,5.473,409,3.657,410,4.298,411,5.473,412,5.473,413,6.339,414,6.692,415,6.339,416,4.298,417,5.473,418,2.547,419,5.473,420,5.473,421,5.473,422,5.473,423,1.216,424,5.473,425,4.298,426,4.298,427,4.298,428,4.298,429,4.298,430,4.298,431,4.298]],["title/injectables/AuthorizationService.html",[41,1.522,423,0.784]],["body/injectables/AuthorizationService.html",[0,0.258,3,0.145,4,0.126,7,1.784,9,0.126,11,0.457,20,0.919,21,1.046,26,0.145,27,0.632,29,3.349,31,1.165,33,0.551,37,0.364,41,1.582,42,0.831,44,0.868,45,0.024,46,0.631,47,0.723,48,0.665,49,0.815,57,2.275,58,2.519,62,2.759,63,1.668,64,3.158,65,2.128,66,0.935,67,0.908,69,1.909,71,2.489,72,0.684,73,2.759,77,2.128,81,3.921,90,2.489,91,4.193,93,2.572,95,2.096,96,3.349,97,4.28,98,3.003,100,3.003,101,1.791,102,2.759,103,3.003,104,3.003,106,2.613,107,4.591,108,3.93,109,2.275,111,1.689,113,2.308,114,0.684,117,2.953,118,2.759,119,0.64,120,0.291,123,0.145,124,0.164,126,1.209,128,3.229,132,2.528,135,2.759,139,1.689,141,3.763,142,2.759,143,2.489,153,1.195,159,2.096,199,0.538,227,0.014,228,0.012,229,0.008,274,1.503,295,3.119,300,1.503,305,2.405,308,1.046,325,1.645,328,1.942,341,1.195,374,2.275,376,2.286,377,1.313,401,3.119,402,2.227,403,2.759,405,1.942,406,3.119,418,1.877,423,0.815,432,1.046,433,2.061,434,4.143,435,4.741,436,4.931,437,4.931,438,4.931,439,3.666,440,4.196,441,2.423,442,3.986,443,4.193,444,4.193,445,2.423,446,2.182,447,3.763,448,2.272,449,3.666,450,3.666,451,4.485,452,4.485,453,2.423,454,2.759,455,2.275,456,3.119,457,3.119,458,2.016,459,4.485,460,2.759,461,1.942,462,3.349,463,2.489,464,2.489,465,1.942,466,2.257,467,2.423,468,2.423,469,2.759,470,3.666,471,3.666,472,2.423,473,3.666,474,3.666,475,2.423,476,3.666,477,3.666,478,3.119,479,3.666,480,2.423,481,3.666,482,2.528,483,3.711,484,3.666,485,2.759,486,2.423,487,2.759,488,2.489,489,3.666,490,2.343,491,2.423,492,3.003,493,2.423,494,2.423,495,3.666,496,2.423,497,1.035,498,1.645,499,2.061,500,1.645,501,1.195,502,2.423,503,4.423,504,2.423,505,2.423,506,1.823,507,2.423,508,2.423,509,2.061,510,1.503,511,2.423,512,3.119,513,4.423,514,2.423,515,3.666,516,2.423,517,1.385,518,2.423,519,2.061,520,1.645,521,2.061,522,1.823,523,1.823,524,2.423,525,2.423,526,2.423,527,2.423,528,2.423]],["title/components/BodyComponent.html",[0,0.157,197,0.833]],["body/components/BodyComponent.html",[0,0.26,1,0.771,2,1.162,3,0.183,4,0.16,5,0.921,6,0.977,7,0.868,8,0.977,9,0.16,11,0.285,16,1.233,17,1.613,18,0.977,19,2.205,20,1.74,22,1.387,24,1.387,26,0.183,30,2.087,33,0.656,35,1.756,42,0.399,45,0.024,46,0.443,55,0.771,61,1.308,66,0.462,67,0.566,77,3.02,78,1.233,100,4.733,119,0.562,120,0.369,123,0.183,124,0.208,145,2.313,156,2.197,162,0.921,166,1.656,168,1.932,169,1.927,170,1.768,171,2.087,175,2.504,176,2.313,184,1.884,188,1.433,189,2.88,190,2.615,191,1.516,192,0.868,193,0.977,194,1.756,195,0.977,196,0.977,197,1.305,198,0.977,199,0.683,200,0.977,201,0.726,202,0.977,203,0.771,204,0.977,205,0.771,206,0.977,207,0.771,208,0.977,209,0.771,210,0.977,211,0.726,212,0.977,213,0.726,214,0.818,215,0.977,216,0.726,217,0.977,218,0.771,219,0.977,220,0.726,221,0.977,222,0.771,223,0.977,224,0.726,225,0.977,226,0.977,227,0.01,228,0.014,229,0.01,446,2.154,529,2.615,530,4.159,531,4.366,532,5.077,533,4.366,534,3.074,535,1.884,536,2.154,537,5.527,538,1.768,539,5.527,540,5.527,541,2.154,542,5.527,543,2.496,544,5.527,545,2.012,546,5.527,547,2.965,548,5.527,549,3.714,550,5.527,551,3.714,552,5.527,553,3.285,554,1.17,555,1.17,556,1.17,557,3.074,558,3.074,559,4.366,560,1.757,561,3.714,562,3.285,563,3.074,564,3.074,565,1.516,566,2.087,567,3.074,568,3.074,569,3.074,570,1.17,571,1.662,572,1.17,573,1.17,574,1.17,575,1.932,576,1.17,577,1.17,578,1.17,579,1.17,580,1.17,581,4.319,582,1.416,583,1.416,584,1.17,585,2.615,586,4.319,587,1.17,588,3.074,589,3.074,590,2.615,591,2.615]],["title/injectables/CredentialsPostService.html",[423,0.784,592,2.395]],["body/injectables/CredentialsPostService.html",[0,0.291,3,0.219,4,0.191,9,0.191,11,0.457,21,1.582,26,0.219,27,0.85,31,1.771,33,0.741,37,0.551,42,0.773,44,0.719,45,0.024,46,0.566,47,0.64,48,0.551,49,1.324,58,2.651,65,2.128,66,0.741,67,0.675,72,1.035,77,2.128,78,1.392,95,2.819,109,3.06,113,2.207,114,1.035,119,0.688,120,0.44,123,0.219,124,0.248,126,1.03,127,1.808,132,3.662,139,2.272,146,3.349,166,1.669,199,0.815,227,0.012,228,0.016,229,0.012,300,2.274,305,2.764,308,1.582,325,2.489,374,3.698,377,1.766,380,2.01,402,2.227,418,1.877,423,1.096,432,1.582,434,4.73,442,4.68,448,2.272,454,4.485,455,3.06,456,4.195,457,4.195,458,2.438,459,3.711,461,2.613,462,4.047,466,1.997,483,3.711,485,2.758,497,1.392,498,2.489,499,3.119,501,1.808,506,2.758,512,4.195,519,5.45,520,4.519,521,3.119,522,3.711,592,3.349,593,3.119,594,4.931,595,2.94,596,5.071,597,2.096,598,4.931,599,3.666,600,3.711,601,4.931,602,3.711,603,3.068,604,4.931,605,3.407,606,4.931,607,4.741,608,3.666,609,3.666,610,3.666,611,3.666,612,3.666,613,4.931,614,3.711]],["title/components/DialogComponent.html",[0,0.157,199,0.784]],["body/components/DialogComponent.html",[0,0.261,1,0.782,2,1.173,3,0.186,4,0.162,5,0.934,6,0.991,7,0.88,8,0.991,9,0.162,11,0.408,16,1.245,17,1.626,18,0.991,19,2.209,20,1.743,22,1.401,24,1.401,26,0.186,27,0.76,31,1.626,33,0.882,35,1.768,37,0.469,42,0.664,44,0.612,45,0.024,46,0.519,47,0.572,48,0.469,49,1.137,55,0.782,61,1.321,63,1.471,66,0.469,67,0.812,71,2.995,76,1.678,77,1.345,78,1.57,113,1.487,119,0.615,120,0.374,123,0.186,124,0.211,126,0.651,132,3.18,143,3.475,156,2.061,162,0.934,166,1.321,169,1.626,170,1.263,184,2.4,188,1.445,191,1.538,192,0.88,193,0.991,194,1.768,195,0.991,196,0.991,197,0.736,198,0.991,199,1.236,200,0.991,201,0.736,202,0.991,203,0.782,204,0.991,205,0.782,206,0.991,207,0.782,208,0.991,209,0.782,210,0.991,211,0.736,212,0.991,213,0.736,214,0.83,215,0.991,216,0.736,217,0.991,218,0.782,219,0.991,220,0.736,221,0.991,222,0.782,223,0.991,224,0.736,225,0.991,226,0.991,227,0.01,228,0.014,229,0.01,300,1.934,434,4.759,446,2.175,458,2.384,463,2.995,464,2.995,485,3.318,520,2.995,523,3.318,535,1.903,536,2.175,538,2.253,541,2.744,543,3.851,545,2.563,554,1.187,555,1.187,556,1.187,570,1.187,571,1.678,572,1.187,573,1.187,574,1.187,575,1.947,576,1.187,577,1.187,578,1.187,579,1.187,580,1.187,582,1.437,583,1.437,584,1.187,600,3.85,607,3.752,614,4.186,615,2.652,616,4.41,617,4.41,618,3.752,619,4.41,620,5.117,621,4.41,622,3.118,623,3.118,624,4.41,625,4.41,626,4.41,627,3.752,628,2.384,629,4.732,630,4.353,631,4.353,632,5.117,633,5.117,634,4.353,635,3.85,636,3.475,637,5.117,638,3.118,639,1.934,640,3.118,641,3.118,642,3.118,643,3.118,644,3.118,645,3.118,646,4.41,647,4.41,648,4.41,649,4.41,650,4.41,651,4.41,652,4.41,653,3.118,654,5.117]],["title/interfaces/Events.html",[157,1.625,655,1.343]],["body/interfaces/Events.html",[3,0.396,4,0.234,9,0.234,11,0.636,26,0.268,27,0.97,45,0.023,47,0.861,48,0.968,63,1.787,119,0.497,123,0.268,157,2.969,165,3.492,214,1.498,227,0.014,228,0.018,229,0.014,346,3.777,497,1.589,631,4.789,655,1.71,656,2.569,657,2.788,658,3.823,659,4.789,660,4.789,661,5.629,662,5.629,663,5.629,664,3.683,665,4.789,666,3.178,667,4.199,668,3.869,669,3.218,670,4.375,671,4.789,672,5.629,673,5.629,674,5.629,675,4.789,676,4.235,677,3.822,678,4.494]],["title/components/EventsComponent.html",[0,0.157,201,0.833]],["body/components/EventsComponent.html",[0,0.253,1,0.719,2,1.105,3,0.171,4,0.149,5,0.859,6,0.911,7,0.809,8,0.911,9,0.149,11,0.385,16,1.172,17,1.552,18,0.911,19,2.184,20,1.723,22,1.32,24,1.32,26,0.171,30,1.947,31,2.107,33,0.624,35,1.701,37,0.854,42,0.539,45,0.024,46,0.421,55,0.719,56,1.639,61,1.244,66,0.431,67,0.764,78,1.172,101,1.682,119,0.54,120,0.344,123,0.171,124,0.194,145,2.2,156,2.185,157,2.467,162,0.859,166,1.774,169,1.552,184,1.792,188,1.379,192,0.809,193,0.911,194,1.701,195,0.911,196,0.911,197,0.677,198,0.911,199,0.637,200,0.911,201,1.264,202,0.911,203,0.719,204,0.911,205,0.719,206,0.911,207,0.719,208,0.911,209,0.719,210,0.911,211,0.677,212,0.911,213,0.677,214,0.763,215,0.911,216,0.677,217,0.911,218,0.719,219,0.911,220,0.677,221,0.911,222,0.719,223,0.911,224,0.677,225,0.911,226,0.911,227,0.009,228,0.013,229,0.009,346,3.755,405,2.2,446,2.049,530,3.125,535,2.31,536,2.049,538,1.977,541,2.049,543,2.374,545,2.467,547,2.82,554,1.091,555,1.091,556,1.091,560,2.374,565,2.049,570,1.091,571,1.581,572,1.091,573,1.091,574,1.091,575,1.859,576,1.091,577,1.091,578,1.091,579,1.091,580,1.091,582,1.321,584,1.091,587,2.038,679,2.439,680,4.883,681,4.153,682,2.867,683,2.867,684,3.125,685,5.642,686,5.642,687,5.354,688,6.632,689,6.258,690,4.153,691,4.555,692,5.642,693,6.477,694,4.153,695,5.354,696,5.354,697,4.153,698,5.354,699,5.354,700,4.153,701,4.153,702,5.354,703,5.354,704,5.354,705,4.153,706,2.82,707,5.354,708,4.153,709,3.533,710,5.354,711,3.533,712,4.153,713,2.157,714,2.157,715,1.947,716,2.157,717,2.867,718,2.867,719,2.867,720,1.947]],["title/interfaces/Exam.html",[160,1.522,655,1.343]],["body/interfaces/Exam.html",[3,0.247,4,0.215,9,0.215,11,0.383,26,0.247,27,0.92,45,0.024,46,0.542,47,0.93,48,0.939,63,1.838,123,0.247,160,3.1,227,0.013,228,0.017,229,0.013,490,3.619,497,1.168,628,2.521,655,1.574,656,2.364,664,3.787,666,3.082,669,3.052,676,4.985,677,4.499,721,3.519,722,3.112,723,4.702,724,3.787,725,4.985,726,4.985,727,2.859,728,5.339,729,5.339,730,5.339,731,5.339,732,5.339,733,5.339,734,5.339,735,5.339]],["title/components/ExamsComponent.html",[0,0.157,203,0.884]],["body/components/ExamsComponent.html",[0,0.275,1,0.634,2,1.341,3,0.271,4,0.236,5,0.758,6,0.804,7,0.714,8,0.804,9,0.132,11,0.421,16,1.07,17,1.443,18,0.804,19,2.144,20,1.692,22,1.204,24,1.204,26,0.151,27,0.869,31,1.443,33,0.569,35,1.602,37,0.758,42,0.784,44,0.743,45,0.024,46,0.512,47,0.762,48,0.569,49,1.009,55,0.634,61,1.135,63,1.264,66,0.682,67,0.836,69,1.635,72,1.07,76,1.442,78,1.07,93,1.635,114,1.07,119,0.65,120,0.304,123,0.151,124,0.171,126,0.791,142,2.851,156,2.033,160,2.848,162,0.758,166,1.759,168,1.442,169,1.602,175,1.248,177,1.166,188,1.282,192,0.714,193,0.804,194,1.602,195,0.804,196,0.804,197,0.598,198,0.804,199,0.562,200,0.804,201,0.598,202,0.804,203,1.264,204,0.804,205,0.634,206,0.804,207,0.634,208,0.804,209,0.634,210,0.804,211,0.598,212,0.804,213,0.598,214,0.673,215,0.804,216,0.598,217,0.804,218,0.634,219,0.804,220,0.598,221,0.804,222,0.634,223,0.804,224,0.598,225,0.804,226,0.804,227,0.008,228,0.012,229,0.008,279,2.487,293,1.57,298,1.57,377,1.357,380,1.981,402,2.103,418,1.919,455,2.35,458,2.156,466,1.534,490,2.007,497,1.705,517,2.166,554,0.963,555,0.963,556,0.963,570,0.963,571,1.442,572,0.963,573,0.963,574,0.963,575,1.728,576,0.963,577,0.963,578,0.963,579,0.963,580,0.963,582,1.166,583,1.166,584,0.963,587,1.442,605,2.166,628,1.442,639,1.57,664,2.166,722,2.851,723,2.851,724,2.166,725,2.851,726,2.851,727,2.445,736,2.153,737,3.223,738,2.817,739,5.157,740,4.541,741,3.788,742,3.083,743,3.083,744,5.398,745,3.847,746,3.666,747,3.128,748,2.531,749,1.933,750,3.788,751,2.487,752,2.535,753,3.086,754,1.719,755,2.531,756,2.573,757,4.365,758,3.083,759,2.35,760,3.423,761,2.35,762,2.531,763,2.573,764,2.573,765,2.573,766,2.531,767,2.573,768,2.573,769,2.166,770,2.573,771,2.35,772,2.573,773,2.35,774,3.083,775,2.531,776,2.573,777,3.223,778,2.851,779,3.788,780,3.788,781,2.573,782,2.531,783,3.083,784,2.573,785,2.531,786,1.719,787,2.153,788,1.719,789,2.531,790,2.007,791,2.531,792,2.531,793,1.57,794,1.719,795,2.531,796,1.719,797,1.719,798,1.719,799,1.719,800,3.788,801,3.788,802,3.223,803,3.788,804,3.788,805,3.788,806,3.788,807,3.788,808,3.788,809,1.57,810,1.719,811,1.719,812,1.719,813,1.719,814,1.719]],["title/components/FooterComponent.html",[0,0.157,205,0.884]],["body/components/FooterComponent.html",[0,0.277,1,0.923,2,1.316,3,0.22,4,0.192,5,1.103,6,1.171,7,1.04,8,1.171,9,0.192,11,0.341,16,1.397,17,1.775,18,1.171,19,2.255,20,1.779,22,1.572,24,1.572,26,0.22,33,0.743,35,1.898,37,0.936,42,0.642,45,0.024,46,0.502,55,0.923,61,1.482,66,0.554,67,0.91,78,1.397,101,2.806,119,0.618,120,0.442,123,0.22,124,0.249,145,2.621,156,2.075,162,1.103,166,1.482,168,1.402,169,1.775,170,1.492,188,1.577,189,1.817,192,1.04,193,1.171,194,1.898,195,1.171,196,1.171,197,0.87,198,1.171,199,0.818,200,1.171,201,0.87,202,1.171,203,0.923,204,1.171,205,1.497,206,1.171,207,0.923,208,1.171,209,0.923,210,1.171,211,0.87,212,1.171,213,0.87,214,0.98,215,1.171,216,0.87,217,1.171,218,0.923,219,1.171,220,0.87,221,1.171,222,0.923,223,1.171,224,0.87,225,1.171,226,1.171,227,0.012,228,0.016,229,0.012,446,2.44,458,1.883,535,2.577,536,2.44,554,1.402,555,1.402,556,1.402,561,3.134,570,1.402,571,1.883,572,1.402,573,1.402,574,1.402,575,2.126,576,1.402,577,1.402,578,1.402,579,1.402,580,1.402,582,1.697,583,1.697,584,1.402,815,3.134,816,7.069,817,4.209,818,5.586,819,4.947,820,3.683,821,3.683,822,4.947,823,4.947,824,4.947,825,4.947,826,4.947,827,4.947,828,4.947,829,3.683,830,3.683]],["title/components/FreeRoomComponent.html",[0,0.157,207,0.884]],["body/components/FreeRoomComponent.html",[0,0.247,1,0.447,2,0.767,3,0.106,4,0.189,5,1.371,6,0.567,7,0.503,8,0.567,9,0.093,11,0.514,16,0.814,17,1.153,18,0.567,19,2.012,20,1.587,22,0.916,24,0.916,26,0.106,27,0.719,31,1.153,33,0.433,35,1.557,37,0.627,42,0.829,44,1.053,45,0.024,46,0.545,47,0.794,48,0.736,49,0.807,55,0.447,61,0.864,63,1.428,65,2.799,66,0.775,67,0.949,69,1.244,72,1.383,76,1.097,77,1.566,78,1.383,88,1.211,93,2.114,95,1.648,101,1.984,111,2.257,113,1.406,114,1.383,117,2.209,119,0.57,120,0.214,123,0.106,124,0.12,126,1.077,139,1.329,156,1.833,162,1.087,164,2.473,166,1.706,168,1.097,169,1.557,170,0.722,171,1.958,175,1.422,176,1.342,177,1.329,178,1.019,184,1.244,188,1.025,191,0.879,192,0.503,193,0.567,194,1.325,195,0.567,196,0.567,197,0.421,198,0.567,199,0.396,200,0.567,201,0.421,202,0.567,203,0.447,204,0.567,205,0.447,206,0.567,207,1.045,208,0.567,209,0.447,210,0.567,211,0.421,212,0.567,213,0.421,214,1.218,215,0.567,216,0.421,217,0.567,218,0.447,219,0.567,220,0.421,221,0.567,222,0.447,223,0.567,224,0.421,225,0.567,226,0.567,227,0.006,228,0.009,229,0.006,279,2.543,293,1.106,298,1.106,341,0.879,377,1.3,380,1.739,402,1.847,418,1.587,446,1.422,458,1.865,461,1.528,465,2.596,466,2.51,497,1.456,517,1.648,535,1.244,538,1.168,541,1.422,543,1.648,545,1.329,547,1.958,549,2.453,551,2.453,553,2.17,554,0.679,555,0.679,556,0.679,570,0.679,571,1.097,572,0.679,573,0.679,574,0.679,575,1.382,576,0.679,577,0.679,578,0.679,579,0.679,580,0.679,582,0.822,583,0.822,584,0.679,587,1.743,628,2.386,639,1.106,666,3.151,668,1.648,691,2.453,711,2.453,715,1.211,720,2.465,727,2.835,738,2.252,742,2.465,743,2.465,745,3.327,746,3.109,747,2.587,749,1.64,751,2.11,752,2.225,753,2.617,754,1.211,756,1.958,757,3.928,758,2.465,759,1.789,760,2.832,761,1.789,763,1.958,764,1.958,765,1.958,767,1.958,768,1.958,769,1.648,770,2.465,771,1.789,772,1.958,773,1.789,774,2.465,776,1.958,777,2.453,781,1.958,783,2.465,784,1.958,786,1.211,788,1.211,793,1.106,794,1.211,796,1.211,797,1.211,798,1.211,799,1.211,809,1.106,810,1.211,811,1.211,812,1.211,813,1.211,814,1.211,831,1.517,832,2.883,833,1.958,834,2.17,835,2.883,836,3.63,837,2.883,838,4.579,839,5.545,840,4.579,841,4.579,842,4.579,843,2.883,844,4.17,845,4.17,846,4.17,847,1.783,848,2.883,849,1.783,850,1.783,851,1.783,852,2.883,853,3.895,854,1.783,855,2.883,856,4.17,857,2.883,858,1.783,859,4.46,860,4.098,861,4.17,862,2.883,863,1.783,864,3.039,865,2.883,866,1.783,867,5.368,868,2.883,869,2.883,870,2.883,871,2.883,872,2.883,873,2.883,874,2.883,875,1.783,876,2.453,877,2.883,878,1.783,879,2.883,880,1.783,881,1.783,882,2.883,883,1.783,884,2.883,885,1.783,886,2.587,887,2.883,888,4.17,889,1.783,890,1.783,891,2.883,892,2.883,893,2.883,894,2.883,895,2.883,896,2.883,897,2.883,898,2.883,899,1.783,900,2.883,901,1.517,902,1.783,903,1.783,904,2.883,905,1.517,906,2.883,907,1.783,908,4.17,909,2.883,910,2.883,911,2.883,912,2.17,913,1.783,914,1.783,915,1.783,916,1.783,917,1.783,918,1.783,919,1.783,920,1.783,921,1.783,922,5.208,923,2.883,924,2.883,925,2.883,926,2.453,927,2.453,928,2.17,929,2.883,930,2.17,931,2.883,932,1.783,933,2.883,934,3.088,935,3.088,936,1.783,937,1.106,938,1.342,939,1.342,940,2.17,941,1.783,942,1.783,943,1.517,944,2.453,945,1.517,946,1.783,947,1.783,948,1.783]],["title/components/HeaderComponent.html",[0,0.157,209,0.884]],["body/components/HeaderComponent.html",[0,0.274,1,0.894,2,1.288,3,0.213,4,0.185,5,1.069,6,1.134,7,1.007,8,1.134,9,0.185,11,0.33,16,1.367,17,1.746,18,1.134,19,2.246,20,1.772,22,1.539,24,1.539,26,0.213,30,4.49,33,0.728,35,1.873,37,0.926,42,0.628,45,0.024,46,0.491,55,0.894,61,1.45,66,0.536,67,0.891,78,1.367,119,0.608,120,0.428,123,0.213,124,0.241,145,2.565,156,2.03,162,1.069,166,1.45,168,1.843,169,1.958,170,1.961,173,2.685,178,2.039,184,2.372,188,1.552,189,2.388,192,1.007,193,1.134,194,1.873,195,1.134,196,1.134,197,0.842,198,1.134,199,0.793,200,1.134,201,0.842,202,1.134,203,0.894,204,1.134,205,0.894,206,1.134,207,0.894,208,1.134,209,1.478,210,1.134,211,0.842,212,1.134,213,0.842,214,0.949,215,1.134,216,0.842,217,1.134,218,0.894,219,1.134,220,0.842,221,1.134,222,0.894,223,1.134,224,0.842,225,1.134,226,1.134,227,0.011,228,0.015,229,0.011,405,3.652,446,2.388,464,2.423,535,2.544,536,2.388,538,2.226,541,2.388,543,2.768,554,1.358,555,1.358,556,1.358,565,1.76,570,1.358,571,1.843,572,1.358,573,1.358,574,1.358,575,2.092,576,1.358,577,1.358,578,1.358,579,1.358,580,1.358,584,1.358,585,5.626,587,1.358,714,3.643,715,2.423,716,2.685,817,4.119,934,4.119,935,3.035,949,3.035,950,5.496,951,4.842,952,3.568,953,3.568,954,4.842,955,4.842,956,3.568,957,3.568,958,3.568,959,2.685,960,3.568,961,3.568,962,3.568,963,3.568,964,3.568,965,3.568,966,3.568,967,3.568,968,3.568,969,3.035,970,3.568,971,2.685,972,2.423,973,3.035,974,2.685,975,2.685,976,3.035,977,3.568,978,3.568,979,3.568,980,3.568]],["title/injectables/HttpService.html",[423,0.784,749,1.263]],["body/injectables/HttpService.html",[3,0.223,4,0.194,9,0.194,11,0.463,21,1.613,26,0.223,27,0.861,33,0.751,37,0.562,42,0.887,44,0.733,45,0.024,46,0.379,47,0.78,48,0.562,49,1.335,66,0.562,67,0.688,72,1.41,79,1.98,111,1.722,113,2.172,114,1.41,119,0.664,120,0.449,123,0.223,124,0.253,126,0.781,127,1.844,139,2.768,160,2.95,188,1.055,227,0.012,228,0.016,229,0.012,305,2.78,308,1.613,376,2.156,380,2.306,402,2.356,418,2.383,423,1.11,432,1.613,448,2.302,461,2.647,465,2.647,482,2.136,490,1.98,497,1.887,501,1.844,595,1.844,597,2.136,603,2.963,628,1.422,664,2.136,722,3.759,723,2.812,724,2.136,725,2.812,726,2.812,727,1.613,739,4.711,749,1.789,751,2.302,752,2.78,787,3.18,790,2.981,864,3.099,981,3.18,982,4.996,983,3.392,984,6.007,985,4.996,986,3.737,987,3.099,988,3.392,989,3.821,990,3.737,991,3.392,992,2.538,993,3.392,994,3.759,995,2.538,996,2.319,997,2.812,998,2.538,999,3.737,1000,3.737,1001,3.737,1002,3.737,1003,3.737,1004,2.538,1005,2.538,1006,3.737,1007,3.737,1008,3.737,1009,3.737,1010,3.737,1011,3.737,1012,3.737,1013,3.737,1014,3.737,1015,3.737,1016,3.737,1017,3.099,1018,3.737,1019,2.538]],["title/injectables/HttpService-1.html",[423,0.656,538,1.195,749,1.057]],["body/injectables/HttpService-1.html",[3,0.22,4,0.191,9,0.191,11,0.553,21,1.588,26,0.22,27,0.852,33,0.743,37,0.839,42,0.876,44,0.97,45,0.024,46,0.502,47,0.725,48,0.743,49,1.326,66,0.553,67,0.677,69,2.576,72,1.039,79,1.949,111,1.695,113,2.299,114,1.039,119,0.66,120,0.442,123,0.22,124,0.249,126,1.166,127,1.815,139,2.278,160,2.133,161,3.067,162,1.481,164,2.572,188,1.039,214,1.485,227,0.012,228,0.016,229,0.012,305,2.767,308,1.588,376,2.133,380,2.246,402,2.23,418,2.125,423,1.098,432,1.588,448,2.278,458,1.881,460,3.72,461,2.619,465,2.619,466,2.002,482,2.103,497,1.88,501,1.815,595,1.815,597,2.103,603,3.163,628,2.272,660,4.206,666,3.163,668,2.103,727,2.133,749,1.77,751,2.278,752,2.133,790,3.162,833,4.354,853,5.078,860,3.357,864,3.067,901,3.13,912,3.72,928,2.768,930,2.768,983,3.357,987,3.067,988,3.357,989,3.791,992,2.498,993,2.498,995,2.498,998,2.498,1004,2.498,1005,2.498,1017,3.067,1019,2.498,1020,3.13,1021,4.943,1022,4.943,1023,4.943,1024,4.943,1025,3.679,1026,3.679,1027,3.679,1028,3.679,1029,3.679,1030,3.679,1031,3.679,1032,3.679,1033,3.679,1034,3.679,1035,3.679,1036,3.13,1037,3.13,1038,3.679,1039,3.679,1040,3.679,1041,3.679,1042,3.679]],["title/injectables/HttpService-2.html",[184,1.273,423,0.656,749,1.057]],["body/injectables/HttpService-2.html",[3,0.298,4,0.194,9,0.194,11,0.521,21,1.613,26,0.223,27,0.861,33,0.751,37,0.562,42,0.887,44,0.733,45,0.024,46,0.507,47,0.73,48,0.562,49,1.335,66,0.562,67,0.688,72,1.41,79,1.98,111,1.722,113,2.172,114,1.41,119,0.664,120,0.449,123,0.223,124,0.253,126,0.781,127,1.844,139,2.768,157,2.968,160,2.156,164,2.302,188,1.055,227,0.012,228,0.016,229,0.012,305,2.78,308,1.613,346,2.981,376,2.156,380,2.306,402,2.356,418,2.383,423,1.11,432,1.613,448,2.302,458,1.901,461,2.647,465,2.647,482,2.136,497,1.887,501,1.844,595,1.844,597,2.136,603,2.963,657,3.884,665,4.25,667,2.319,668,2.136,749,1.789,751,2.302,752,2.78,790,2.981,864,3.099,983,3.392,987,3.099,988,3.392,989,3.821,991,3.392,992,2.538,993,3.392,994,3.759,995,2.538,996,2.319,997,2.812,998,2.538,1004,2.538,1005,2.538,1017,3.099,1019,2.538,1036,3.18,1037,3.18,1043,3.18,1044,4.787,1045,4.996,1046,6.007,1047,4.996,1048,3.737,1049,3.737,1050,3.737,1051,3.737,1052,3.737,1053,3.737,1054,3.737,1055,3.737,1056,3.737,1057,3.737,1058,3.737,1059,2.538,1060,3.737,1061,2.812,1062,3.737,1063,3.737,1064,3.737]],["title/injectables/HttpService-3.html",[423,0.656,541,1.455,749,1.057]],["body/injectables/HttpService-3.html",[3,0.224,4,0.196,9,0.196,11,0.465,21,1.623,26,0.224,27,0.864,33,0.754,37,0.565,42,0.888,44,0.738,45,0.024,46,0.382,47,0.733,48,0.565,49,1.338,66,0.565,67,0.692,72,1.416,79,1.992,111,1.733,113,2.176,114,1.416,119,0.666,120,0.451,123,0.224,124,0.254,126,0.786,127,1.855,139,2.775,160,2.165,163,3.301,188,1.062,227,0.012,228,0.016,229,0.012,305,2.785,308,1.623,376,2.165,380,2.308,402,2.359,418,2.388,423,1.115,432,1.623,448,2.311,458,1.909,461,2.658,465,2.658,482,2.15,497,1.889,501,1.855,595,1.855,597,2.15,603,2.97,749,1.796,751,2.311,752,2.785,790,2.991,864,3.112,983,3.406,987,3.112,988,3.406,989,3.833,991,3.406,992,2.553,993,3.406,994,3.774,995,2.553,996,2.333,997,2.83,998,2.553,1004,2.553,1005,2.553,1017,3.112,1019,2.553,1065,3.199,1066,4.802,1067,3.774,1068,5.644,1069,6.021,1070,5.016,1071,3.76,1072,3.76,1073,3.76,1074,3.76,1075,3.76,1076,3.76,1077,3.76,1078,3.76,1079,2.83,1080,3.76,1081,2.83,1082,3.76,1083,2.83,1084,3.76,1085,2.83,1086,3.76,1087,2.83,1088,3.76,1089,2.83,1090,3.76,1091,3.76,1092,3.76]],["title/modules/I18nModule.html",[230,2.189,244,2.189]],["body/modules/I18nModule.html",[3,0.294,4,0.256,9,0.256,45,0.024,119,0.736,120,0.591,123,0.356,124,0.333,227,0.016,228,0.019,229,0.016,232,2.816,237,3.346,244,3.696,248,3.707,252,4.482,305,2.763,306,5.068,308,2.126,309,5.068,310,5.068,311,4.045,312,4.045,313,3.346,314,4.192,315,3.707,316,4.482,341,2.43,350,4.192,351,4.192,352,4.192,353,3.346,354,4.192,364,3.707,365,3.707,368,5.068,373,4.192,374,3.057,375,3.707,376,2.126,377,1.765,378,4.192,379,4.192,380,1.662,1093,3.707,1094,4.927,1095,4.927,1096,4.927,1097,4.927]],["title/components/InfoComponent.html",[0,0.157,211,0.833]],["body/components/InfoComponent.html",[0,0.297,1,0.995,2,1.743,3,0.346,4,0.206,5,1.189,6,1.261,7,1.121,8,1.261,9,0.206,11,0.368,16,1.468,17,1.842,18,1.261,19,2.273,20,1.793,22,1.652,24,1.652,26,0.237,33,0.781,35,1.955,37,0.96,42,0.675,45,0.023,46,0.528,55,0.995,61,1.557,66,0.597,67,0.957,78,1.468,109,3.226,119,0.439,120,0.477,123,0.237,124,0.268,162,1.189,163,2.565,165,3.226,166,1.557,168,1.979,169,1.652,170,1.608,177,1.829,189,1.958,192,1.121,193,1.261,194,1.955,195,1.261,196,1.261,197,0.937,198,1.261,199,0.882,200,1.261,201,0.937,202,1.261,203,0.995,204,1.261,205,0.995,206,1.261,207,0.995,208,1.261,209,0.995,210,1.261,211,1.452,212,1.261,213,0.937,214,1.543,215,1.261,216,0.937,217,1.261,218,0.995,219,1.261,220,0.937,221,1.261,222,0.995,223,1.261,224,0.937,225,1.261,226,1.261,227,0.013,228,0.017,229,0.013,510,3.226,535,2.655,536,2.565,545,2.396,560,2.269,562,2.987,565,1.958,566,2.696,587,1.979,667,2.463,737,5.233,739,3.912,886,2.463,922,4.423,937,2.463,975,2.987,1098,3.377,1099,5.199,1100,4.423,1101,5.199,1102,5.199,1103,5.199,1104,5.797,1105,5.199,1106,3.97,1107,3.97,1108,3.97,1109,3.97,1110,3.97]],["title/interfaces/Lecture.html",[164,1.625,655,1.343]],["body/interfaces/Lecture.html",[3,0.281,4,0.244,9,0.244,11,0.642,26,0.281,27,0.998,45,0.024,47,0.872,48,0.984,63,1.815,123,0.281,164,3.154,214,1.251,227,0.015,228,0.018,229,0.015,490,3.067,492,3.192,497,1.327,628,1.789,655,1.789,656,2.687,666,3.229,668,3.742,669,3.309,677,3.192,727,2.498,833,3.192,834,3.537,860,3.93,876,4.924,912,3.537,928,4.925,930,4.925,1111,3.999,1112,4.7,1113,5.788,1114,5.788,1115,5.788,1116,5.788,1117,5.788]],["title/components/LecturesPlanComponent.html",[0,0.157,213,0.833]],["body/components/LecturesPlanComponent.html",[0,0.264,1,0.652,2,1.359,3,0.155,4,0.24,5,0.779,6,0.826,7,0.734,8,0.826,9,0.135,11,0.506,16,1.091,17,1.466,18,0.826,19,2.153,20,1.699,22,1.228,24,1.228,26,0.155,27,0.88,31,1.466,33,0.581,35,1.623,37,0.768,42,0.79,44,0.758,45,0.024,46,0.581,47,0.709,48,0.581,49,1.025,55,0.652,61,1.158,63,1.157,66,0.693,67,0.849,69,1.668,72,1.091,76,1.471,78,1.091,93,1.668,114,1.091,119,0.655,120,0.312,123,0.155,124,0.176,126,0.807,156,1.948,157,2.516,162,0.779,165,2.398,166,1.823,168,1.471,169,1.623,175,1.282,177,1.198,188,1.302,192,0.734,193,0.826,194,1.623,195,0.826,196,0.826,197,0.614,198,0.826,199,0.578,200,0.826,201,0.614,202,0.826,203,0.652,204,0.826,205,0.652,206,0.826,207,0.652,208,0.826,209,0.652,210,0.826,211,0.614,212,0.826,213,1.206,214,1.62,215,0.826,216,0.614,217,0.826,218,0.652,219,0.826,220,0.614,221,0.826,222,0.652,223,0.826,224,0.614,225,0.826,226,0.826,227,0.008,228,0.012,229,0.008,279,2.693,293,1.613,298,1.613,323,4.224,346,3.628,377,1.384,380,1.998,402,2.122,418,1.944,458,2.178,466,1.868,497,1.756,517,2.209,554,0.989,555,0.989,556,0.989,570,0.989,571,1.471,572,0.989,573,0.989,574,0.989,575,1.756,576,0.989,577,0.989,578,0.989,579,0.989,580,0.989,582,1.198,583,1.198,584,0.989,587,1.471,605,2.209,639,1.613,657,3.859,664,2.209,667,2.398,668,2.209,727,1.668,738,2.862,742,3.133,743,3.133,745,3.885,746,3.707,747,3.169,749,1.955,751,2.516,752,2.557,753,3.121,754,1.765,756,2.624,757,4.285,758,3.133,759,2.398,760,3.469,761,2.398,763,2.624,764,2.624,765,2.624,767,2.624,768,2.624,769,2.209,770,2.624,771,2.398,772,2.624,773,2.398,774,3.133,776,2.624,778,2.908,781,2.624,783,3.133,784,2.624,786,1.765,788,1.765,793,1.613,794,1.765,796,1.765,797,1.765,798,1.765,799,1.765,809,1.613,810,1.765,811,1.765,812,1.765,813,1.765,814,1.765,926,3.288,927,3.288,1044,2.212,1059,2.624,1061,2.908,1118,2.212,1119,3.865,1120,3.865,1121,4.613,1122,3.865,1123,5.459,1124,2.599,1125,3.865,1126,2.599,1127,2.599,1128,2.599,1129,2.599,1130,3.865,1131,3.865,1132,2.599,1133,2.599,1134,2.599,1135,2.599,1136,3.865,1137,3.865,1138,3.865,1139,3.865,1140,2.212]],["title/components/LoginComponent.html",[0,0.157,216,0.833]],["body/components/LoginComponent.html",[0,0.234,1,0.596,2,0.961,3,0.142,4,0.124,5,1.309,6,0.755,7,0.671,8,0.755,9,0.124,11,0.405,16,1.02,17,1.389,18,0.755,19,2.122,20,1.674,22,1.148,24,1.148,26,0.142,27,0.623,31,1.758,33,0.543,35,1.758,37,0.543,38,1.788,40,3.432,41,2.266,42,0.787,44,0.709,45,0.024,46,0.561,47,0.769,48,0.543,49,1.462,55,0.596,57,2.711,58,1.77,61,1.082,63,0.596,64,2.587,65,2.752,66,0.734,67,0.966,69,2.557,70,3.029,72,1.02,76,1.375,77,2.882,78,1.378,93,2.107,94,2.241,95,2.791,101,1.463,106,2.93,113,2.046,114,1.02,119,0.612,120,0.285,121,1.358,123,0.142,124,0.161,126,0.913,146,2.453,147,3.073,153,2.408,156,2.053,159,3.884,162,0.712,166,1.573,168,0.904,169,1.551,170,0.962,175,1.172,177,1.095,178,1.358,188,1.234,189,1.172,191,1.172,192,0.671,193,0.755,194,1.551,195,0.755,196,0.755,197,0.561,198,0.755,199,0.528,200,0.755,201,0.561,202,0.755,203,0.596,204,0.755,205,0.596,206,0.755,207,0.596,208,0.755,209,0.596,210,0.755,211,0.561,212,0.755,213,0.561,214,0.632,215,0.755,216,1.153,217,0.755,218,0.596,219,0.755,220,0.561,221,0.755,222,0.596,223,0.755,224,0.561,225,0.755,226,0.755,227,0.008,228,0.012,229,0.008,254,1.788,279,2.156,405,1.914,435,3.073,451,3.674,452,4.162,455,3.676,460,4.162,462,4.331,466,2.457,483,2.718,520,2.453,523,2.718,535,1.559,545,1.664,554,0.904,555,0.904,556,0.904,560,1.358,562,1.788,565,1.782,566,1.613,570,0.904,571,1.375,572,0.904,573,0.904,574,0.904,575,1.663,576,0.904,577,0.904,578,0.904,579,0.904,580,0.904,583,1.095,584,0.904,587,2.105,592,3.566,596,3.073,600,2.718,602,2.718,614,4.656,671,3.073,713,1.788,720,1.613,753,3.002,759,3.432,761,1.474,769,2.065,937,1.474,938,1.788,939,1.788,940,2.718,944,3.073,972,2.453,975,1.788,991,2.453,1141,2.021,1142,3.612,1143,3.612,1144,4.37,1145,3.612,1146,5.749,1147,5.749,1148,3.612,1149,4.882,1150,4.882,1151,2.376,1152,4.37,1153,2.376,1154,3.612,1155,2.376,1156,3.612,1157,3.073,1158,3.612,1159,3.612,1160,2.376,1161,4.154,1162,2.376,1163,3.612,1164,2.376,1165,2.376,1166,2.376,1167,4.37,1168,4.37,1169,3.612,1170,3.612,1171,2.376,1172,2.376,1173,2.376,1174,2.376,1175,3.612,1176,2.376,1177,2.376,1178,2.376,1179,2.376,1180,2.376,1181,4.154,1182,4.882,1183,5.531,1184,5.531,1185,5.531,1186,2.376,1187,2.376,1188,2.021,1189,2.376,1190,2.021,1191,2.021]],["title/injectables/MarkerService.html",[423,0.784,1192,2.189]],["body/injectables/MarkerService.html",[0,0.269,2,1.344,3,0.227,4,0.197,9,0.197,11,0.525,21,1.639,26,0.227,27,0.87,33,0.759,37,0.852,42,0.857,44,0.991,45,0.024,46,0.512,47,0.655,48,0.759,55,1.516,63,1.622,66,0.759,67,0.929,72,1.707,81,3.751,105,3.751,114,1.707,119,0.559,120,0.456,123,0.227,124,0.257,126,1.055,128,3.192,140,3.429,227,0.012,228,0.016,229,0.012,377,2.165,423,1.122,432,1.639,490,3.71,492,4.105,500,2.579,501,1.873,974,3.799,996,3.133,1192,3.133,1193,3.231,1194,4.296,1195,4.296,1196,4.549,1197,6.036,1198,5.706,1199,4.296,1200,3.799,1201,5.16,1202,4.296,1203,5.672,1204,5.672,1205,5.672,1206,5.672,1207,4.296,1208,5.049,1209,3.798,1210,5.049,1211,3.798,1212,4.554,1213,4.554,1214,6.045,1215,5.049,1216,3.798,1217,5.049,1218,3.798,1219,5.143,1220,5.049,1221,3.798,1222,3.798,1223,3.798,1224,3.798,1225,3.798]],["title/interfaces/Mensa.html",[163,1.74,655,1.343]],["body/interfaces/Mensa.html",[3,0.262,4,0.228,9,0.228,11,0.407,12,4.719,26,0.262,27,0.956,45,0.024,47,0.897,48,0.96,63,1.833,85,4.174,86,4.174,123,0.262,163,3.37,227,0.014,228,0.018,229,0.014,497,1.24,655,1.671,656,2.51,659,3.735,666,3.151,669,3.171,724,3.952,727,2.757,1067,4.958,1079,4.807,1081,5.063,1083,5.063,1085,5.063,1087,4.807,1089,4.807,1226,3.735,1227,5.979,1228,5.547,1229,5.547]],["title/components/MensaComponent.html",[0,0.157,218,0.884]],["body/components/MensaComponent.html",[0,0.265,1,0.661,2,1.368,3,0.157,4,0.242,5,0.789,6,0.837,7,0.744,8,0.837,9,0.137,11,0.431,16,1.102,17,1.478,18,0.837,19,2.157,20,1.702,22,1.241,24,1.241,26,0.157,27,0.886,31,1.478,33,0.587,35,1.634,37,0.773,42,0.793,44,0.766,45,0.024,46,0.522,47,0.713,48,0.587,49,1.033,55,0.661,61,1.169,63,1.166,66,0.699,67,0.856,69,1.685,72,1.102,76,1.486,78,1.102,93,1.685,114,1.102,119,0.658,120,0.316,123,0.157,124,0.178,126,0.816,156,1.991,162,0.789,163,3.484,166,1.783,168,1.486,169,1.634,175,1.3,177,1.214,188,1.313,192,0.744,193,0.837,194,1.634,195,0.837,196,0.837,197,0.622,198,0.837,199,0.586,200,0.837,201,0.622,202,0.837,203,0.661,204,0.837,205,0.661,206,0.837,207,0.661,208,0.837,209,0.661,210,0.837,211,0.622,212,0.837,213,0.622,214,0.701,215,0.837,216,0.622,217,0.837,218,1.289,219,0.837,220,0.622,221,0.837,222,0.661,223,0.837,224,0.622,225,0.837,226,0.837,227,0.008,228,0.012,229,0.008,279,2.537,293,1.635,298,1.635,377,1.398,380,2.007,402,2.131,418,1.957,458,2.189,466,1.581,497,1.762,517,2.232,554,1.003,555,1.003,556,1.003,570,1.003,571,1.486,572,1.003,573,1.003,574,1.003,575,1.77,576,1.003,577,1.003,578,1.003,579,1.003,580,1.003,582,1.214,583,1.214,584,1.003,587,1.486,605,2.232,639,1.635,724,2.232,727,1.685,738,2.886,742,3.158,743,3.158,745,3.905,746,3.729,747,3.191,749,1.966,751,2.53,752,2.568,753,3.139,754,1.789,756,2.651,757,4.323,758,3.158,759,2.422,760,3.492,761,2.422,763,2.651,764,2.651,765,2.651,767,2.651,768,2.651,769,2.232,770,2.651,771,2.422,772,2.651,773,2.422,774,3.158,776,2.651,778,2.938,781,2.651,783,3.158,784,2.651,786,1.789,788,1.789,793,1.635,794,1.789,796,1.789,797,1.789,798,1.789,799,1.789,802,3.322,809,1.635,810,1.789,811,1.789,812,1.789,813,1.789,814,1.789,1066,2.242,1067,2.938,1079,2.938,1081,2.938,1083,2.938,1085,3.87,1087,2.938,1089,2.938,1230,2.242,1231,4.651,1232,3.904,1233,5.491,1234,2.635,1235,3.904,1236,2.635,1237,2.635,1238,2.635,1239,2.635,1240,3.904,1241,3.904,1242,2.635,1243,2.635,1244,2.635,1245,2.635,1246,3.904,1247,3.904,1248,3.904,1249,3.904,1250,3.904,1251,3.904]],["title/components/NachrichtenComponent.html",[0,0.157,220,0.833]],["body/components/NachrichtenComponent.html",[0,0.266,1,0.823,2,1.216,3,0.196,4,0.171,5,0.983,6,1.043,7,0.926,8,1.043,9,0.171,11,0.304,16,1.29,17,1.672,18,1.043,19,2.224,20,1.754,22,1.453,24,1.453,26,0.196,33,0.687,35,1.808,37,0.899,42,0.593,45,0.024,46,0.464,55,0.823,61,1.369,66,0.493,67,0.841,77,2.908,78,1.29,101,1.851,119,0.582,120,0.394,123,0.196,124,0.222,145,2.422,155,5.243,156,2.168,162,0.983,166,1.575,169,1.808,170,1.329,184,1.973,188,1.485,189,1.619,191,1.619,192,0.926,193,1.043,194,1.808,195,1.043,196,1.043,197,0.775,198,1.043,199,0.729,200,1.043,201,0.775,202,1.043,203,0.823,204,1.043,205,0.823,206,1.043,207,0.823,208,1.043,209,0.823,210,1.043,211,0.775,212,1.043,213,0.775,214,0.873,215,1.043,216,0.775,217,1.043,218,0.823,219,1.043,220,1.343,221,1.043,222,0.823,223,1.043,224,0.775,225,1.043,226,1.043,227,0.01,228,0.015,229,0.01,405,2.422,535,2.455,536,2.255,538,2.13,541,2.255,543,2.613,545,2.621,554,1.249,555,1.249,556,1.249,560,1.876,565,1.619,570,1.249,571,1.74,572,1.249,573,1.249,574,1.249,575,2.002,576,1.249,577,1.249,578,1.249,579,1.249,580,1.249,581,2.792,582,1.512,584,1.249,586,2.792,587,1.74,590,2.792,591,2.792,605,2.613,684,3.44,685,3.889,686,5.514,706,3.104,709,3.889,714,2.469,715,2.228,716,2.469,720,2.228,976,2.792,1252,2.792,1253,4.571,1254,5.26,1255,4.571,1256,3.281,1257,3.281,1258,5.689,1259,6.667,1260,5.689,1261,5.689,1262,4.571,1263,5.689,1264,4.571,1265,5.689,1266,3.281,1267,3.281,1268,3.281,1269,3.281]],["title/components/NavbarComponent.html",[0,0.157,222,0.884]],["body/components/NavbarComponent.html",[0,0.266,1,0.566,2,0.925,3,0.253,4,0.117,5,1.538,6,0.718,7,1.594,8,0.718,9,0.117,11,0.392,16,0.981,17,1.346,18,0.718,19,2.104,20,1.681,22,1.104,24,1.104,26,0.207,27,0.599,28,2.956,29,4.219,31,1.723,32,4.805,33,0.522,34,4.046,35,1.511,36,4.046,37,0.522,38,1.699,39,2.873,40,2.951,41,2.052,42,0.806,44,0.682,45,0.024,46,0.483,47,0.776,48,0.522,49,1.481,50,2.615,51,2.36,52,2.36,53,2.956,54,4.08,55,1.558,56,3.099,57,2.156,58,1.407,60,2.956,61,1.829,62,4.08,63,1.531,64,3.42,65,2.785,66,0.772,67,0.945,69,2.052,70,2.156,71,2.36,72,1.449,73,2.615,74,2.956,75,2.956,76,1.323,77,2.437,78,1.646,79,1.841,80,3.578,81,3.617,82,2.615,84,2.615,87,1.699,90,2.36,91,4.08,92,2.956,93,1.5,94,3.364,95,1.986,96,2.36,97,2.951,98,2.36,99,1.601,100,3.229,101,1.407,102,2.615,103,2.36,104,2.36,105,2.951,106,3.168,107,4.08,108,3.229,109,2.156,111,1.601,112,4.046,113,1.604,114,1.196,117,2.52,118,2.615,119,0.526,120,0.271,121,1.291,122,1.699,123,0.135,124,0.153,125,1.921,126,0.993,128,1.714,129,1.921,131,3.603,133,2.956,134,2.615,135,2.615,136,1.921,137,3.603,138,1.921,145,1.841,150,1.921,151,1.921,152,1.921,153,2.089,154,1.921,155,2.615,156,2.02,157,1.601,160,1.5,161,2.951,162,1.268,163,1.714,164,1.601,165,2.156,166,0.676,168,0.86,169,1.346,170,0.915,173,1.699,177,1.041,178,2.421,180,1.921,183,1.921,184,0.975,191,1.114,192,0.638,193,0.718,194,1.511,195,0.718,196,0.718,197,0.533,198,0.718,199,0.502,200,0.718,201,0.533,202,0.718,203,0.566,204,0.718,205,0.566,206,0.718,207,0.566,208,0.718,209,0.566,210,0.718,211,0.533,212,0.718,213,0.533,214,0.601,215,0.718,216,0.533,217,0.718,218,0.566,219,0.718,220,0.533,221,0.718,222,1.192,223,0.718,224,0.533,225,0.718,226,0.718,227,0.007,228,0.011,229,0.007,279,1.114,311,3.486,312,1.534,313,1.534,363,4.368,364,2.615,365,2.615,466,1.715,469,2.615,536,1.714,538,0.915,565,1.714,587,1.81,692,4.368,790,1.841,859,2.36,886,2.156,943,2.956,945,1.921,971,1.699,972,2.36,987,2.156,1227,2.956,1270,1.921,1271,3.475,1272,2.956,1273,4.235,1274,3.475,1275,4.755,1276,4.235,1277,3.475,1278,4.235,1279,5.647,1280,2.258,1281,2.258,1282,3.475,1283,2.258,1284,2.258,1285,2.956,1286,3.475,1287,2.956,1288,3.475,1289,2.615,1290,3.475,1291,2.258,1292,2.258,1293,3.475,1294,2.258,1295,2.258,1296,2.258,1297,2.258,1298,1.921,1299,2.258,1300,2.258,1301,2.258,1302,2.258,1303,2.258,1304,2.258,1305,3.475,1306,3.475,1307,3.475,1308,4.755,1309,1.921,1310,2.258,1311,1.921,1312,3.475,1313,2.258]],["title/injectables/NavigateService.html",[423,0.784,1314,2.395]],["body/injectables/NavigateService.html",[2,1.235,3,0.2,4,0.174,5,1.39,9,0.174,11,0.493,21,1.447,26,0.2,27,0.8,33,0.697,37,0.504,42,0.782,44,0.91,45,0.024,46,0.471,47,0.691,48,0.697,49,1.386,52,3.151,65,2.002,66,0.697,67,0.854,78,1.621,79,1.777,105,3.563,119,0.635,120,0.402,123,0.2,124,0.227,126,1.112,127,1.654,128,1.654,140,3.151,161,2.879,184,2.002,227,0.011,228,0.015,229,0.011,305,2.478,308,1.447,341,1.654,377,1.201,380,2.345,402,1.906,423,1.031,432,1.447,459,3.492,463,3.899,466,2.325,482,1.917,498,2.277,501,1.654,506,2.523,509,2.853,595,3.076,597,1.917,603,3.39,628,2.706,635,3.492,636,3.151,751,2.138,752,2.002,753,3.042,769,2.652,833,3.151,859,3.899,886,3.563,1017,2.08,1192,4.155,1200,3.492,1201,4.692,1212,4.235,1213,4.235,1289,4.321,1314,3.151,1315,2.853,1316,3.948,1317,5.204,1318,3.948,1319,3.948,1320,5.439,1321,4.527,1322,5.742,1323,4.64,1324,4.885,1325,4.64,1326,4.64,1327,4.64,1328,4.64,1329,3.948,1330,4.64,1331,4.64,1332,3.353,1333,4.64,1334,4.64,1335,5.742,1336,4.64,1337,5.544,1338,4.64,1339,3.353,1340,3.948,1341,3.948,1342,3.353,1343,4.64,1344,4.64,1345,2.853,1346,3.353,1347,3.353,1348,2.853,1349,3.353,1350,3.353,1351,3.353,1352,3.353,1353,3.353,1354,3.353,1355,3.353,1356,3.353,1357,3.353,1358,3.353,1359,3.353,1360,3.353,1361,3.353,1362,3.353]],["title/components/NavigationComponent.html",[0,0.157,224,0.833]],["body/components/NavigationComponent.html",[0,0.223,1,0.312,2,0.885,3,0.074,4,0.065,5,1.121,6,0.395,7,0.351,8,0.395,9,0.065,11,0.308,16,0.603,17,0.891,18,0.395,19,1.844,20,1.455,22,0.678,24,0.678,26,0.074,27,0.368,31,1.684,33,0.5,35,1.299,37,0.5,42,0.818,44,0.55,45,0.024,46,0.489,47,0.718,48,0.421,49,1.111,51,1.449,52,2.259,55,1.209,56,3.099,58,0.864,61,0.639,63,1.096,64,1.984,65,2.915,66,0.693,67,0.975,69,2.388,72,0.792,76,0.812,77,1.616,78,1.616,82,1.606,88,0.844,90,1.449,93,1.764,96,2.775,98,2.259,99,0.983,101,1.347,106,2.931,108,3.133,113,1.122,114,0.792,117,1.131,119,0.571,120,0.149,123,0.074,124,0.084,126,0.782,128,1.847,132,3.029,134,2.503,139,0.983,140,1.449,146,1.449,153,2.613,156,0.996,161,2.323,162,0.372,166,1.121,168,0.812,169,1.299,170,1.136,175,1.847,177,0.573,178,0.711,188,1.851,189,2.157,191,0.613,192,0.351,193,0.395,194,1.057,195,0.395,196,0.395,197,0.294,198,0.395,199,0.474,200,0.395,201,0.294,202,0.395,203,0.312,204,0.395,205,0.312,206,0.395,207,0.312,208,0.395,209,0.312,210,0.395,211,0.294,212,0.395,213,0.294,214,0.331,215,0.395,216,0.294,217,0.395,218,0.312,219,0.395,220,0.294,221,0.395,222,0.312,223,0.395,224,0.785,225,0.395,226,0.395,227,0.015,228,0.007,229,0.004,245,1.606,279,1.383,300,0.771,325,0.844,341,2.467,345,2.503,380,1.866,402,0.764,403,1.606,404,4.255,418,1.266,434,4.416,442,2.817,443,3.29,444,0.936,446,1.053,447,1.816,448,1.292,455,1.324,458,1.266,463,2.775,464,3.133,466,1.771,478,3.477,487,3.472,498,0.844,510,3.364,517,0.711,522,2.503,535,0.921,538,0.504,545,0.983,554,0.473,555,0.473,556,0.473,560,1.22,565,1.053,566,0.844,570,0.473,571,0.812,572,0.473,573,0.473,574,0.473,575,1.067,576,0.473,577,0.473,578,0.473,579,0.473,580,0.473,583,0.573,584,0.473,587,1.664,595,1.641,603,2.613,605,1.901,618,1.816,628,2.552,629,4.508,634,1.816,635,3.764,636,1.449,655,0.812,684,2.11,706,0.844,713,0.936,727,0.921,738,1.74,747,2.064,752,0.921,771,2.064,773,2.064,790,1.131,793,1.324,859,3.133,886,3.433,905,1.058,937,0.771,938,0.936,939,0.936,940,1.606,959,1.606,969,1.058,971,0.936,972,0.844,974,1.606,996,3.103,1100,1.816,1140,1.058,1161,3.477,1188,1.058,1190,1.058,1191,1.058,1192,2.535,1194,1.816,1195,1.816,1196,4.681,1197,5.533,1198,5.002,1199,1.816,1200,2.503,1201,3.987,1202,4.255,1212,1.449,1213,2.259,1287,1.816,1289,1.606,1298,2.386,1309,1.058,1311,1.058,1314,2.259,1316,3.926,1317,4.163,1318,1.816,1319,1.816,1320,1.816,1321,1.816,1324,2.83,1329,3.477,1337,3.926,1340,1.816,1345,1.058,1363,0.936,1364,2.134,1365,2.386,1366,2.134,1367,3.326,1368,2.134,1369,2.804,1370,2.134,1371,2.134,1372,2.134,1373,2.134,1374,2.134,1375,5.159,1376,2.134,1377,2.804,1378,2.804,1379,5.632,1380,2.804,1381,3.326,1382,5.532,1383,5.298,1384,3.326,1385,2.804,1386,3.326,1387,1.243,1388,2.134,1389,2.804,1390,1.243,1391,1.243,1392,3.326,1393,2.134,1394,3.326,1395,4.087,1396,3.326,1397,3.326,1398,3.326,1399,3.326,1400,5.298,1401,4.614,1402,3.326,1403,3.326,1404,2.134,1405,1.243,1406,2.134,1407,1.243,1408,2.134,1409,5.456,1410,2.134,1411,2.134,1412,2.134,1413,2.134,1414,5.002,1415,2.134,1416,2.804,1417,2.134,1418,3.744,1419,1.243,1420,2.804,1421,1.243,1422,3.326,1423,2.134,1424,5.002,1425,3.326,1426,3.326,1427,2.134,1428,2.134,1429,1.243,1430,2.134,1431,2.134,1432,4.087,1433,2.134,1434,3.185,1435,3.326,1436,1.243,1437,2.134,1438,2.134,1439,1.243,1440,1.243,1441,2.134,1442,1.243,1443,1.243,1444,1.243,1445,1.243,1446,1.243,1447,2.134,1448,2.134,1449,2.134,1450,2.134,1451,2.134,1452,3.326,1453,1.243,1454,1.243,1455,2.134,1456,1.243,1457,1.243,1458,2.134,1459,1.243,1460,2.134,1461,2.134,1462,2.134,1463,2.134,1464,2.134,1465,2.134,1466,2.134,1467,2.134,1468,2.134,1469,2.134,1470,1.243,1471,2.134,1472,1.243,1473,2.386,1474,1.243,1475,1.243,1476,1.243,1477,1.058,1478,1.243,1479,1.606,1480,2.386,1481,1.058,1482,1.606,1483,1.058,1484,1.606,1485,1.058,1486,1.606,1487,1.058,1488,2.83,1489,1.058,1490,1.058,1491,1.058,1492,1.058,1493,1.058,1494,1.058,1495,1.058,1496,1.058,1497,1.243,1498,1.243,1499,1.243,1500,1.243,1501,1.243,1502,1.243,1503,1.243,1504,1.243,1505,1.243,1506,2.134,1507,1.243,1508,2.134,1509,1.243,1510,1.243,1511,1.243,1512,1.243,1513,1.243,1514,1.243,1515,1.243,1516,1.243,1517,1.243,1518,1.243,1519,1.243,1520,1.243,1521,1.243,1522,1.243,1523,1.243,1524,1.243,1525,1.243,1526,1.243,1527,1.243,1528,1.243,1529,1.243,1530,1.243,1531,2.134,1532,1.243,1533,2.134,1534,2.134,1535,1.243,1536,1.243,1537,1.243,1538,1.243,1539,1.243,1540,1.243,1541,1.243,1542,1.243,1543,1.243,1544,1.058,1545,1.058,1546,1.243,1547,5.002,1548,3.326,1549,2.134,1550,2.134,1551,3.326,1552,3.326,1553,3.744,1554,3.326,1555,2.134,1556,2.134,1557,2.134,1558,2.134,1559,2.134,1560,3.326,1561,2.134,1562,1.243,1563,1.243,1564,1.243,1565,2.134,1566,2.134,1567,1.243,1568,1.243,1569,2.386,1570,1.243]],["title/classes/Room.html",[124,0.238,628,1.343]],["body/classes/Room.html",[3,0.243,4,0.211,9,0.211,11,0.489,26,0.243,27,0.91,31,2.285,37,0.933,42,0.871,44,0.797,45,0.023,46,0.412,47,0.871,48,0.967,49,1.429,55,1.019,63,1.818,111,1.873,117,3.289,123,0.243,124,0.275,126,1.344,227,0.013,228,0.017,229,0.013,383,2.76,488,3.982,497,1.147,510,3.276,628,2.729,666,2.893,667,3.638,669,3.018,1196,3.973,1212,4.215,1213,4.215,1317,3.973,1341,4.989,1365,6.062,1434,5.61,1544,5.853,1545,5.61,1571,5.121,1572,3.458,1573,4.064,1574,4.064,1575,5.28,1576,6.594,1577,6.434]],["title/injectables/SideNavigationService.html",[39,1.869,423,0.784]],["body/injectables/SideNavigationService.html",[0,0.305,3,0.251,4,0.219,9,0.219,11,0.5,20,1.577,26,0.251,27,0.931,29,4.52,33,0.812,39,2.861,42,0.774,44,0.826,45,0.023,46,0.427,47,0.546,48,0.633,49,1.2,50,4.064,51,3.667,54,5.008,55,1.354,56,3.596,64,3.159,65,2.872,66,0.633,67,0.775,72,1.525,80,4.733,81,3.903,84,4.064,85,4.064,86,4.064,87,5.008,88,3.667,105,3.351,113,1.821,114,1.525,119,0.597,120,0.505,123,0.251,124,0.284,126,0.879,128,2.941,132,3.409,227,0.013,228,0.017,229,0.013,377,1.934,405,2.23,423,1.2,432,1.817,454,4.064,469,4.064,488,3.667,490,3.586,500,2.859,630,4.595,1207,4.595,1219,4.595,1272,4.595,1285,4.595,1578,3.581,1579,5.401,1580,4.595,1581,5.963,1582,5.963,1583,5.401,1584,4.21,1585,4.21,1586,5.401,1587,5.401,1588,4.21,1589,4.21,1590,4.21,1591,4.21]],["title/classes/Users.html",[58,1.428,124,0.238]],["body/classes/Users.html",[3,0.262,4,0.229,9,0.229,11,0.514,26,0.262,27,0.957,31,2.218,37,0.961,42,0.855,44,0.863,45,0.023,46,0.713,47,0.855,48,0.991,49,1.42,58,2.248,63,1.797,113,2.397,117,2.942,123,0.262,124,0.297,126,1.271,143,3.77,227,0.014,228,0.018,229,0.014,383,2.986,451,5.322,452,5.322,462,4.132,492,2.986,497,1.241,666,3.002,669,3.174,1181,3.741,1571,5.065,1592,3.741,1593,4.397,1594,5.552,1595,5.552,1596,6.085,1597,4.397,1598,4.397,1599,4.397]],["title/guards/authorizationGuard.html",[326,2.189,328,1.869]],["body/guards/authorizationGuard.html",[0,0.241,3,0.253,4,0.22,7,1.53,9,0.22,11,0.502,16,1.195,26,0.253,33,0.814,37,0.947,40,3.709,41,2.72,42,0.703,44,0.831,45,0.024,46,0.43,47,0.549,48,0.636,49,1.481,57,3.363,58,2.553,64,2.872,66,0.814,93,2.339,94,3.363,97,4.136,99,2.497,101,2.195,103,3.68,104,3.68,106,2.243,119,0.661,120,0.508,121,2.42,123,0.253,124,0.286,126,1.132,128,2.673,153,2.088,159,3.098,227,0.014,228,0.017,229,0.014,274,2.626,326,3.363,328,3.34,344,5.016,376,2.339,409,3.601,423,1.204,440,4.611,443,5.321,444,5.016,448,2.497,487,4.078,488,3.68,834,4.078,1157,4.611,1600,4.233,1601,5.086,1602,3.601,1603,5.42,1604,5.42,1605,4.233,1606,4.233,1607,5.42,1608,4.611,1609,5.42,1610,5.42,1611,5.42,1612,5.42,1613,5.42,1614,5.42,1615,4.233,1616,4.233]],["title/interfaces/calendarEntry.html",[655,1.343,670,2.395]],["body/interfaces/calendarEntry.html",[3,0.298,4,0.26,9,0.26,11,0.462,26,0.298,27,1.035,45,0.023,46,0.678,47,0.836,63,1.787,123,0.298,157,2.3,227,0.016,228,0.019,229,0.016,346,3.678,497,1.409,655,2.285,656,2.853,657,3.097,664,3.432,670,4.077,675,5.108,676,4.845,677,4.077,724,3.432,860,4.077,1059,4.537,1061,5.027,1617,4.246,1618,4.991,1619,6.004,1620,6.004]],["title/coverage.html",[1621,4.087]],["body/coverage.html",[0,0.314,1,0.934,9,0.194,10,3.168,39,1.973,41,1.607,45,0.024,47,0.483,58,1.508,65,2.882,124,0.38,157,1.716,160,1.607,163,1.837,164,1.716,197,0.879,199,0.827,201,0.879,203,0.934,205,0.934,207,0.934,209,0.934,211,0.879,213,0.879,216,0.879,218,0.934,220,0.879,222,0.934,224,0.879,227,0.012,228,0.016,229,0.012,246,3.75,294,2.529,296,2.802,323,2.529,326,2.31,328,1.973,353,3.384,357,2.802,374,3.485,377,1.334,382,2.802,384,3.168,398,3.168,399,3.168,423,1.503,433,3.168,529,3.168,592,2.529,593,3.168,615,3.168,628,1.417,655,2.38,657,3.721,658,3.168,670,2.529,679,3.168,721,3.168,736,3.168,749,2.148,757,2.31,809,2.31,815,3.168,831,3.168,949,3.168,973,5.904,981,3.168,1020,3.168,1043,3.168,1065,3.168,1093,2.802,1098,3.168,1111,3.168,1118,3.168,1141,3.168,1192,2.31,1193,3.168,1226,3.168,1230,3.168,1252,3.168,1270,3.168,1314,2.529,1315,3.168,1363,4.705,1479,2.802,1482,2.802,1484,2.802,1486,2.802,1569,6.08,1571,3.75,1572,3.168,1578,3.168,1592,3.168,1601,3.168,1602,3.168,1617,3.168,1621,3.168,1622,3.724,1623,3.724,1624,3.724,1625,3.724,1626,3.724,1627,5.617,1628,3.724,1629,3.724,1630,5.998,1631,5.998,1632,6.891,1633,6.571,1634,3.724,1635,5.998,1636,3.724,1637,5.998,1638,5.998,1639,3.724,1640,3.724,1641,3.724,1642,3.724,1643,3.724,1644,3.724,1645,3.724,1646,3.724,1647,3.724,1648,3.724,1649,3.724,1650,3.168,1651,4.24,1652,3.168,1653,4.24,1654,3.168,1655,3.168,1656,3.724]],["title/dependencies.html",[233,2.879,1657,2.95]],["body/dependencies.html",[45,0.024,120,0.567,156,1.414,227,0.015,228,0.019,229,0.015,233,3.207,235,3.553,250,4.938,251,3.942,254,3.553,274,2.93,287,4.017,288,4.017,312,4.268,313,3.207,315,3.553,316,3.553,320,4.017,500,3.207,530,3.553,602,3.553,1409,4.938,1473,4.017,1477,4.017,1658,4.722,1659,5.964,1660,4.722,1661,5.805,1662,4.722,1663,4.722,1664,4.722,1665,4.722,1666,4.722,1667,4.722,1668,4.722,1669,4.722,1670,4.722,1671,4.722,1672,4.722,1673,4.722,1674,4.722,1675,4.722,1676,4.722,1677,4.722,1678,4.722,1679,4.722,1680,4.722,1681,4.722,1682,4.722,1683,4.722,1684,4.722,1685,4.722,1686,4.722,1687,4.722,1688,4.722,1689,4.722,1690,5.805,1691,4.722,1692,4.722,1693,4.722,1694,5.805,1695,4.722,1696,4.722,1697,4.722,1698,4.722,1699,4.722,1700,4.722,1701,4.722,1702,4.722,1703,4.722]],["title/miscellaneous/functions.html",[1704,2.003,1705,3.607]],["body/miscellaneous/functions.html",[26,0.321,44,1.304,45,0.022,46,0.675,48,0.999,227,0.017,228,0.02,229,0.017,246,4.053,305,2.71,311,3.657,318,5.343,353,4.651,357,4.726,375,4.726,1093,4.053,1704,3.657,1705,4.582,1706,6.28,1707,5.386,1708,5.386]],["title/index.html",[26,0.176,1348,2.51,1709,2.95]],["body/index.html",[0,0.282,4,0.251,20,1.208,45,0.019,46,0.489,55,1.208,76,1.834,101,1.951,227,0.015,228,0.019,229,0.015,377,1.726,390,4.099,448,2.922,465,2.553,510,2.99,595,2.899,627,4.099,636,3.272,937,4.325,1059,4.483,1580,5.395,1659,4.099,1710,4.819,1711,6.602,1712,4.819,1713,6.341,1714,4.819,1715,4.819,1716,6.769,1717,4.819,1718,4.819,1719,4.819,1720,4.819,1721,4.819,1722,4.819,1723,4.819,1724,4.819,1725,6.341,1726,4.819,1727,6.769,1728,4.819,1729,4.819,1730,4.819,1731,4.819,1732,4.819,1733,4.099,1734,5.877,1735,5.877,1736,6.602,1737,4.819,1738,5.877,1739,5.877,1740,4.819,1741,4.819,1742,4.819,1743,6.341,1744,4.819,1745,4.819,1746,3.626,1747,4.819,1748,4.819,1749,4.819,1750,4.819,1751,4.819]],["title/modules.html",[232,2.746]],["body/modules.html",[45,0.02,227,0.018,228,0.02,229,0.018,231,3.791,232,3.191,243,3.463,244,3.463,251,3.791,1608,5.455,1752,5.582,1753,5.582,1754,6.746,1755,6.412]],["title/overview.html",[1746,3.615]],["body/overview.html",[1,1.719,2,1.185,39,3.243,41,2.642,45,0.023,70,2.764,76,1.695,99,2.053,192,1.258,197,1.445,199,1.36,201,1.445,203,1.535,205,1.535,207,1.535,209,1.535,211,1.445,213,1.445,216,1.445,218,1.535,220,1.445,222,1.535,224,1.445,227,0.014,228,0.018,229,0.014,230,2.764,231,5.029,232,2.546,233,3.025,234,3.79,235,3.352,236,3.79,237,3.025,238,3.79,239,3.79,240,3.79,241,3.79,242,3.79,243,3.798,244,3.798,245,4.212,328,2.36,383,3.025,432,1.922,538,1.804,541,2.761,545,2.053,547,3.025,553,3.352,656,2.546,959,3.352,1746,3.352]],["title/routes.html",[99,2.214]],["body/routes.html",[45,0.021,99,2.635,227,0.018,228,0.021,229,0.018]],["title/miscellaneous/variables.html",[1704,2.003,1756,3.607]],["body/miscellaneous/variables.html",[26,0.284,45,0.023,47,0.902,56,3.334,63,1.581,72,1.963,106,2.521,114,1.963,153,2.877,227,0.015,228,0.019,229,0.015,538,1.927,603,2.877,706,3.231,1363,3.581,1479,4.745,1480,5.365,1481,4.049,1482,4.745,1483,4.049,1484,4.745,1485,4.049,1486,4.389,1487,4.049,1488,5.593,1489,4.049,1490,4.049,1491,4.049,1492,4.049,1493,4.049,1494,4.049,1495,4.049,1496,4.049,1650,4.049,1651,5.593,1652,4.049,1653,4.049,1654,4.962,1655,4.962,1704,3.231,1733,4.962,1756,4.049,1757,5.832,1758,4.759,1759,4.759,1760,6.574,1761,4.759,1762,4.759,1763,4.759]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["0.0.1",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":718,"title":{},"body":{"components/EventsComponent.html":{}}}],["0.2em",{"_index":719,"title":{},"body":{"components/EventsComponent.html":{}}}],["0.95",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":868,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["0000",{"_index":869,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["009fe3",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["00:00",{"_index":879,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["00:00:00",{"_index":870,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["01",{"_index":1259,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["02",{"_index":685,"title":{},"body":{"components/EventsComponent.html":{},"components/NachrichtenComponent.html":{}}}],["08:00",{"_index":891,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["09:00",{"_index":892,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["0px",{"_index":1308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1",{"_index":538,"title":{"injectables/HttpService-1.html":{}},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["1.7.1",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":884,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["10.2.0",{"_index":1659,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.7",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1569,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["100px",{"_index":561,"title":{},"body":{"components/BodyComponent.html":{},"components/FooterComponent.html":{}}}],["10:00",{"_index":893,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["10px",{"_index":944,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{}}}],["11.0.0",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["11:00",{"_index":894,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["12",{"_index":1490,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["12/13",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["12:00",{"_index":895,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["13.0.0",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["13:00",{"_index":896,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["14:00",{"_index":897,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["15",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["1500",{"_index":770,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["1500px",{"_index":569,"title":{},"body":{"components/BodyComponent.html":{}}}],["150px",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{}}}],["15:00",{"_index":898,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["16",{"_index":1494,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["16:00",{"_index":711,"title":{},"body":{"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{}}}],["17.5",{"_index":1520,"title":{},"body":{"components/NavigationComponent.html":{}}}],["17:00",{"_index":691,"title":{},"body":{"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{}}}],["17px",{"_index":941,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["18",{"_index":684,"title":{},"body":{"components/EventsComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["18/19",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["18:00",{"_index":705,"title":{},"body":{"components/EventsComponent.html":{}}}],["19:30",{"_index":708,"title":{},"body":{"components/EventsComponent.html":{}}}],["1a4273",{"_index":814,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["1px",{"_index":947,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["2",{"_index":184,"title":{"injectables/HttpService-2.html":{}},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{}}}],["2.0.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1264,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["200px",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/FreeRoomComponent.html":{}}}],["20121",{"_index":1262,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["2021",{"_index":686,"title":{},"body":{"components/EventsComponent.html":{},"components/NachrichtenComponent.html":{}}}],["20:00",{"_index":697,"title":{},"body":{"components/EventsComponent.html":{}}}],["20pt",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["20px",{"_index":945,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/NavbarComponent.html":{}}}],["21",{"_index":694,"title":{},"body":{"components/EventsComponent.html":{}}}],["22",{"_index":698,"title":{},"body":{"components/EventsComponent.html":{}}}],["230px",{"_index":1552,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25",{"_index":706,"title":{},"body":{"components/EventsComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["25/25",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":709,"title":{},"body":{"components/EventsComponent.html":{},"components/NachrichtenComponent.html":{}}}],["28",{"_index":1495,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["2px",{"_index":1568,"title":{},"body":{"components/NavigationComponent.html":{}}}],["2x.png",{"_index":1481,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":541,"title":{"injectables/HttpService-3.html":{}},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{},"overview.html":{}}}],["3.2.12",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":1492,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":543,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{}}}],["4.17.1",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{}}}],["40px",{"_index":1312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["41",{"_index":1488,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["470px",{"_index":589,"title":{},"body":{"components/BodyComponent.html":{}}}],["4px",{"_index":588,"title":{},"body":{"components/BodyComponent.html":{}}}],["5",{"_index":545,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["5.0.0",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["5.10.16",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["50px",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["586px",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5fecab9b36037971e921c0ffb8e451a37400740d",{"_index":1751,"title":{},"body":{"index.html":{}}}],["5px",{"_index":936,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["6",{"_index":547,"title":{},"body":{"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"overview.html":{}}}],["6.0.0",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":1553,"title":{},"body":{"components/NavigationComponent.html":{}}}],["643px",{"_index":562,"title":{},"body":{"components/BodyComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{}}}],["7",{"_index":549,"title":{},"body":{"components/BodyComponent.html":{},"components/FreeRoomComponent.html":{}}}],["7/8",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1395,"title":{},"body":{"components/NavigationComponent.html":{}}}],["8",{"_index":551,"title":{},"body":{"components/BodyComponent.html":{},"components/FreeRoomComponent.html":{}}}],["8.5.1",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["83",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":553,"title":{},"body":{"components/BodyComponent.html":{},"components/FreeRoomComponent.html":{},"overview.html":{}}}],["9.0.2",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":809,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"coverage.html":{}}}],["91",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["a101",{"_index":1460,"title":{},"body":{"components/NavigationComponent.html":{}}}],["a201",{"_index":1461,"title":{},"body":{"components/NavigationComponent.html":{}}}],["a301",{"_index":1462,"title":{},"body":{"components/NavigationComponent.html":{}}}],["a401",{"_index":1463,"title":{},"body":{"components/NavigationComponent.html":{}}}],["abservables",{"_index":1330,"title":{},"body":{"injectables/NavigateService.html":{}}}],["absolute",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["accent",{"_index":578,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["account",{"_index":916,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["activate",{"_index":1614,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["activate/deactivate",{"_index":489,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["activated",{"_index":1611,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["active",{"_index":1108,"title":{},"body":{"components/InfoComponent.html":{}}}],["actual_component",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["add",{"_index":474,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["adds",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/NavigationComponent.html":{}}}],["afterviewinit",{"_index":738,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["aggregate",{"_index":1393,"title":{},"body":{"components/NavigationComponent.html":{}}}],["align",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["allow",{"_index":1099,"title":{},"body":{"components/InfoComponent.html":{}}}],["allows",{"_index":1364,"title":{},"body":{"components/NavigationComponent.html":{}}}],["alumni",{"_index":826,"title":{},"body":{"components/FooterComponent.html":{}}}],["angular",{"_index":448,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{},"index.html":{}}}],["angular/animations",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"injectables/NavigateService.html":{}}}],["angular/compiler",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["angular/material/expansion",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["angular/material/select",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["angular/material/tabs",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/theming",{"_index":556,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["angular/material/toolbar",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"guards/authorizationGuard.html":{},"dependencies.html":{}}}],["angulat",{"_index":1326,"title":{},"body":{"injectables/NavigateService.html":{}}}],["another",{"_index":1366,"title":{},"body":{"components/NavigationComponent.html":{}}}],["anywhere",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":461,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["app",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"index.html":{}}}],["app.component",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":939,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["appends",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["appmodule",{"_index":231,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":382,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutes",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":243,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":1425,"title":{},"body":{"components/NavigationComponent.html":{}}}],["array",{"_index":790,"title":{},"body":{"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["arrays",{"_index":997,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["artifacts",{"_index":1728,"title":{},"body":{"index.html":{}}}],["assets/i18n",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["assets/marker",{"_index":1480,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["assigning",{"_index":1336,"title":{},"body":{"injectables/NavigateService.html":{}}}],["assumes",{"_index":789,"title":{},"body":{"components/ExamsComponent.html":{}}}],["attribute",{"_index":669,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/Lecture.html":{},"interfaces/Mensa.html":{},"classes/Room.html":{},"classes/Users.html":{}}}],["attribution",{"_index":1524,"title":{},"body":{"components/NavigationComponent.html":{}}}],["audience",{"_index":1115,"title":{},"body":{"interfaces/Lecture.html":{}}}],["auth",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{}}}],["authenticate",{"_index":523,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["authenticates",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authenticating",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["authentication",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["autherization",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"classes/Users.html":{}}}],["authinterceptor",{"_index":294,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authorization",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["authorizationguard",{"_index":326,"title":{"guards/authorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/authorizationGuard.html":{},"coverage.html":{}}}],["authorizationservice",{"_index":41,"title":{"injectables/AuthorizationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authorize",{"_index":435,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{}}}],["authorize(name",{"_index":450,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["authrequest",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authservice",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["authstatuslistener",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{}}}],["authtoken",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["automatically",{"_index":1720,"title":{},"body":{"index.html":{}}}],["available",{"_index":1608,"title":{},"body":{"guards/authorizationGuard.html":{},"modules.html":{}}}],["b",{"_index":1198,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["b101",{"_index":1464,"title":{},"body":{"components/NavigationComponent.html":{}}}],["background",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["bar",{"_index":1272,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["base",{"_index":601,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["based",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"components/NavbarComponent.html":{}}}],["basedon",{"_index":471,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["bcrypt",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":993,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["begin",{"_index":1061,"title":{},"body":{"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{},"interfaces/calendarEntry.html":{}}}],["begin','end",{"_index":1131,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["belong",{"_index":728,"title":{},"body":{"interfaces/Exam.html":{}}}],["belongs",{"_index":731,"title":{},"body":{"interfaces/Exam.html":{}}}],["below",{"_index":456,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["beta.33",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":1100,"title":{},"body":{"components/InfoComponent.html":{},"components/NavigationComponent.html":{}}}],["black",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["body",{"_index":530,"title":{},"body":{"components/BodyComponent.html":{},"components/EventsComponent.html":{},"dependencies.html":{}}}],["body'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["body.component.html",{"_index":533,"title":{},"body":{"components/BodyComponent.html":{}}}],["body.component.scss",{"_index":532,"title":{},"body":{"components/BodyComponent.html":{}}}],["body/body.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["bodycomponent",{"_index":197,"title":{"components/BodyComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["bootstrap",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrapp",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":1309,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["both",{"_index":996,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["bottom",{"_index":943,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/NavbarComponent.html":{}}}],["bottom:10px",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["browse",{"_index":1754,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":391,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlang",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["browsermodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1727,"title":{},"body":{"index.html":{}}}],["building",{"_index":1365,"title":{},"body":{"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["button",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["button.mat",{"_index":590,"title":{},"body":{"components/BodyComponent.html":{},"components/NachrichtenComponent.html":{}}}],["c201",{"_index":1465,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cache",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["cachemechanism",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["cacheservice",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["calendarentry",{"_index":670,"title":{"interfaces/calendarEntry.html":{}},"body":{"interfaces/Events.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["calenderentry",{"_index":678,"title":{},"body":{"interfaces/Events.html":{}}}],["calls",{"_index":1607,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["campus",{"_index":1367,"title":{},"body":{"components/NavigationComponent.html":{}}}],["can/can't",{"_index":1613,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["canactivate",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/authorizationGuard.html":{}}}],["card",{"_index":581,"title":{},"body":{"components/BodyComponent.html":{},"components/NachrichtenComponent.html":{}}}],["case",{"_index":454,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/SideNavigationService.html":{}}}],["center",{"_index":720,"title":{},"body":{"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{}}}],["certain",{"_index":834,"title":{},"body":{"components/FreeRoomComponent.html":{},"interfaces/Lecture.html":{},"guards/authorizationGuard.html":{}}}],["certificates",{"_index":828,"title":{},"body":{"components/FooterComponent.html":{}}}],["change",{"_index":1722,"title":{},"body":{"index.html":{}}}],["check",{"_index":627,"title":{},"body":{"components/DialogComponent.html":{},"index.html":{}}}],["checks",{"_index":487,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["child",{"_index":1101,"title":{},"body":{"components/InfoComponent.html":{}}}],["chosen",{"_index":876,"title":{},"body":{"components/FreeRoomComponent.html":{},"interfaces/Lecture.html":{}}}],["chosendate",{"_index":838,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["chosendatetime",{"_index":839,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["chosenid",{"_index":840,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["chosentime",{"_index":841,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["class",{"_index":124,"title":{"classes/AppPage.html":{},"classes/Room.html":{},"classes/Users.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"coverage.html":{}}}],["classes",{"_index":383,"title":{},"body":{"classes/AppPage.html":{},"classes/Room.html":{},"classes/Users.html":{},"overview.html":{}}}],["clear",{"_index":1423,"title":{},"body":{"components/NavigationComponent.html":{}}}],["clearauthdata",{"_index":436,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["clearmarker",{"_index":1566,"title":{},"body":{"components/NavigationComponent.html":{}}}],["clearmarkers",{"_index":1381,"title":{},"body":{"components/NavigationComponent.html":{}}}],["clears",{"_index":478,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{}}}],["cli",{"_index":1713,"title":{},"body":{"index.html":{}}}],["click",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["clicked",{"_index":455,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["clicking",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["clicks",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{}}}],["cloned",{"_index":1750,"title":{},"body":{"index.html":{}}}],["clones",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["closing",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Mensa.html":{},"injectables/SideNavigationService.html":{}}}],["closingtime",{"_index":1089,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["cluster_appmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":636,"title":{},"body":{"components/DialogComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["color",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["color($myaccent",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["color($myprimary",{"_index":716,"title":{},"body":{"components/EventsComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{}}}],["color($mywarn",{"_index":582,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{}}}],["color:white",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{}}}],["colorprimary",{"_index":812,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["colorwarn",{"_index":813,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["column",{"_index":791,"title":{},"body":{"components/ExamsComponent.html":{}}}],["command",{"_index":1747,"title":{},"body":{"index.html":{}}}],["compare",{"_index":637,"title":{},"body":{"components/DialogComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{},"coverage.html":{},"index.html":{}}}],["component.ts",{"_index":633,"title":{},"body":{"components/DialogComponent.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["concatenated",{"_index":856,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["concatenating",{"_index":861,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["config",{"_index":572,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["config($theme",{"_index":573,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["considers",{"_index":1328,"title":{},"body":{"injectables/NavigateService.html":{}}}],["console.log",{"_index":1564,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(\"calling",{"_index":911,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["console.log(\"clicked",{"_index":1302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(\"no",{"_index":1555,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(\"reached",{"_index":1092,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["console.log(\"room",{"_index":905,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/NavigationComponent.html":{}}}],["console.log(\"time",{"_index":907,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["console.log(fetcheddata",{"_index":1040,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["console.log(fetcheddata[x",{"_index":1042,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["console.log(lang",{"_index":1303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(response",{"_index":509,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/NavigateService.html":{}}}],["console.log(response.result",{"_index":612,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["console.log(this.authservice.getauthstatuslistener",{"_index":1304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.latlnga",{"_index":1511,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.latlngb",{"_index":1517,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.location.building",{"_index":1354,"title":{},"body":{"injectables/NavigateService.html":{}}}],["console.log(this.loginbuttonselected",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.navigate.location",{"_index":1558,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.navigate.location.room",{"_index":1557,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.navigate.selectedroom.room",{"_index":1556,"title":{},"body":{"components/NavigationComponent.html":{}}}],["console.log(this.selectedroom.floor",{"_index":1362,"title":{},"body":{"injectables/NavigateService.html":{}}}],["console.log(this.service.array[1].id",{"_index":1180,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.signupbuttonselected",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.state",{"_index":1300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.user.email",{"_index":609,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["console.log(user.name",{"_index":505,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["const",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/FreeRoomComponent.html":{},"modules/I18nModule.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":645,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(authservice",{"_index":409,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"guards/authorizationGuard.html":{}}}],["constructor(data",{"_index":622,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(dialog",{"_index":441,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(eventsservice",{"_index":1124,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["constructor(examservice",{"_index":748,"title":{},"body":{"components/ExamsComponent.html":{}}}],["constructor(http",{"_index":597,"title":{},"body":{"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{}}}],["constructor(lecturesservice",{"_index":847,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["constructor(mensaservice",{"_index":1234,"title":{},"body":{"components/MensaComponent.html":{}}}],["constructor(name",{"_index":1593,"title":{},"body":{"classes/Users.html":{}}}],["constructor(navigate",{"_index":1387,"title":{},"body":{"components/NavigationComponent.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{}}}],["constructor(public",{"_index":504,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(room",{"_index":1574,"title":{},"body":{"classes/Room.html":{}}}],["constructor(service",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(translate",{"_index":1094,"title":{},"body":{"modules/I18nModule.html":{}}}],["contact",{"_index":822,"title":{},"body":{"components/FooterComponent.html":{}}}],["container",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/FreeRoomComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{}}}],["contains",{"_index":991,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LoginComponent.html":{}}}],["content",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BodyComponent.html":{},"components/FreeRoomComponent.html":{}}}],["context",{"_index":1654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":1526,"title":{},"body":{"components/NavigationComponent.html":{}}}],["control",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["converting",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["converts",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["cookie",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["coordiantes",{"_index":1432,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinate",{"_index":1576,"title":{},"body":{"classes/Room.html":{}}}],["coordinates",{"_index":1201,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["coordinates[0",{"_index":1506,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinates[1",{"_index":1508,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslata",{"_index":1371,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslata:string",{"_index":1499,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslatb",{"_index":1372,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslatb:string",{"_index":1501,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslonga",{"_index":1373,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslonga:string",{"_index":1498,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslongb",{"_index":1374,"title":{},"body":{"components/NavigationComponent.html":{}}}],["coordinateslongb:string",{"_index":1500,"title":{},"body":{"components/NavigationComponent.html":{}}}],["copy",{"_index":1525,"title":{},"body":{"components/NavigationComponent.html":{}}}],["corporateidtextcolor($theme",{"_index":571,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["corresponds",{"_index":1398,"title":{},"body":{"components/NavigationComponent.html":{}}}],["corrosponding",{"_index":625,"title":{},"body":{"components/DialogComponent.html":{}}}],["cors",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["course",{"_index":729,"title":{},"body":{"interfaces/Exam.html":{}}}],["courseofstudy",{"_index":723,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{}}}],["coverage",{"_index":1621,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1427,"title":{},"body":{"components/NavigationComponent.html":{}}}],["creates",{"_index":1414,"title":{},"body":{"components/NavigationComponent.html":{}}}],["creating",{"_index":1271,"title":{},"body":{"components/NavbarComponent.html":{}}}],["credential",{"_index":600,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{}}}],["credentialpost",{"_index":1595,"title":{},"body":{"classes/Users.html":{}}}],["credentials",{"_index":462,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{},"classes/Users.html":{}}}],["credentialspostservice",{"_index":592,"title":{"injectables/CredentialsPostService.html":{}},"body":{"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["credit",{"_index":824,"title":{},"body":{"components/FooterComponent.html":{}}}],["current",{"_index":663,"title":{},"body":{"interfaces/Events.html":{}}}],["d301",{"_index":1466,"title":{},"body":{"components/NavigationComponent.html":{}}}],["data",{"_index":458,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["data.roomqr.building",{"_index":647,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.roomqr.floor",{"_index":648,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.roomqr.room",{"_index":646,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.roomset.building",{"_index":650,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.roomset.floor",{"_index":651,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.roomset.room",{"_index":649,"title":{},"body":{"components/DialogComponent.html":{}}}],["database",{"_index":983,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["datasource",{"_index":742,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["date",{"_index":860,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{},"interfaces/calendarEntry.html":{}}}],["date(date.gettime",{"_index":918,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["date/time",{"_index":912,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{}}}],["datetime",{"_index":853,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{}}}],["day",{"_index":724,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"interfaces/calendarEntry.html":{}}}],["day','mainplate','salad','drinks",{"_index":1240,"title":{},"body":{"components/MensaComponent.html":{}}}],["day/date",{"_index":675,"title":{},"body":{"interfaces/Events.html":{},"interfaces/calendarEntry.html":{}}}],["day:x.day",{"_index":1078,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["de",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"components/NavbarComponent.html":{}}}],["declarations",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":639,"title":{},"body":{"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["deep",{"_index":938,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["deep.mat",{"_index":1109,"title":{},"body":{"components/InfoComponent.html":{}}}],["default",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{}}}],["defines",{"_index":1194,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["deg.de/thabella/opn/api/events/20200318",{"_index":1055,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["deg.de/thabella/opn/period/findbyroom/${id}/${datetime",{"_index":1032,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["deggendorf",{"_index":1413,"title":{},"body":{"components/NavigationComponent.html":{}}}],["deletedata(userid",{"_index":1178,"title":{},"body":{"components/LoginComponent.html":{}}}],["dependencies",{"_index":233,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{}}}],["description','organiser','label",{"_index":1130,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["description','organiser','participants','startdatetime",{"_index":882,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["desired",{"_index":1610,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["destruction",{"_index":1438,"title":{},"body":{"components/NavigationComponent.html":{}}}],["detoured",{"_index":1612,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["dev",{"_index":1718,"title":{},"body":{"index.html":{}}}],["development",{"_index":1715,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":434,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["dialog'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["dialog.component.html",{"_index":621,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog.component.scss",{"_index":620,"title":{},"body":{"components/DialogComponent.html":{}}}],["dialog/dialog.component",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/NavigationComponent.html":{}}}],["dialogcomponent",{"_index":199,"title":{"components/DialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogref",{"_index":1551,"title":{},"body":{"components/NavigationComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1554,"title":{},"body":{"components/NavigationComponent.html":{}}}],["dialogstatus",{"_index":1375,"title":{},"body":{"components/NavigationComponent.html":{}}}],["difference",{"_index":915,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["different",{"_index":618,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["directive",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["directives",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1726,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1730,"title":{},"body":{"index.html":{}}}],["display",{"_index":715,"title":{},"body":{"components/EventsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{}}}],["display:flex",{"_index":932,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["displayedcolumns",{"_index":743,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["dist",{"_index":1729,"title":{},"body":{"index.html":{}}}],["div",{"_index":583,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["div.center",{"_index":1269,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["div.overimage",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["div.seven",{"_index":830,"title":{},"body":{"components/FooterComponent.html":{}}}],["div.two",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{}}}],["documentation",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["domuserauthenticated",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["domuserauthenticated:string",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["drinks",{"_index":1083,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["duration",{"_index":725,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{}}}],["duration','room','examiner','semester','type",{"_index":780,"title":{},"body":{"components/ExamsComponent.html":{}}}],["during",{"_index":662,"title":{},"body":{"interfaces/Events.html":{}}}],["dynamic",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1741,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":384,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":389,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":387,"title":{},"body":{"classes/AppPage.html":{}}}],["e401",{"_index":1467,"title":{},"body":{"components/NavigationComponent.html":{}}}],["each",{"_index":1285,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["eastern",{"_index":872,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["element",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["element(by.css('app",{"_index":392,"title":{},"body":{"classes/AppPage.html":{}}}],["element.closingtime",{"_index":1251,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.courseofstudy",{"_index":801,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.day",{"_index":802,"title":{},"body":{"components/ExamsComponent.html":{},"components/MensaComponent.html":{}}}],["element.description",{"_index":926,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{}}}],["element.drinks",{"_index":1248,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.duration",{"_index":804,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.examiner",{"_index":806,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.info.begin",{"_index":1138,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["element.info.end",{"_index":1139,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["element.info.name",{"_index":1137,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["element.label",{"_index":1136,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["element.mainplate",{"_index":1246,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.openingtime",{"_index":1250,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.organiser",{"_index":927,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{}}}],["element.participants",{"_index":931,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["element.price",{"_index":1249,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.room",{"_index":805,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.salad",{"_index":1247,"title":{},"body":{"components/MensaComponent.html":{}}}],["element.semester",{"_index":807,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.startdatetime",{"_index":929,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["element.subject",{"_index":800,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.time",{"_index":803,"title":{},"body":{"components/ExamsComponent.html":{}}}],["element.type",{"_index":808,"title":{},"body":{"components/ExamsComponent.html":{}}}],["elements",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{}}}],["email",{"_index":451,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"classes/Users.html":{}}}],["empty",{"_index":535,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["emptying",{"_index":995,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["en",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"components/NavbarComponent.html":{}}}],["enable",{"_index":1451,"title":{},"body":{"components/NavigationComponent.html":{}}}],["enabled",{"_index":1376,"title":{},"body":{"components/NavigationComponent.html":{}}}],["enabled:boolean",{"_index":1502,"title":{},"body":{"components/NavigationComponent.html":{}}}],["end",{"_index":1059,"title":{},"body":{"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{},"interfaces/calendarEntry.html":{},"index.html":{}}}],["ending",{"_index":1620,"title":{},"body":{"interfaces/calendarEntry.html":{}}}],["eng",{"_index":701,"title":{},"body":{"components/EventsComponent.html":{}}}],["ensuring",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["entrycomponents",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1184,"title":{},"body":{"components/LoginComponent.html":{}}}],["esri",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["european",{"_index":873,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["event",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{},"interfaces/calendarEntry.html":{}}}],["events",{"_index":157,"title":{"interfaces/Events.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{},"components/NavbarComponent.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["events'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["events.component.html",{"_index":681,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.scss",{"_index":680,"title":{},"body":{"components/EventsComponent.html":{}}}],["events/events.component",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["events1",{"_index":687,"title":{},"body":{"components/EventsComponent.html":{}}}],["events2",{"_index":695,"title":{},"body":{"components/EventsComponent.html":{}}}],["events3",{"_index":699,"title":{},"body":{"components/EventsComponent.html":{}}}],["events4",{"_index":702,"title":{},"body":{"components/EventsComponent.html":{}}}],["events5",{"_index":707,"title":{},"body":{"components/EventsComponent.html":{}}}],["events6",{"_index":710,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":201,"title":{"components/EventsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventscomponent},{path",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["eventsmodel",{"_index":1044,"title":{},"body":{"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{}}}],["eventsservice",{"_index":1123,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["exam",{"_index":160,"title":{"interfaces/Exam.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["exam's",{"_index":733,"title":{},"body":{"interfaces/Exam.html":{}}}],["examiner",{"_index":726,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{}}}],["exammodel",{"_index":787,"title":{},"body":{"components/ExamsComponent.html":{},"injectables/HttpService.html":{}}}],["exams",{"_index":739,"title":{},"body":{"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"components/InfoComponent.html":{}}}],["exams'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["exams.component.html",{"_index":741,"title":{},"body":{"components/ExamsComponent.html":{}}}],["exams.component.scss",{"_index":740,"title":{},"body":{"components/ExamsComponent.html":{}}}],["examscomponent",{"_index":203,"title":{"components/ExamsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["examservice",{"_index":744,"title":{},"body":{"components/ExamsComponent.html":{}}}],["examsmodel",{"_index":982,"title":{},"body":{"injectables/HttpService.html":{}}}],["execute",{"_index":1738,"title":{},"body":{"index.html":{}}}],["executed",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["exists",{"_index":488,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["export",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{}}}],["exportas",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["exports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/I18nModule.html":{},"overview.html":{}}}],["express",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["extra",{"_index":671,"title":{},"body":{"interfaces/Events.html":{},"components/LoginComponent.html":{}}}],["f401",{"_index":1468,"title":{},"body":{"components/NavigationComponent.html":{}}}],["faculty",{"_index":1116,"title":{},"body":{"interfaces/Lecture.html":{}}}],["failed",{"_index":607,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{}}}],["false",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fetch",{"_index":1316,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["fetchdata",{"_index":1176,"title":{},"body":{"components/LoginComponent.html":{}}}],["fetched",{"_index":1337,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["fetcheddata",{"_index":1017,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{}}}],["fetcheddata[0].building",{"_index":1350,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetcheddata[0].lat",{"_index":1352,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetcheddata[0].long",{"_index":1351,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetcheddata[x",{"_index":1019,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["fetches",{"_index":769,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{}}}],["fetchfromserver",{"_index":1322,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetching",{"_index":751,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{}}}],["fetchqrroom",{"_index":1382,"title":{},"body":{"components/NavigationComponent.html":{}}}],["fetchroomfromserver",{"_index":1323,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetchroomfromserver(room",{"_index":1338,"title":{},"body":{"injectables/NavigateService.html":{}}}],["fetchselectedroom",{"_index":1383,"title":{},"body":{"components/NavigationComponent.html":{}}}],["fetchselectedroom(room",{"_index":1404,"title":{},"body":{"components/NavigationComponent.html":{}}}],["field",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["files",{"_index":1723,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1183,"title":{},"body":{"components/LoginComponent.html":{}}}],["filled",{"_index":760,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["filter",{"_index":746,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["filter(filtervalue",{"_index":754,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["filtering",{"_index":756,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["filtervalue",{"_index":758,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":799,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["find",{"_index":1406,"title":{},"body":{"components/NavigationComponent.html":{}}}],["finished",{"_index":773,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["five",{"_index":563,"title":{},"body":{"components/BodyComponent.html":{}}}],["fixed",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1732,"title":{},"body":{"index.html":{}}}],["flex",{"_index":942,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["flexlayoutmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":559,"title":{},"body":{"components/BodyComponent.html":{}}}],["float:right",{"_index":1267,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["floor",{"_index":1544,"title":{},"body":{"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["focus",{"_index":1410,"title":{},"body":{"components/NavigationComponent.html":{}}}],["following",{"_index":624,"title":{},"body":{"components/DialogComponent.html":{}}}],["font",{"_index":934,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{}}}],["footer",{"_index":816,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["footer.component.html",{"_index":819,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":818,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["footercomponent",{"_index":205,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":466,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["form.value.email",{"_index":1173,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.value.password",{"_index":1174,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["four",{"_index":557,"title":{},"body":{"components/BodyComponent.html":{}}}],["frame",{"_index":1567,"title":{},"body":{"components/NavigationComponent.html":{}}}],["free",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService-1.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["freeroom",{"_index":922,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/InfoComponent.html":{}}}],["freeroom.component.html",{"_index":837,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["freeroom.component.scss",{"_index":836,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["freeroomcomponent",{"_index":207,"title":{"components/FreeRoomComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["frontend",{"_index":498,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["fully",{"_index":764,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["function",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"modules/I18nModule.html":{},"coverage.html":{}}}],["functionality",{"_index":1175,"title":{},"body":{"components/LoginComponent.html":{}}}],["functions",{"_index":1705,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1742,"title":{},"body":{"index.html":{}}}],["g401",{"_index":1469,"title":{},"body":{"components/NavigationComponent.html":{}}}],["generate",{"_index":1725,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1712,"title":{},"body":{"index.html":{}}}],["geneva",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ger",{"_index":693,"title":{},"body":{"components/EventsComponent.html":{}}}],["get($config",{"_index":575,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["getauthstatuslistener",{"_index":437,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteventinfofromserver",{"_index":1046,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["getexaminfofromserver",{"_index":984,"title":{},"body":{"injectables/HttpService.html":{}}}],["getlectureinfofromserver",{"_index":1023,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["getlectureinfofromserver(id",{"_index":1025,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["getlectureinfofromserver(id:any",{"_index":1027,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["getmensainfofromserver",{"_index":1069,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["getstoreduserauthenticationstate",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["getting",{"_index":1348,"title":{"index.html":{}},"body":{"injectables/NavigateService.html":{}}}],["gettitletext",{"_index":385,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":438,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["global",{"_index":1458,"title":{},"body":{"components/NavigationComponent.html":{}}}],["gmt+0000",{"_index":871,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["go",{"_index":1745,"title":{},"body":{"index.html":{}}}],["going",{"_index":660,"title":{},"body":{"interfaces/Events.html":{},"injectables/HttpService-1.html":{}}}],["graph",{"_index":1755,"title":{},"body":{"modules.html":{}}}],["graphhopper",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["green",{"_index":558,"title":{},"body":{"components/BodyComponent.html":{}}}],["guard",{"_index":328,"title":{"guards/authorizationGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"guards/authorizationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.ts",{"_index":1602,"title":{},"body":{"guards/authorizationGuard.html":{},"coverage.html":{}}}],["guard.ts:23",{"_index":1606,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["guard.ts:8",{"_index":1605,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["guards",{"_index":1600,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["h1",{"_index":653,"title":{},"body":{"components/DialogComponent.html":{}}}],["hand",{"_index":1402,"title":{},"body":{"components/NavigationComponent.html":{}}}],["handler",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["happen",{"_index":661,"title":{},"body":{"interfaces/Events.html":{}}}],["header",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/EventsComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"injectables/SideNavigationService.html":{}}}],["header'},{'name",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["header.component.html",{"_index":951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["header2",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":209,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["headersource",{"_index":1581,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["headerstate",{"_index":1582,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["height",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["held",{"_index":1022,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["help",{"_index":1743,"title":{},"body":{"index.html":{}}}],["hhtpclient",{"_index":1327,"title":{},"body":{"injectables/NavigateService.html":{}}}],["hidden",{"_index":568,"title":{},"body":{"components/BodyComponent.html":{}}}],["hide/show",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["highlight",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hint",{"_index":1182,"title":{},"body":{"components/LoginComponent.html":{}}}],["home",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"components/NavbarComponent.html":{}}}],["home1",{"_index":537,"title":{},"body":{"components/BodyComponent.html":{}}}],["home2",{"_index":539,"title":{},"body":{"components/BodyComponent.html":{}}}],["home3",{"_index":540,"title":{},"body":{"components/BodyComponent.html":{}}}],["home4",{"_index":542,"title":{},"body":{"components/BodyComponent.html":{}}}],["home5",{"_index":544,"title":{},"body":{"components/BodyComponent.html":{}}}],["home6",{"_index":546,"title":{},"body":{"components/BodyComponent.html":{}}}],["home7",{"_index":548,"title":{},"body":{"components/BodyComponent.html":{}}}],["home8",{"_index":550,"title":{},"body":{"components/BodyComponent.html":{}}}],["home9",{"_index":552,"title":{},"body":{"components/BodyComponent.html":{}}}],["homepage",{"_index":531,"title":{},"body":{"components/BodyComponent.html":{}}}],["html",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["htnl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["http.service",{"_index":788,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["http://localhost:3000/api/login",{"_index":507,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["http://localhost:3000/api/rooms",{"_index":1357,"title":{},"body":{"injectables/NavigateService.html":{}}}],["http://localhost:3000/api/userspost",{"_index":610,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["http://localhost:4200",{"_index":1719,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"injectables/NavigateService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["httphandler",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":413,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://thabella.th",{"_index":1031,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png",{"_index":1522,"title":{},"body":{"components/NavigationComponent.html":{}}}],["httpservice",{"_index":749,"title":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"coverage.html":{}}}],["i18n/i18n.module",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule",{"_index":244,"title":{"modules/I18nModule.html":{}},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"modules.html":{},"overview.html":{}}}],["icon",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/EventsComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"miscellaneous/variables.html":{}}}],["icon.png",{"_index":1483,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["iconanchor",{"_index":1489,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["icondefault",{"_index":1486,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconretinaurl",{"_index":1479,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconsize",{"_index":1487,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["iconurl",{"_index":1482,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":666,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{},"interfaces/Mensa.html":{},"classes/Room.html":{},"classes/Users.html":{}}}],["identifier",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":887,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["if(this.domuserauthenticated",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["if(this.marker",{"_index":1532,"title":{},"body":{"components/NavigationComponent.html":{}}}],["if(this.route",{"_index":1530,"title":{},"body":{"components/NavigationComponent.html":{}}}],["image",{"_index":1313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["img",{"_index":585,"title":{},"body":{"components/BodyComponent.html":{},"components/HeaderComponent.html":{}}}],["implements",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["import",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["important",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/I18nModule.html":{}}}],["include",{"_index":584,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["incluse",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{}}}],["info'},{'name",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["info.component.html",{"_index":1105,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":1104,"title":{},"body":{"components/InfoComponent.html":{}}}],["info/exams/exams.component",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["info/freeroom/freeroom.component",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["info/info.component",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info/lectures",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["info/mensa/mensa.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["infocomponent",{"_index":211,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["information",{"_index":672,"title":{},"body":{"interfaces/Events.html":{}}}],["initialization",{"_index":536,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{}}}],["initialized",{"_index":765,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["initiating",{"_index":998,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["initilization",{"_index":767,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["initmap",{"_index":1384,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inject",{"_index":642,"title":{},"body":{"components/DialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":640,"title":{},"body":{"components/DialogComponent.html":{}}}],["injectable",{"_index":423,"title":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"injectables/SideNavigationService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":432,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"injectables/SideNavigationService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":643,"title":{},"body":{"components/DialogComponent.html":{}}}],["input",{"_index":759,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{}}}],["inside",{"_index":484,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["instance",{"_index":665,"title":{},"body":{"interfaces/Events.html":{},"injectables/HttpService-2.html":{}}}],["instantiated",{"_index":1428,"title":{},"body":{"components/NavigationComponent.html":{}}}],["instantiates",{"_index":1408,"title":{},"body":{"components/NavigationComponent.html":{}}}],["instantiating",{"_index":776,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["intercept",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercepter",{"_index":473,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["interceptor",{"_index":296,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:19",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:8",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptors",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercepts",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":655,"title":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/Lecture.html":{},"interfaces/Mensa.html":{},"interfaces/calendarEntry.html":{}},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/Lecture.html":{},"interfaces/Mensa.html":{},"components/NavigationComponent.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["interfaces",{"_index":656,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/Lecture.html":{},"interfaces/Mensa.html":{},"interfaces/calendarEntry.html":{},"overview.html":{}}}],["invoked",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["invokes",{"_index":987,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavbarComponent.html":{}}}],["invoking",{"_index":855,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["isauthenticated",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["items",{"_index":1229,"title":{},"body":{"interfaces/Mensa.html":{}}}],["json",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["json.stringify(this.userisauthenticated",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["jsonwebtoken",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":933,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["jwt",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{}}}],["karma",{"_index":1740,"title":{},"body":{"index.html":{}}}],["key",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["keyboard_arrow_down",{"_index":924,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["l",{"_index":1476,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.latlng",{"_index":1452,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.latlng(parsefloat(this.coordinateslata),parsefloat(this.coordinateslonga",{"_index":1510,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.latlng(parsefloat(this.coordinateslatb),parsefloat(this.coordinateslongb",{"_index":1516,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.layergroup",{"_index":1455,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.layergroup().addto(this.map",{"_index":1529,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.map",{"_index":1420,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.map('map').setview([48.8296,12.9547",{"_index":1519,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.marker(this.latlnga).addto(this.layer",{"_index":1536,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.marker(this.latlngb).addto(this.layer",{"_index":1537,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.routing.control",{"_index":1539,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.routing.osrmv1({}),showalternatives",{"_index":1540,"title":{},"body":{"components/NavigationComponent.html":{}}}],["l.tilelayer",{"_index":1521,"title":{},"body":{"components/NavigationComponent.html":{}}}],["label",{"_index":667,"title":{},"body":{"interfaces/Events.html":{},"injectables/HttpService-2.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"classes/Room.html":{}}}],["labels",{"_index":1110,"title":{},"body":{"components/InfoComponent.html":{}}}],["lang",{"_index":692,"title":{},"body":{"components/EventsComponent.html":{},"components/NavbarComponent.html":{}}}],["langitude",{"_index":1441,"title":{},"body":{"components/NavigationComponent.html":{}}}],["langtitude",{"_index":1212,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["language",{"_index":1279,"title":{},"body":{"components/NavbarComponent.html":{}}}],["languages",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["lat",{"_index":1434,"title":{},"body":{"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["lat/lng",{"_index":1431,"title":{},"body":{"components/NavigationComponent.html":{}}}],["lat/long",{"_index":1214,"title":{},"body":{"injectables/MarkerService.html":{}}}],["later",{"_index":1573,"title":{},"body":{"classes/Room.html":{}}}],["latlng",{"_index":1424,"title":{},"body":{"components/NavigationComponent.html":{}}}],["latlnga",{"_index":1377,"title":{},"body":{"components/NavigationComponent.html":{}}}],["latlngb",{"_index":1378,"title":{},"body":{"components/NavigationComponent.html":{}}}],["layer",{"_index":1379,"title":{},"body":{"components/NavigationComponent.html":{}}}],["layers",{"_index":1426,"title":{},"body":{"components/NavigationComponent.html":{}}}],["layout",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leaflet",{"_index":1409,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["lecture",{"_index":164,"title":{"interfaces/Lecture.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"interfaces/Lecture.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["lecturemodel",{"_index":901,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{}}}],["lecturer",{"_index":1114,"title":{},"body":{"interfaces/Lecture.html":{}}}],["lectures",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService-1.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["lecturesmodel",{"_index":1021,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["lecturesplancomponent",{"_index":213,"title":{"components/LecturesPlanComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lecturesservice",{"_index":842,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["left",{"_index":565,"title":{},"body":{"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["left:10px",{"_index":1570,"title":{},"body":{"components/NavigationComponent.html":{}}}],["left:5",{"_index":810,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}],["lifted",{"_index":1609,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["linked",{"_index":1471,"title":{},"body":{"components/NavigationComponent.html":{}}}],["list",{"_index":886,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["literal",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lng",{"_index":1435,"title":{},"body":{"components/NavigationComponent.html":{}}}],["loader",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"dependencies.html":{}}}],["local",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["localstorage.getitem(\"userauthenticated",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["localstorage.getitem('token",{"_index":528,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["localstorage.removeitem(\"token",{"_index":527,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["localstorage.setitem",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.setitem(\"token",{"_index":526,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["location",{"_index":1320,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["location_on",{"_index":688,"title":{},"body":{"components/EventsComponent.html":{}}}],["log",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["login",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"guards/authorizationGuard.html":{}}}],["login'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["login.component.html",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/auth",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/sign",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginbuttonselected",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":216,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1545,"title":{},"body":{"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["long/lat",{"_index":1318,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["longtitude",{"_index":1213,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["lrm",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["machine",{"_index":1477,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Mensa.html":{}}}],["mainplate",{"_index":1079,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["makemarker",{"_index":1385,"title":{},"body":{"components/NavigationComponent.html":{}}}],["makemarker(map",{"_index":1419,"title":{},"body":{"components/NavigationComponent.html":{}}}],["makes",{"_index":1219,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/SideNavigationService.html":{}}}],["map",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["margin",{"_index":587,"title":{},"body":{"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["marker",{"_index":1196,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["marker.prototype.options.icon",{"_index":1497,"title":{},"body":{"components/NavigationComponent.html":{}}}],["marker.service",{"_index":1346,"title":{},"body":{"injectables/NavigateService.html":{}}}],["markerastate",{"_index":1203,"title":{},"body":{"injectables/MarkerService.html":{}}}],["markerbstate",{"_index":1204,"title":{},"body":{"injectables/MarkerService.html":{}}}],["markers",{"_index":1202,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["markerser",{"_index":1324,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["markerservice",{"_index":1192,"title":{"injectables/MarkerService.html":{}},"body":{"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"coverage.html":{}}}],["markersourcea",{"_index":1205,"title":{},"body":{"injectables/MarkerService.html":{}}}],["markersourceb",{"_index":1206,"title":{},"body":{"injectables/MarkerService.html":{}}}],["mat",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["mat_dialog_data",{"_index":644,"title":{},"body":{"components/DialogComponent.html":{}}}],["matbuttonmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":629,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["match\"/\"no",{"_index":1399,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matches",{"_index":463,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["matching",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":442,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/NavigationComponent.html":{}}}],["matdialogmodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":1389,"title":{},"body":{"components/NavigationComponent.html":{}}}],["matexpansionmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["math.abs(date.gettimezoneoffset()*60000",{"_index":919,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["maticonmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":783,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["matpaginatormodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":774,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["mattablemodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":586,"title":{},"body":{"components/BodyComponent.html":{},"components/NachrichtenComponent.html":{}}}],["maximum",{"_index":1417,"title":{},"body":{"components/NavigationComponent.html":{}}}],["maxzoom",{"_index":1523,"title":{},"body":{"components/NavigationComponent.html":{}}}],["media",{"_index":827,"title":{},"body":{"components/FooterComponent.html":{}}}],["mensa",{"_index":163,"title":{"interfaces/Mensa.html":{}},"body":{"components/AppComponent.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mensa'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["mensa.component.html",{"_index":1232,"title":{},"body":{"components/MensaComponent.html":{}}}],["mensa.component.scss",{"_index":1231,"title":{},"body":{"components/MensaComponent.html":{}}}],["mensacomponent",{"_index":218,"title":{"components/MensaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mensamodel",{"_index":1066,"title":{},"body":{"injectables/HttpService-3.html":{},"components/MensaComponent.html":{}}}],["mensas",{"_index":1068,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["mensaservice",{"_index":1233,"title":{},"body":{"components/MensaComponent.html":{}}}],["menu",{"_index":1067,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["message",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{}}}],["messages",{"_index":447,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{}}}],["metadata",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["method",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["method's",{"_index":1401,"title":{},"body":{"components/NavigationComponent.html":{}}}],["methods",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["milli",{"_index":771,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["miscellaneous",{"_index":1704,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1749,"title":{},"body":{"index.html":{}}}],["mixin",{"_index":570,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["model",{"_index":497,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"classes/Room.html":{},"classes/Users.html":{},"interfaces/calendarEntry.html":{}}}],["model's",{"_index":1343,"title":{},"body":{"injectables/NavigateService.html":{}}}],["models",{"_index":777,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{}}}],["models/room",{"_index":1345,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["models/room.ts",{"_index":1572,"title":{},"body":{"classes/Room.html":{},"coverage.html":{}}}],["models/room.ts:10",{"_index":1575,"title":{},"body":{"classes/Room.html":{}}}],["models/room.ts:19",{"_index":1577,"title":{},"body":{"classes/Room.html":{}}}],["models/users",{"_index":499,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["models/users.ts",{"_index":1592,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["models/users.ts:16",{"_index":1596,"title":{},"body":{"classes/Users.html":{}}}],["models/users.ts:9",{"_index":1594,"title":{},"body":{"classes/Users.html":{}}}],["module",{"_index":230,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/I18nModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":232,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/I18nModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":753,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{}}}],["mongoose",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1744,"title":{},"body":{"index.html":{}}}],["multi",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":1448,"title":{},"body":{"components/NavigationComponent.html":{}}}],["myaccent",{"_index":577,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["myapp",{"_index":1710,"title":{},"body":{"index.html":{}}}],["myprimary",{"_index":574,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["mywarn",{"_index":579,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["nachricht",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["nachrichten",{"_index":1253,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["nachrichten'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["nachrichten.component.html",{"_index":1255,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["nachrichten.component.scss",{"_index":1254,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["nachrichten/nachrichten.component",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["nachrichtencomponent",{"_index":220,"title":{"components/NachrichtenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["navbar",{"_index":469,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["navbar'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["navbar.component.html",{"_index":1274,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1273,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":222,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavigationComponent.html":{}}}],["navigate",{"_index":510,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/InfoComponent.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"index.html":{}}}],["navigates",{"_index":477,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["navigateservice",{"_index":1314,"title":{"injectables/NavigateService.html":{}},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"coverage.html":{}}}],["navigateto",{"_index":386,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"index.html":{}}}],["navigation.component.html",{"_index":1370,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1369,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["navigationcomponent",{"_index":224,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigattion",{"_index":632,"title":{},"body":{"components/DialogComponent.html":{}}}],["new",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"modules/I18nModule.html":{},"components/LecturesPlanComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{},"injectables/SideNavigationService.html":{},"coverage.html":{},"index.html":{}}}],["news",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{}}}],["news1",{"_index":1258,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["news2",{"_index":1260,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["news3",{"_index":1263,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["news4",{"_index":1261,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["news5",{"_index":1265,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["next",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":937,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":747,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["ngform",{"_index":460,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/HttpService-1.html":{},"components/LoginComponent.html":{}}}],["ngmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/I18nModule.html":{}}}],["ngondestroy",{"_index":1386,"title":{},"body":{"components/NavigationComponent.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["ngx",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["null",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["nulls",{"_index":1437,"title":{},"body":{"components/NavigationComponent.html":{}}}],["number",{"_index":1341,"title":{},"body":{"injectables/NavigateService.html":{},"classes/Room.html":{}}}],["object",{"_index":603,"title":{},"body":{"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":752,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["observable",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["observables",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["obtained",{"_index":495,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["occuring",{"_index":832,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["offered",{"_index":1227,"title":{},"body":{"interfaces/Mensa.html":{},"components/NavbarComponent.html":{}}}],["ok",{"_index":652,"title":{},"body":{"components/DialogComponent.html":{}}}],["once",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["ondestroy",{"_index":1298,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["one",{"_index":464,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["oneroom",{"_index":1543,"title":{},"body":{"components/NavigationComponent.html":{}}}],["oninit",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["onlogout",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(form",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["opacity",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["opened/closed",{"_index":1288,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opening",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Mensa.html":{},"injectables/SideNavigationService.html":{}}}],["openingtime",{"_index":1087,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["openingtime','closingtime",{"_index":1241,"title":{},"body":{"components/MensaComponent.html":{}}}],["opennavigationbar",{"_index":1275,"title":{},"body":{"components/NavbarComponent.html":{}}}],["openstreetmap",{"_index":1416,"title":{},"body":{"components/NavigationComponent.html":{}}}],["optional",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1199,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["organiser",{"_index":668,"title":{},"body":{"interfaces/Events.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{}}}],["originates",{"_index":630,"title":{},"body":{"components/DialogComponent.html":{},"injectables/SideNavigationService.html":{}}}],["otherwise",{"_index":606,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["out",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["outgoing",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{}}}],["outline",{"_index":940,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["overflow",{"_index":567,"title":{},"body":{"components/BodyComponent.html":{}}}],["overflow:hidden",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["overimage",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["overview",{"_index":1746,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":713,"title":{},"body":{"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["p,span",{"_index":1268,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["p.mat",{"_index":714,"title":{},"body":{"components/EventsComponent.html":{},"components/HeaderComponent.html":{},"components/NachrichtenComponent.html":{}}}],["package",{"_index":1657,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["page",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{},"index.html":{}}}],["pages",{"_index":817,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["paginator",{"_index":745,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["panel",{"_index":712,"title":{},"body":{"components/EventsComponent.html":{}}}],["param",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{}}}],["parameter",{"_index":778,"title":{},"body":{"components/ExamsComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1103,"title":{},"body":{"components/InfoComponent.html":{}}}],["parser",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1618,"title":{},"body":{"interfaces/calendarEntry.html":{}}}],["participants",{"_index":930,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{}}}],["password",{"_index":452,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"classes/Users.html":{}}}],["path",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["performed",{"_index":768,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["person_outline",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["person_outline{{\"login",{"_index":1306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["person_outline{{\"logout",{"_index":1307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipe(map((response",{"_index":1005,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["place",{"_index":677,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/Lecture.html":{},"interfaces/calendarEntry.html":{}}}],["plan",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Events.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/NavbarComponent.html":{}}}],["plan'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["plan.component",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["plan.component.html",{"_index":1122,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.scss",{"_index":1121,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts",{"_index":1118,"title":{},"body":{"components/LecturesPlanComponent.html":{},"coverage.html":{}}}],["plan.component.ts:17",{"_index":1133,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:21",{"_index":1129,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:25",{"_index":1125,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:31",{"_index":1132,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:40",{"_index":1128,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:47",{"_index":1127,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan.component.ts:55",{"_index":1126,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plan/calenderentry.ts",{"_index":1617,"title":{},"body":{"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["plan/eventsmodel.ts",{"_index":658,"title":{},"body":{"interfaces/Events.html":{},"coverage.html":{}}}],["plan/http.service.ts",{"_index":1043,"title":{},"body":{"injectables/HttpService-2.html":{},"coverage.html":{}}}],["plan/http.service.ts:16",{"_index":1049,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["plan/http.service.ts:20",{"_index":1047,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["plan/http.service.ts:32",{"_index":1048,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["plan/lectures",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LecturesPlanComponent.html":{},"coverage.html":{}}}],["planned",{"_index":1119,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["plans",{"_index":1045,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["plate",{"_index":1228,"title":{},"body":{"interfaces/Mensa.html":{}}}],["point",{"_index":1197,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["points",{"_index":1329,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["pop",{"_index":626,"title":{},"body":{"components/DialogComponent.html":{}}}],["popupanchor",{"_index":1491,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavbarComponent.html":{}}}],["position:fixed",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":483,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{}}}],["posting/storing",{"_index":594,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["posts",{"_index":457,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["pres",{"_index":703,"title":{},"body":{"components/EventsComponent.html":{}}}],["pressed",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["prevent",{"_index":1447,"title":{},"body":{"components/NavigationComponent.html":{}}}],["previous",{"_index":1422,"title":{},"body":{"components/NavigationComponent.html":{}}}],["price",{"_index":1085,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["primary",{"_index":576,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["printdata",{"_index":843,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["printdata(id",{"_index":852,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["private",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["prod",{"_index":1731,"title":{},"body":{"index.html":{}}}],["production",{"_index":1733,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1711,"title":{},"body":{"index.html":{}}}],["promise",{"_index":388,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"interfaces/calendarEntry.html":{}}}],["property",{"_index":1289,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["protect",{"_index":1603,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["protection",{"_index":825,"title":{},"body":{"components/FooterComponent.html":{}}}],["protractor",{"_index":390,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["provide:http_interceptors",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":501,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{}}}],["providers",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["psta",{"_index":734,"title":{},"body":{"interfaces/Exam.html":{}}}],["public",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"classes/Users.html":{}}}],["publish",{"_index":1331,"title":{},"body":{"injectables/NavigateService.html":{}}}],["pushing",{"_index":1589,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["px",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["qr",{"_index":635,"title":{},"body":{"components/DialogComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["qr_code_scanner",{"_index":1565,"title":{},"body":{"components/NavigationComponent.html":{}}}],["raised",{"_index":591,"title":{},"body":{"components/BodyComponent.html":{},"components/NachrichtenComponent.html":{}}}],["random",{"_index":1335,"title":{},"body":{"injectables/NavigateService.html":{}}}],["reactiveformsmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":634,"title":{},"body":{"components/DialogComponent.html":{},"components/NavigationComponent.html":{}}}],["reading",{"_index":1334,"title":{},"body":{"injectables/NavigateService.html":{}}}],["recieved",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["reference",{"_index":1748,"title":{},"body":{"index.html":{}}}],["reflects",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["reload",{"_index":1721,"title":{},"body":{"index.html":{}}}],["removes",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["reorder",{"_index":1305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["represent",{"_index":476,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["represents",{"_index":492,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/Lecture.html":{},"injectables/MarkerService.html":{},"classes/Users.html":{}}}],["req",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["requests",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{}}}],["require",{"_index":1655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{}}}],["resembles",{"_index":659,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Mensa.html":{}}}],["reset",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["resides",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/ExamsComponent.html":{}}}],["resizedatefield",{"_index":948,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["resizefield",{"_index":946,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["response",{"_index":482,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{}}}],["response.authtoken",{"_index":513,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["response.result",{"_index":613,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["restructured",{"_index":988,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["result",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"guards/authorizationGuard.html":{}}}],["returned",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavigationComponent.html":{}}}],["returns",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"guards/authorizationGuard.html":{}}}],["right",{"_index":560,"title":{},"body":{"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["right:10px",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["right:5",{"_index":811,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["room",{"_index":628,"title":{"classes/Room.html":{}},"body":{"components/DialogComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"coverage.html":{}}}],["room'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["room(fetcheddata[0].room,fetcheddata[0].floor",{"_index":1349,"title":{},"body":{"injectables/NavigateService.html":{}}}],["roomqr",{"_index":1561,"title":{},"body":{"components/NavigationComponent.html":{}}}],["rooms",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService-1.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["roomset",{"_index":1559,"title":{},"body":{"components/NavigationComponent.html":{}}}],["roomsmodel",{"_index":1317,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{}}}],["roomsmodel's",{"_index":1340,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["root",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{}}}],["root'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["route",{"_index":443,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["router",{"_index":444,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{}}}],["routermodule",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":99,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{},"overview.html":{},"routes.html":{}}}],["routewhiledragging",{"_index":1541,"title":{},"body":{"components/NavigationComponent.html":{}}}],["routing",{"_index":1473,"title":{},"body":{"components/NavigationComponent.html":{},"dependencies.html":{}}}],["routing.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1716,"title":{},"body":{"index.html":{}}}],["running",{"_index":1734,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":500,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/MarkerService.html":{},"injectables/SideNavigationService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":992,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["salad",{"_index":1081,"title":{},"body":{"injectables/HttpService-3.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{}}}],["same",{"_index":1450,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sans",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["save",{"_index":511,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["saveauthdata",{"_index":439,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["saveauthdata(token",{"_index":479,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["saves",{"_index":481,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["scaffolding",{"_index":1724,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":722,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{}}}],["schedule09:00",{"_index":690,"title":{},"body":{"components/EventsComponent.html":{}}}],["schedule10:00",{"_index":704,"title":{},"body":{"components/EventsComponent.html":{}}}],["schedule16:00",{"_index":700,"title":{},"body":{"components/EventsComponent.html":{}}}],["schedule18:00",{"_index":696,"title":{},"body":{"components/EventsComponent.html":{}}}],["search",{"_index":925,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["second",{"_index":1396,"title":{},"body":{"components/NavigationComponent.html":{}}}],["secondmarker",{"_index":1380,"title":{},"body":{"components/NavigationComponent.html":{}}}],["seconds",{"_index":772,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["section",{"_index":717,"title":{},"body":{"components/EventsComponent.html":{}}}],["security",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["segoe",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["select",{"_index":888,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["selectbutton",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectbutton2",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["selected",{"_index":859,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["selectedroom",{"_index":1321,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["selecting",{"_index":1403,"title":{},"body":{"components/NavigationComponent.html":{}}}],["selector",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["selects",{"_index":1449,"title":{},"body":{"components/NavigationComponent.html":{}}}],["semester",{"_index":664,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"components/LecturesPlanComponent.html":{},"interfaces/calendarEntry.html":{}}}],["send",{"_index":1200,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["sending",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["sends",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/MarkerService.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"injectables/SideNavigationService.html":{}}}],["sendstate",{"_index":1207,"title":{},"body":{"injectables/MarkerService.html":{},"injectables/SideNavigationService.html":{}}}],["sendstate(coordinates",{"_index":1210,"title":{},"body":{"injectables/MarkerService.html":{}}}],["sendstate(message",{"_index":1583,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["sendstate2",{"_index":1208,"title":{},"body":{"injectables/MarkerService.html":{}}}],["sendstate2(coordinates",{"_index":1215,"title":{},"body":{"injectables/MarkerService.html":{}}}],["sent",{"_index":1590,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["separate",{"_index":1433,"title":{},"body":{"components/NavigationComponent.html":{}}}],["serif",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serve",{"_index":1717,"title":{},"body":{"index.html":{}}}],["server",{"_index":595,"title":{},"body":{"injectables/CredentialsPostService.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"index.html":{}}}],["servic",{"_index":1282,"title":{},"body":{"components/NavbarComponent.html":{}}}],["service",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{}}}],["services",{"_index":449,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["services/authorization.service",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["services/credentialspost.service",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/marker.service",{"_index":1478,"title":{},"body":{"components/NavigationComponent.html":{}}}],["services/navigate.service",{"_index":1475,"title":{},"body":{"components/NavigationComponent.html":{}}}],["services/sidenav.service",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["set",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["setdate",{"_index":844,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["setdate(date",{"_index":857,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["setid",{"_index":845,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["setid(x",{"_index":862,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["sets",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["settime",{"_index":846,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["settime(x",{"_index":865,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["settimeout",{"_index":793,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["seven",{"_index":829,"title":{},"body":{"components/FooterComponent.html":{}}}],["shadow.png",{"_index":1485,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["shadowsize",{"_index":1496,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["shadowurl",{"_index":1484,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["show",{"_index":517,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["show/hide",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["showing",{"_index":446,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["shown",{"_index":1400,"title":{},"body":{"components/NavigationComponent.html":{}}}],["shows",{"_index":605,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["side",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["sidenav",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavigation",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenavigationservice",{"_index":39,"title":{"injectables/SideNavigationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":519,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["signup",{"_index":614,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{}}}],["signupbuttonselected",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["simulates",{"_index":1333,"title":{},"body":{"injectables/NavigateService.html":{}}}],["site",{"_index":823,"title":{},"body":{"components/FooterComponent.html":{}}}],["six",{"_index":566,"title":{},"body":{"components/BodyComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["size",{"_index":935,"title":{},"body":{"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{}}}],["slot",{"_index":867,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["slots",{"_index":900,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["solid",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"components/EventsComponent.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"modules/I18nModule.html":{},"components/InfoComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"index.html":{}}}],["sources",{"_index":619,"title":{},"body":{"components/DialogComponent.html":{}}}],["span')).gettext",{"_index":393,"title":{},"body":{"classes/AppPage.html":{}}}],["span.highlight",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{}}}],["span.setend",{"_index":1266,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["spec\\.ts",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":833,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{},"injectables/NavigateService.html":{}}}],["specifying",{"_index":781,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["src/.../app.module.ts",{"_index":1706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../i18n.module.ts",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../navigation.component.ts",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:80",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/body/body.component.ts",{"_index":529,"title":{},"body":{"components/BodyComponent.html":{},"coverage.html":{}}}],["src/app/body/body.component.ts:16",{"_index":534,"title":{},"body":{"components/BodyComponent.html":{}}}],["src/app/dialog/dialog.component.ts",{"_index":615,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/dialog/dialog.component.ts:13",{"_index":623,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/dialog/dialog.component.ts:33",{"_index":641,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/dialog/dialog.component.ts:37",{"_index":638,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/events/events.component.ts",{"_index":679,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/events/events.component.ts:10",{"_index":682,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/events/events.component.ts:19",{"_index":683,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/footer/footer.component.ts",{"_index":815,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/footer/footer.component.ts:10",{"_index":820,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/footer/footer.component.ts:18",{"_index":821,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/frontend",{"_index":1571,"title":{},"body":{"classes/Room.html":{},"classes/Users.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":949,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:10",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:18",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/i18n/i18n.module.ts",{"_index":1093,"title":{},"body":{"modules/I18nModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/info/exams/exammodel.ts",{"_index":721,"title":{},"body":{"interfaces/Exam.html":{},"coverage.html":{}}}],["src/app/info/exams/exams.component.ts",{"_index":736,"title":{},"body":{"components/ExamsComponent.html":{},"coverage.html":{}}}],["src/app/info/exams/exams.component.ts:17",{"_index":785,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:21",{"_index":775,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:25",{"_index":750,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:30",{"_index":782,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:39",{"_index":766,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:46",{"_index":762,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/exams.component.ts:53",{"_index":755,"title":{},"body":{"components/ExamsComponent.html":{}}}],["src/app/info/exams/http.service.ts",{"_index":981,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/info/exams/http.service.ts:17",{"_index":990,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/info/exams/http.service.ts:21",{"_index":985,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/info/exams/http.service.ts:33",{"_index":986,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/info/freeroom/freeroom.component.ts",{"_index":831,"title":{},"body":{"components/FreeRoomComponent.html":{},"coverage.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:102",{"_index":866,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:114",{"_index":858,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:17",{"_index":890,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:21",{"_index":881,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:25",{"_index":883,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:29",{"_index":885,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:33",{"_index":899,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:37",{"_index":878,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:41",{"_index":880,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:45",{"_index":875,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:49",{"_index":848,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:55",{"_index":889,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:60",{"_index":851,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:64",{"_index":850,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:76",{"_index":854,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:84",{"_index":849,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/freeroom.component.ts:92",{"_index":863,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["src/app/info/freeroom/http.service.ts",{"_index":1020,"title":{},"body":{"injectables/HttpService-1.html":{},"coverage.html":{}}}],["src/app/info/freeroom/http.service.ts:17",{"_index":1024,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["src/app/info/freeroom/http.service.ts:33",{"_index":1026,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["src/app/info/freeroom/lecturemodel.ts",{"_index":1111,"title":{},"body":{"interfaces/Lecture.html":{},"coverage.html":{}}}],["src/app/info/info.component.ts",{"_index":1098,"title":{},"body":{"components/InfoComponent.html":{},"coverage.html":{}}}],["src/app/info/info.component.ts:15",{"_index":1106,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/info/info.component.ts:23",{"_index":1107,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/info/lectures",{"_index":657,"title":{},"body":{"interfaces/Events.html":{},"injectables/HttpService-2.html":{},"components/LecturesPlanComponent.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{}}}],["src/app/info/mensa/http.service.ts",{"_index":1065,"title":{},"body":{"injectables/HttpService-3.html":{},"coverage.html":{}}}],["src/app/info/mensa/http.service.ts:16",{"_index":1072,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["src/app/info/mensa/http.service.ts:21",{"_index":1070,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["src/app/info/mensa/http.service.ts:32",{"_index":1071,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["src/app/info/mensa/mensa.component.ts",{"_index":1230,"title":{},"body":{"components/MensaComponent.html":{},"coverage.html":{}}}],["src/app/info/mensa/mensa.component.ts:18",{"_index":1243,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:22",{"_index":1239,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:26",{"_index":1235,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:31",{"_index":1242,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:39",{"_index":1238,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:47",{"_index":1237,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensa.component.ts:54",{"_index":1236,"title":{},"body":{"components/MensaComponent.html":{}}}],["src/app/info/mensa/mensamodel.ts",{"_index":1226,"title":{},"body":{"interfaces/Mensa.html":{},"coverage.html":{}}}],["src/app/login/auth",{"_index":1601,"title":{},"body":{"guards/authorizationGuard.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:52",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:58",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:72",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/nachrichten/nachrichten.component.ts",{"_index":1252,"title":{},"body":{"components/NachrichtenComponent.html":{},"coverage.html":{}}}],["src/app/nachrichten/nachrichten.component.ts:11",{"_index":1256,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["src/app/nachrichten/nachrichten.component.ts:19",{"_index":1257,"title":{},"body":{"components/NachrichtenComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":1270,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:19",{"_index":1296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:23",{"_index":1294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":1295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:31",{"_index":1277,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:42",{"_index":1297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:48",{"_index":1281,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:56",{"_index":1280,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:68",{"_index":1284,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:83",{"_index":1292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:93",{"_index":1283,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":1363,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/navigation/navigation.component.ts:103",{"_index":1439,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:116",{"_index":1429,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:138",{"_index":1407,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:159",{"_index":1421,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:176",{"_index":1390,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:201",{"_index":1405,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:247",{"_index":1391,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:281",{"_index":1436,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:39",{"_index":1457,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:43",{"_index":1443,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:47",{"_index":1440,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:51",{"_index":1444,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:55",{"_index":1442,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:59",{"_index":1453,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:63",{"_index":1454,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:67",{"_index":1456,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:71",{"_index":1472,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:75",{"_index":1459,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:79",{"_index":1474,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:83",{"_index":1470,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:87",{"_index":1446,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:91",{"_index":1388,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:99",{"_index":1445,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/services/authorization.service.ts",{"_index":433,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["src/app/services/authorization.service.ts:107",{"_index":480,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:113",{"_index":467,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:121",{"_index":486,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:18",{"_index":494,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:22",{"_index":491,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:29",{"_index":468,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:35",{"_index":472,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:37",{"_index":445,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:44",{"_index":493,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:48",{"_index":496,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:59",{"_index":453,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/authorization.service.ts:97",{"_index":475,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["src/app/services/credentialspost.service.ts",{"_index":593,"title":{},"body":{"injectables/CredentialsPostService.html":{},"coverage.html":{}}}],["src/app/services/credentialspost.service.ts:17",{"_index":598,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["src/app/services/credentialspost.service.ts:24",{"_index":608,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["src/app/services/credentialspost.service.ts:31",{"_index":599,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["src/app/services/marker.service.ts",{"_index":1193,"title":{},"body":{"injectables/MarkerService.html":{},"coverage.html":{}}}],["src/app/services/marker.service.ts:17",{"_index":1222,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:21",{"_index":1218,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:25",{"_index":1223,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:29",{"_index":1221,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:34",{"_index":1211,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:41",{"_index":1216,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/marker.service.ts:43",{"_index":1209,"title":{},"body":{"injectables/MarkerService.html":{}}}],["src/app/services/navigate.service.ts",{"_index":1315,"title":{},"body":{"injectables/NavigateService.html":{},"coverage.html":{}}}],["src/app/services/navigate.service.ts:17",{"_index":1342,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/services/navigate.service.ts:21",{"_index":1325,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/services/navigate.service.ts:36",{"_index":1332,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/services/navigate.service.ts:54",{"_index":1339,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/services/sidenav.service.ts",{"_index":1578,"title":{},"body":{"injectables/SideNavigationService.html":{},"coverage.html":{}}}],["src/app/services/sidenav.service.ts:14",{"_index":1585,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["src/app/services/sidenav.service.ts:18",{"_index":1588,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["src/app/services/sidenav.service.ts:24",{"_index":1584,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/my",{"_index":554,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["src/test.ts",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":874,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["startdatetime",{"_index":928,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{}}}],["started",{"_index":1709,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1619,"title":{},"body":{"interfaces/calendarEntry.html":{}}}],["starting/ending",{"_index":674,"title":{},"body":{"interfaces/Events.html":{}}}],["starts",{"_index":1117,"title":{},"body":{"interfaces/Lecture.html":{}}}],["state",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"injectables/SideNavigationService.html":{}}}],["statements",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":518,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["status",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["stemming",{"_index":617,"title":{},"body":{"components/DialogComponent.html":{}}}],["sticky",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["storage",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["stored",{"_index":465,"title":{},"body":{"injectables/AuthorizationService.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"index.html":{}}}],["stores",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["storing",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavbarComponent.html":{},"classes/Room.html":{}}}],["storing/posting",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["string",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"classes/Users.html":{},"interfaces/calendarEntry.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":616,"title":{},"body":{"components/DialogComponent.html":{}}}],["study",{"_index":730,"title":{},"body":{"interfaces/Exam.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["styleurls",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["sub",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["subheading",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subject",{"_index":490,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"injectables/HttpService.html":{},"interfaces/Lecture.html":{},"injectables/MarkerService.html":{},"injectables/SideNavigationService.html":{}}}],["subject','courseofstudy','day",{"_index":779,"title":{},"body":{"components/ExamsComponent.html":{}}}],["subjects",{"_index":1195,"title":{},"body":{"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["submission",{"_index":1344,"title":{},"body":{"injectables/NavigateService.html":{}}}],["submit",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["submited",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitted",{"_index":459,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/NavigateService.html":{}}}],["submittoserver",{"_index":596,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{}}}],["subscribe",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{}}}],["subscribe(response",{"_index":1358,"title":{},"body":{"injectables/NavigateService.html":{}}}],["subscribed",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"injectables/MarkerService.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["subscribes",{"_index":1430,"title":{},"body":{"components/NavigationComponent.html":{}}}],["successful",{"_index":485,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{}}}],["successfull",{"_index":604,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["such",{"_index":673,"title":{},"body":{"interfaces/Events.html":{}}}],["support",{"_index":1752,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1753,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":737,"title":{},"body":{"components/ExamsComponent.html":{},"components/InfoComponent.html":{}}}],["table",{"_index":757,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1102,"title":{},"body":{"components/InfoComponent.html":{}}}],["tag",{"_index":1290,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tahoma",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["take",{"_index":676,"title":{},"body":{"interfaces/Events.html":{},"interfaces/Exam.html":{},"interfaces/calendarEntry.html":{}}}],["taken",{"_index":732,"title":{},"body":{"interfaces/Exam.html":{}}}],["takes",{"_index":913,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["taking",{"_index":1112,"title":{},"body":{"interfaces/Lecture.html":{}}}],["teached",{"_index":1113,"title":{},"body":{"interfaces/Lecture.html":{}}}],["tells",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["temp",{"_index":917,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["temp.toisostring",{"_index":921,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["templateurl",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["test",{"_index":1737,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1736,"title":{},"body":{"index.html":{}}}],["text",{"_index":761,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{}}}],["th",{"_index":1412,"title":{},"body":{"components/NavigationComponent.html":{}}}],["theme.scss",{"_index":555,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["this.authservice.authorize(form.value.name",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.getauthstatuslistener().subscribe(isauthenticated",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.gettoken",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.logout",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.authservice.tokenexists",{"_index":1615,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["this.authstatuslistener.asobservable",{"_index":502,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authstatuslistener.next(false",{"_index":524,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.authstatuslistener.next(true",{"_index":514,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.chosendate",{"_index":920,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.chosendate.substring(0,10",{"_index":909,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.chosendatetime",{"_index":908,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.chosenid",{"_index":904,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.chosentime",{"_index":906,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.chosentime.substring(0,5",{"_index":910,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.clearauthdata",{"_index":525,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.coordinateslata",{"_index":1507,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.coordinateslatb",{"_index":1514,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.coordinateslonga",{"_index":1505,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.coordinateslongb",{"_index":1513,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.datasource.data",{"_index":794,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["this.datasource.filter",{"_index":798,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["this.datasource.paginator",{"_index":796,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":522,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/NavigationComponent.html":{}}}],["this.dialogstatus",{"_index":1547,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.domuserauthenticated",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.email",{"_index":1598,"title":{},"body":{"classes/Users.html":{}}}],["this.enabled",{"_index":1562,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.event.length",{"_index":1051,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.event.splice(0",{"_index":1050,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.event[x",{"_index":1064,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.events.length",{"_index":1053,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.events.map(x",{"_index":1057,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.events.push(response[x",{"_index":1056,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.events.splice(0",{"_index":1052,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.eventsservice.event},1500",{"_index":1135,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["this.eventsservice.geteventinfofromserver",{"_index":1134,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["this.exam.length",{"_index":1000,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exam.splice(0",{"_index":999,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exam[x",{"_index":1018,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exams.length",{"_index":1002,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exams.map(x",{"_index":1007,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exams.push(response[x",{"_index":1006,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.exams.splice(0",{"_index":1001,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.examservice.exam},1500",{"_index":795,"title":{},"body":{"components/ExamsComponent.html":{}}}],["this.examservice.getexaminfofromserver",{"_index":792,"title":{},"body":{"components/ExamsComponent.html":{}}}],["this.getstoreduserauthenticationstate",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.headersource.asobservable",{"_index":1587,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["this.headersource.next(message",{"_index":1591,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["this.http.get('http://localhost:3000/api/rooms",{"_index":1347,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.http.get('http://localhost:3000/exams",{"_index":1003,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get('http://localhost:3000/mensa",{"_index":1075,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.http.get('https://thabella.th",{"_index":1054,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["this.http.get(url",{"_index":1033,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.http.post",{"_index":506,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"injectables/NavigateService.html":{}}}],["this.initmap",{"_index":1503,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.latlnga",{"_index":1509,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.latlngb",{"_index":1515,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.layer",{"_index":1528,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.layer.clearlayers",{"_index":1534,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.lectures.length",{"_index":1029,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.lectures.map(x",{"_index":1035,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.lectures.push(response[x",{"_index":1034,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.lectures.splice(0",{"_index":1028,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.lectures[x",{"_index":1041,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["this.lecturesservice.getlectureinfofromserver(id",{"_index":902,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.lecturesservice.lectures",{"_index":903,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["this.location",{"_index":1353,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.location.lat",{"_index":1356,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.loginbuttonselected",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.map",{"_index":1518,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.marker",{"_index":1535,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.markerser.markerastate$.subscribe(coordinates",{"_index":1504,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.markerser.markerbstate$.subscribe(coordinates",{"_index":1512,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.markerser.sendstate([this.selectedroom.long",{"_index":1360,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.markerser.sendstate2([this.location.long",{"_index":1355,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.markersourcea.asobservable",{"_index":1217,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.markersourcea.next(coordinates",{"_index":1224,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.markersourceb.asobservable",{"_index":1220,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.markersourceb.next(coordinates",{"_index":1225,"title":{},"body":{"injectables/MarkerService.html":{}}}],["this.mensa.length=0",{"_index":1074,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.mensa[x",{"_index":1091,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.mensas.length=0",{"_index":1073,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.mensas.map(x",{"_index":1077,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.mensas.push(response[x",{"_index":1076,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["this.mensaservice.getmensainfofromserver",{"_index":1244,"title":{},"body":{"components/MensaComponent.html":{}}}],["this.mensaservice.mensa;},1500",{"_index":1245,"title":{},"body":{"components/MensaComponent.html":{}}}],["this.name",{"_index":1597,"title":{},"body":{"classes/Users.html":{}}}],["this.navigate.fetchfromserver",{"_index":1563,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigate.fetchroomfromserver(oneroom",{"_index":1546,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigate.location",{"_index":1548,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigate.location.room",{"_index":1550,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigate.selectedroom",{"_index":1560,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.navigate.selectedroom.room",{"_index":1549,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.paginator",{"_index":797,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["this.password",{"_index":1599,"title":{},"body":{"classes/Users.html":{}}}],["this.route",{"_index":1538,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.route.navigate",{"_index":515,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.route.navigate(['./login",{"_index":1616,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["this.route.remove",{"_index":1531,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.saveauthdata(this.token",{"_index":516,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.secondmarker",{"_index":1533,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.selectedroom",{"_index":1359,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.selectedroom.lat",{"_index":1361,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.service.deletefromserver(userid",{"_index":1179,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.getfromserver",{"_index":1177,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.headerstate$.subscribe(message",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["this.service.sendstate(this.state",{"_index":1299,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.service.submittoserver",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.signupbuttonselected",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.state",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["this.token",{"_index":503,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.translate.addlangs(this.languages",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["this.translate.getbrowserlang",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["this.translate.setdefaultlang('de",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["this.translate.use(browserlang",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["this.translate.use(lang",{"_index":1301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.user).subscribe(response",{"_index":611,"title":{},"body":{"injectables/CredentialsPostService.html":{}}}],["this.userisauthenticated",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["through",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{}}}],["tilelayer",{"_index":1415,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tiles",{"_index":1418,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tiles.addto(this.map",{"_index":1527,"title":{},"body":{"components/NavigationComponent.html":{}}}],["till",{"_index":1397,"title":{},"body":{"components/NavigationComponent.html":{}}}],["time",{"_index":727,"title":{},"body":{"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["time/date",{"_index":835,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["timeslot",{"_index":923,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["title",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/EventsComponent.html":{},"components/HeaderComponent.html":{}}}],["together",{"_index":877,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["toggeled",{"_index":1286,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggles",{"_index":1586,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["token",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{},"guards/authorizationGuard.html":{}}}],["tokenexists",{"_index":440,"title":{},"body":{"injectables/AuthorizationService.html":{},"guards/authorizationGuard.html":{}}}],["tooltipanchor",{"_index":1493,"title":{},"body":{"components/NavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["top:0",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["top:10px",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["transformation",{"_index":994,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["transformed",{"_index":989,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["transforming",{"_index":1004,"title":{},"body":{"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["translate",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"dependencies.html":{}}}],["translate.addlangs(['en",{"_index":1095,"title":{},"body":{"modules/I18nModule.html":{}}}],["translate.getbrowserlang",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translate.setdefaultlang('de",{"_index":1096,"title":{},"body":{"modules/I18nModule.html":{}}}],["translate.use(browserlang.match(/en|de",{"_index":1097,"title":{},"body":{"modules/I18nModule.html":{}}}],["translate/core",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"dependencies.html":{}}}],["translatecachefactory",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translatecachefactory(translateservice",{"_index":1708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translatecachemodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecachemodule.forroot",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecacheservice",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecacheservice(translateservice",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecacheservice.getcachedlanguage",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecacheservice.init",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["translatecachesettings",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translatehttploader(httpclient",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translateloader",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translateloaderfactory",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateloaderfactory(httpclient",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"miscellaneous/functions.html":{}}}],["translatemodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translatemodule.forroot",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["translateservice",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{},"components/NavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["translate}}{{\"dialog",{"_index":654,"title":{},"body":{"components/DialogComponent.html":{}}}],["translate}}{{\"header",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["translating",{"_index":1278,"title":{},"body":{"components/NavbarComponent.html":{}}}],["translatioon",{"_index":1293,"title":{},"body":{"components/NavbarComponent.html":{}}}],["treated",{"_index":1319,"title":{},"body":{"injectables/NavigateService.html":{},"components/NavigationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["true",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthorizationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"guards/authorizationGuard.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["ture",{"_index":470,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["two",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/MarkerService.html":{},"components/NavigationComponent.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"interfaces/Events.html":{},"interfaces/Exam.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"interfaces/Lecture.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"interfaces/Mensa.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"interfaces/calendarEntry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":512,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["ui",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["unauthorized",{"_index":1604,"title":{},"body":{"guards/authorizationGuard.html":{}}}],["undefined",{"_index":521,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{}}}],["unique",{"_index":602,"title":{},"body":{"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["unit",{"_index":1735,"title":{},"body":{"index.html":{}}}],["university",{"_index":1368,"title":{},"body":{"components/NavigationComponent.html":{}}}],["up",{"_index":520,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/LoginComponent.html":{}}}],["url",{"_index":1030,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["use",{"_index":1580,"title":{},"body":{"injectables/SideNavigationService.html":{},"index.html":{}}}],["useclass:authinterceptor",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/FreeRoomComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"classes/Room.html":{},"classes/Users.html":{}}}],["usefactory",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/I18nModule.html":{}}}],["uselanguage",{"_index":1276,"title":{},"body":{"components/NavbarComponent.html":{}}}],["uselanguage(lang",{"_index":1291,"title":{},"body":{"components/NavbarComponent.html":{}}}],["user",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"classes/Users.html":{}}}],["user).subscribe(response",{"_index":508,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["userauthenticated",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/NavbarComponent.html":{}}}],["userisauthenticated",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["username",{"_index":1181,"title":{},"body":{"components/LoginComponent.html":{},"classes/Users.html":{}}}],["users",{"_index":58,"title":{"classes/Users.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"classes/Users.html":{},"guards/authorizationGuard.html":{},"coverage.html":{}}}],["uses",{"_index":1392,"title":{},"body":{"components/NavigationComponent.html":{}}}],["using",{"_index":1287,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["validator",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["variable",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"injectables/CredentialsPostService.html":{},"components/FreeRoomComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{},"coverage.html":{}}}],["variables",{"_index":1756,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verdana",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["version",{"_index":1714,"title":{},"body":{"index.html":{}}}],["via",{"_index":1739,"title":{},"body":{"index.html":{}}}],["view",{"_index":1411,"title":{},"body":{"components/NavigationComponent.html":{}}}],["viewchild",{"_index":786,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["viewchild(matpaginator",{"_index":784,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["views",{"_index":763,"title":{},"body":{"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/MensaComponent.html":{}}}],["virt",{"_index":689,"title":{},"body":{"components/EventsComponent.html":{}}}],["void",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthorizationService.html":{},"components/BodyComponent.html":{},"injectables/CredentialsPostService.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{},"components/InfoComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"injectables/MarkerService.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"injectables/NavigateService.html":{},"components/NavigationComponent.html":{},"injectables/SideNavigationService.html":{}}}],["waits",{"_index":1394,"title":{},"body":{"components/NavigationComponent.html":{}}}],["warn",{"_index":580,"title":{},"body":{"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/EventsComponent.html":{},"components/ExamsComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavigationComponent.html":{}}}],["waypoints:[this.latlngb,this.latlnga]}).addto(this.map",{"_index":1542,"title":{},"body":{"components/NavigationComponent.html":{}}}],["web",{"_index":407,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["well",{"_index":631,"title":{},"body":{"components/DialogComponent.html":{},"interfaces/Events.html":{}}}],["whenever",{"_index":1579,"title":{},"body":{"injectables/SideNavigationService.html":{}}}],["whether",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["white",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/DialogComponent.html":{},"components/FooterComponent.html":{},"components/FreeRoomComponent.html":{},"components/HeaderComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"components/NachrichtenComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationComponent.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BodyComponent.html":{},"components/ExamsComponent.html":{},"components/FreeRoomComponent.html":{},"components/LecturesPlanComponent.html":{},"components/LoginComponent.html":{},"components/MensaComponent.html":{},"components/NavigationComponent.html":{}}}],["width:100",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["width:400px",{"_index":1140,"title":{},"body":{"components/LecturesPlanComponent.html":{},"components/NavigationComponent.html":{}}}],["within",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{},"guards/authorizationGuard.html":{}}}],["written/oral",{"_index":735,"title":{},"body":{"interfaces/Exam.html":{}}}],["x",{"_index":864,"title":{},"body":{"components/FreeRoomComponent.html":{},"injectables/HttpService.html":{},"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{},"injectables/HttpService-3.html":{}}}],["x.calendarentry.begin",{"_index":1062,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["x.calendarentry.end",{"_index":1060,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["x.calendarentry.name",{"_index":1063,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["x.closingtime",{"_index":1090,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.courseofstudy",{"_index":1009,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.day",{"_index":1010,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.description",{"_index":1036,"title":{},"body":{"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{}}}],["x.drinks",{"_index":1084,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.duration",{"_index":1012,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.examiner",{"_index":1014,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.label",{"_index":1058,"title":{},"body":{"injectables/HttpService-2.html":{}}}],["x.mainplate",{"_index":1080,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.openingtime",{"_index":1088,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.organiser",{"_index":1037,"title":{},"body":{"injectables/HttpService-1.html":{},"injectables/HttpService-2.html":{}}}],["x.participants",{"_index":1039,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["x.price",{"_index":1086,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.room",{"_index":1013,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.salad",{"_index":1082,"title":{},"body":{"injectables/HttpService-3.html":{}}}],["x.semester",{"_index":1015,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.startdatetime",{"_index":1038,"title":{},"body":{"injectables/HttpService-1.html":{}}}],["x.subject",{"_index":1008,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.time",{"_index":1011,"title":{},"body":{"injectables/HttpService.html":{}}}],["x.type",{"_index":1016,"title":{},"body":{"injectables/HttpService.html":{}}}],["year",{"_index":1120,"title":{},"body":{"components/LecturesPlanComponent.html":{}}}],["yellow",{"_index":564,"title":{},"body":{"components/BodyComponent.html":{}}}],["z",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["zone",{"_index":914,"title":{},"body":{"components/FreeRoomComponent.html":{}}}],["zone.js",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        main component that incluse all sub components in it HTNL template\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomUserAuthenticated\n                            \n                            \n                                state\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStoredUserAuthenticationState\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SideNavigationService, authService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SideNavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for sending clicks observables that is executed on side navigation icon\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for authenticating users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStoredUserAuthenticationState\n                        \n                        \n                    \n                \n            \n            \n                \ngetStoredUserAuthenticationState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:68\n                \n            \n\n\n            \n                \n                    converting DOM element \"userAuthenticated\", which is of type string to a boolean variable \"userIsAuthenticated\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n                    we set/ reset \"userIsAuthenticated\" boolean variable based on the string value of the DOM key element \"userAuthenticated\" to hide/show log out button in our HTML template.\nsubscribe to the \"side navigation icon\" click observable recieved from the \"sideNavigation Service\", to control the opening and closing of the side nav container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:80\n                \n            \n\n\n            \n                \n                    once logout button is pressed, logout method in the authorization service is invoked, which sets the token to null, routes to home page, removes the token from the local storage and sends a false boolean observable ( authentication status) through the authorization service \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DomUserAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        variable for storing DOM element variable \"userAuthenticated\" which reflects the status of user Authentication\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        side navigation icon click state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'my-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        a boolean that reflects the authentication state, to be used in HTML template to show/hide logout button\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthorizationService } from './services/authorization.service';\nimport { SideNavigationService } from './services/sidenav.service';\n\n\n/**\n * main component that incluse all sub components in it HTNL template\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'my-app';\n  /**\n    * side navigation icon click state\n  */\n  state : boolean= false;\n \n  /**\n    * variable for storing DOM element variable \"userAuthenticated\" which reflects the status of user Authentication\n  */\n  DomUserAuthenticated:string;  \n  /**\n    * a boolean that reflects the authentication state, to be used in HTML template to show/hide logout button\n  */\n  public userIsAuthenticated: boolean = false;\n  \n  /**\n   * Constructor\n   * @param service A service for sending clicks observables that is executed on side navigation icon\n   * @param authService A service for authenticating users\n   */\n  constructor(private service : SideNavigationService, private authService: AuthorizationService) { }\n  /**\n   * we set/ reset \"userIsAuthenticated\" boolean variable based on the string value of the DOM key element \"userAuthenticated\" to hide/show log out button in our HTML template.\n   * \n   * subscribe to the \"side navigation icon\" click observable recieved from the \"sideNavigation Service\", to control the opening and closing of the side nav container\n  */\n  ngOnInit() {  \n    \n    this.getStoredUserAuthenticationState();\n    this.service.headerstate$.subscribe(message => { this.state= message});\n    \n    /**\n     * we subscribe to a boolean observable which is recieved from the authorization service, the observable tells whether the user is authenticated or not.\n    */\n    this.authService.getAuthStatusListener().subscribe(isAuthenticated => { this.userIsAuthenticated= isAuthenticated;\n      /**\n       * sets the status of the DOM key \"userAuthenticated\" based on the returned subscribed value of the Authentication status observable \"authstatuslistener\" that resides in the Autherization service\n       * \n       * converts the boolean observable to string since DOM key elements stores only string values\n       */\n      localStorage.setItem( \"userAuthenticated\", JSON.stringify(this.userIsAuthenticated));\n    });\n   \n    \n    \n  }\n\n  \n  \n\n  /**\n    * converting DOM element \"userAuthenticated\", which is of type string to a boolean variable \"userIsAuthenticated\"\n  */\n  getStoredUserAuthenticationState() {\n    this.DomUserAuthenticated = localStorage.getItem(\"userAuthenticated\");\n      if(this.DomUserAuthenticated == \"true\")\n        this.userIsAuthenticated = true;\n        else this.userIsAuthenticated = false; \n  }\n  \n\n  \n  /**\n    * once logout button is pressed, logout method in the authorization service is invoked, which sets the token to null, routes to home page, removes the token from the local storage and sends a false boolean observable ( authentication status) through the authorization service \n  */\n  onLogout() {\n    this.authService.logout();\n  }\n\n  \n}\n  \n  \n\n\n    \n\n    \n        \n\n\n\n\n\n   \n    \n  \n\n      \n          \n            \n              Home\n              {{\"news\" | translate}}\n               {{'events' | translate}} \n               {{'navigation' | translate}} \n               Info \n              person_outline {{\"login\" | translate}}\n              person_outline {{\"logout\" | translate}} \n            \n          \n\n         \n           Exam Rooms \n           Free Rooms \n           MENSA \n           LECTURE PLAN \n        \n        \n      \n          \n          \n      \n        \n\n\n           \n           \n          \n         \n      \n  \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        \n\n    \n    \n    \n        \n    \n \n    \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \nmat-sidenav-container {\n\n    \n    background-color: white;\n    \n   \n   \n   \n}\n\nsidenav-content {\n\n    position:fixed;\n   \n}\nmat-sidenav{\n\n        position: fixed;\n        width : 200px;\n        background-color: #009fe3;\n        top: 80px;\n\n}\n\n.sticky {\n\n    position: fixed;\n    top:0;\n    overflow:hidden;\n    z-index: 2;\n    width:100%;\n    opacity: 0.95;\n\n\n }\n\n app-map {\n     height: 400px;\n }\n\n a, button {\n    color: white !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                   Home              {{\"news\" | translate}}               {{\\'events\\' | translate}}                {{\\'navigation\\' | translate}}                Info               person_outline {{\"login\" | translate}}              person_outline {{\"logout\" | translate}}                                           Exam Rooms            Free Rooms            MENSA            LECTURE PLAN                                                                                                                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyComponent\n\nBodyComponent\n\nAppModule -->\n\nBodyComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nExamsComponent\n\nExamsComponent\n\nAppModule -->\n\nExamsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFreeRoomComponent\n\nFreeRoomComponent\n\nAppModule -->\n\nFreeRoomComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLecturesPlanComponent\n\nLecturesPlanComponent\n\nAppModule -->\n\nLecturesPlanComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMensaComponent\n\nMensaComponent\n\nAppModule -->\n\nMensaComponent->AppModule\n\n\n\n\n\nNachrichtenComponent\n\nNachrichtenComponent\n\nAppModule -->\n\nNachrichtenComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nI18nModule\n\nI18nModule\n\nAppModule -->\n\nI18nModule->AppModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAppModule -->\n\nAuthorizationService->AppModule\n\n\n\n\n\nSideNavigationService\n\nSideNavigationService\n\nAppModule -->\n\nSideNavigationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BodyComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            EventsComponent\n                        \n                        \n                            ExamsComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FreeRoomComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LecturesPlanComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MensaComponent\n                        \n                        \n                            NachrichtenComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            SideNavigationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            I18nModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SideNavigationService } from './services/sidenav.service';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatButtonModule} from '@angular/material/button';\nimport { NavbarComponent } from './Navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FooterComponent } from './footer/footer.component';\nimport { BodyComponent } from './body/body.component';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterModule, Routes} from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { I18nModule } from './i18n/i18n.module';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule  } from '@angular/material/table';\nimport { AuthInterceptor } from './auth-interceptor';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateCacheModule, TranslateCacheSettings, TranslateCacheService } from 'ngx-translate-cache';\nimport { InfoComponent } from './info/info.component';\nimport { LecturesPlanComponent } from './info/lectures-plan/lectures-plan.component';\nimport { AuthorizationService } from './services/authorization.service';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { authorizationGuard } from './login/Auth-guard';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { FreeRoomComponent } from './info/freeRoom/freeRoom.component';\nimport { MatDatepickerModule }  from '@angular/material/datepicker';\nimport { MatNativeDateModule }  from '@angular/material/core';\nimport { MensaComponent } from './info/mensa/mensa.component';\nimport { ExamsComponent } from './info/exams/exams.component';\nimport { EventsComponent } from './events/events.component';\nimport { NachrichtenComponent } from './nachrichten/nachrichten.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n\nconst appRoutes : Routes = [\n   {path: 'login', component: LoginComponent},{ path: 'info', component: InfoComponent, canActivate: [authorizationGuard]},\n  { path: '', component: BodyComponent}, { path: 'navig', component: NavigationComponent, canActivate: [authorizationGuard]}, {path: 'event', component: EventsComponent},{path: 'nachricht', component: NachrichtenComponent}\n]; \n\n@NgModule({\n  declarations: [\n    \n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    BodyComponent,\n    HeaderComponent,\n    LoginComponent,\n    InfoComponent,\n    LecturesPlanComponent,\n    DialogComponent,\n    NavigationComponent,\n    FreeRoomComponent,\n    MensaComponent,\n    ExamsComponent,\n    EventsComponent,\n    NachrichtenComponent,\n   \n  ],\n  entryComponents: [DialogComponent],\n  imports: [\n    MatTooltipModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatDialogModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatTabsModule,\n    FlexLayoutModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    FormsModule,\n    MatMenuModule,\n    RouterModule.forRoot(appRoutes),\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatListModule,\n    I18nModule,\n    TranslateModule.forRoot(),\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translateLoaderFactory,\n        deps: [HttpClient]\n      }\n      \n    }),\n    TranslateCacheModule.forRoot({\ncacheService : {\nprovide : TranslateCacheService,\nuseFactory: translateCacheFactory,\ndeps :[TranslateService ,TranslateCacheSettings] \n}, cacheMechanism : 'Cookie' \n    })\n\n  ],\n  exports:[ MatPaginatorModule, MatTabsModule, ],\n  providers: [SideNavigationService, AuthorizationService, HttpClientModule, [{provide:HTTP_INTERCEPTORS, useClass:AuthInterceptor, multi: true}], authorizationGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  languages = ['en', 'de'];\n  constructor( public translate: TranslateService, translateCacheService: TranslateCacheService ) { \n    this.translate.addLangs(this.languages);\n    this.translate.setDefaultLang('de');\n     const browserlang =translateCacheService.getCachedLanguage() || this.translate.getBrowserLang();\n     this.translate.use(browserlang);\n     translateCacheService.init();\n     const browserLang = translateCacheService.getCachedLanguage() || translate.getBrowserLang();\n     \n    \n \n     \n   }\n\n }\n\n\n\nexport function translateLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\n}\n\n\nexport function translateCacheFactory(\n  translateService: TranslateService,\n  translateCacheSettings: TranslateCacheSettings\n) {\n  return new TranslateCacheService(translateService, translateCacheSettings);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BodyComponent } from './body/body.component';\nimport { LoginComponent } from './login/login.component';\nimport { InfoComponent } from './info/info.component';\nimport { LecturesPlanComponent } from './info/lectures-plan/lectures-plan.component';\nimport { authorizationGuard } from './login/Auth-guard';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { EventsComponent } from './events/events.component';\nimport { NachrichtenComponent } from './nachrichten/nachrichten.component';\n\n\nconst routes: Routes = [{path: 'login', component: LoginComponent},{ path: 'info', component: InfoComponent, canActivate: [authorizationGuard]},\n{ path: '', component: BodyComponent}, { path: 'navig', component: NavigationComponent, canActivate: [authorizationGuard]}, {path: 'event', component: EventsComponent},{path: 'nachricht', component: NachrichtenComponent}];\n//{ path: 'lecture', component: LecturesPlanComponent},\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth-interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Clones outgoing HTTP requests and adds an authorization header to the JWT ( JSON web Token)\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(AuthService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth-interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service which authenticates users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth-interceptor.ts:19\n                \n            \n\n\n            \n                \n                    intercepts outgoing HTTP request and appends an authorization header to the Token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any outgoing HTTP request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next HTTP request handler\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthorizationService } from './services/authorization.service';\n/**\n * Clones outgoing HTTP requests and adds an authorization header to the JWT ( JSON web Token)\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    /**\n     * constructor\n     * @param AuthService A service which authenticates users\n     */\n    constructor(private AuthService: AuthorizationService) {}\n    /**\n     * intercepts outgoing HTTP request and appends an authorization header to the Token\n     * @param req any outgoing HTTP request\n     * @param next next HTTP request handler\n     */\n    intercept(req: HttpRequest, next: HttpHandler)  {   \n        const AuthToken = this.AuthService.getToken();\n        const authRequest = req.clone({\n            headers : req.headers.set('Authorization', \"Bearer \" + AuthToken)});\n        return next.handle(req);\n    }\n\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authorization.service.ts\n        \n\n            \n                Description\n            \n            \n                a service for authenticating users \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authstatuslistener\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Private\n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Authorize\n                            \n                            \n                                    Private\n                                clearAuthData\n                            \n                            \n                                getAuthStatusListener\n                            \n                            \n                                getToken\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                saveAuthData\n                            \n                            \n                                tokenExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, http: HttpClient, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authorization.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dialog component for showing messages\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTPClient services\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Authorize\n                        \n                        \n                    \n                \n            \n            \n                \nAuthorize(name: string, email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:59\n                \n            \n\n\n            \n                \n                    Case : login Button is clicked, below function is invoked\nposts the User data submitted through ngForm to the API, if the User credentials data matches one of the stored User credentials, it return a token, if not, it returns a message only \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user name submitted in a form\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user email submitted in a form\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user password submitted in a form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAuthData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:113\n                \n            \n\n\n            \n                \n                    removes the token from the DOM\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthStatusListener\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthStatusListener()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:29\n                \n            \n\n\n            \n                \n                    this method is used in the navbar component to show/hide the logout button based on the state of the observable.\nand in the app component to set the DOM key \"userAuthenticated\" to ture or false basedon the state of the observable \n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the boolean observable of the authentication status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:35\n                \n            \n\n\n            \n                \n                    this method is used in the intercepter, so that we can add an Autherization header to the JWT for all outgoing HTTP requests \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:97\n                \n            \n\n\n            \n                \n                    sets the token to null\nsets boolean observable to false which represent the authentication status \nnavigates to home page\nclears the token from the local storage in the DOM \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthData(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:107\n                \n            \n\n\n            \n                \n                    saves the token in the DOM\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        response of the HTTP post request that resides inside the \"Authorize\" method as a result of successful authentication of users\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tokenExists\n                        \n                        \n                    \n                \n            \n            \n                \ntokenExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authorization.service.ts:121\n                \n            \n\n\n            \n                \n                    checks if token exists in the DOM\nwill be used in the Auth guard to activate/deactivate a route \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authstatuslistener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authorization.service.ts:22\n                            \n                        \n\n                \n                    \n                        boolean observable that will represents the authentication status of users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authorization.service.ts:44\n                            \n                        \n\n                \n                    \n                        dialog component for showing messages\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authorization.service.ts:18\n                            \n                        \n\n                \n                    \n                        a variable for storing the token obtained from \"Authorize\" method once a user is authenticated\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Users\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authorization.service.ts:48\n                            \n                        \n\n                \n                    \n                        User model variable\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Users } from '../Frontend-Models/users';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\n/**\n * a service for authenticating users \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n  /**\n   * a variable for storing the token obtained from \"Authorize\" method once a user is authenticated\n   */\n    private token: string;\n    /**\n     * boolean observable that will represents the authentication status of users\n     */\n    private authstatuslistener = new Subject();\n    /**\n     * this method is used in the navbar component to show/hide the logout button based on the state of the observable.\n     * \n     * and in the app component to set the DOM key \"userAuthenticated\" to ture or false basedon the state of the observable \n     * @returns the boolean observable of the authentication status\n     */\n    getAuthStatusListener() {\n      return this.authstatuslistener.asObservable();\n    }\n    /**\n     * this method is used in the intercepter, so that we can add an Autherization header to the JWT for all outgoing HTTP requests \n     */\n    getToken() {\n      return this.token;\n    }\n    /**\n     * \n     * @param dialog dialog component for showing messages\n     * @param http Angular HTTPClient services\n     * @param route Angular router \n     */\n    constructor(public dialog: MatDialog, private http : HttpClient, private route: Router) { }\n      /**\n       * User model variable\n       */\n      user: Users;\n    \n  \n      /**\n       * Case : login Button is clicked, below function is invoked\n       *  \n      * posts the User data submitted through ngForm to the API, if the User credentials data matches one of the stored User credentials, it return a token, if not, it returns a message only \n      * @param name   user name submitted in a form\n      * @param email user email submitted in a form\n      * @param password user password submitted in a form\n      */\n      Authorize(name: string, email: string, password: string) {\n        const user : Users = { Name: name, email: email, password: password} ;\n        console.log(user.Name);\n        this.http.post ('http://localhost:3000/api/login', user).subscribe(response => { console.log(response);\n          /**\n           * if a Token is returned as a response of the post HTTP request \n           * \n           * we set the boolean observable to true which represents the authentication status\n           * \n           * we navigate to home page\n           * \n           * save the Token in the local storage on the DOM\n           */\n          if (typeof response.authtoken == 'string') {\n            this.token = response.authtoken;\n            this.authstatuslistener.next(true);\n            this.route.navigate(['/']);\n            this.saveAuthData(this.token);\n          }\n            /**\n             * if no Token is returned from the post HTTP request\n             * \n             * we show a dialog message stating that user have to sign up\n             */\n            else if (typeof response.authtoken == 'undefined') {\n              this.dialog.open(DialogComponent, {data: { name: \"authenticate\"}} );\n            }\n        });\n      };\n      /**\n       * sets the token to null\n       * \n       * sets boolean observable to false which represent the authentication status \n       * \n       * navigates to home page\n       * \n       * clears the token from the local storage in the DOM \n       */\n    logout() {\n      this.token = null;\n      this.authstatuslistener.next(false);\n      this.route.navigate(['/']);\n      this.clearAuthData();\n    }\n    /**\n     * saves the token in the DOM\n     * @param token response of the HTTP post request that resides inside the \"Authorize\" method as a result of successful authentication of users\n     */\n    private saveAuthData(token: string) {\n      localStorage.setItem(\"token\", token);\n    }\n    /**\n     * removes the token from the DOM\n     */\n    private clearAuthData() {\n      localStorage.removeItem(\"token\");\n    }\n    /**\n     * checks if token exists in the DOM\n     * \n     * will be used in the Auth guard to activate/deactivate a route \n     */\n    tokenExists() {\n      return !!localStorage.getItem('token')\n    }\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BodyComponent.html":{"url":"components/BodyComponent.html","title":"component - BodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/body/body.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing body elements of the homepage\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-body\n            \n\n            \n                styleUrls\n                ./body.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./body.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/body/body.component.ts:16\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit} from '@angular/core';\n\n/**\n * a component for showing body elements of the homepage\n */\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n  /**\n   * empty Initialization\n   */\n  ngOnInit() {}\n  \n\n}\n\n    \n\n    \n        \n    \n   \n    \n    \n\n\n       \n              \n                \n                 {{\"home1\" | translate}}  \n                {{\"home1-1\" | translate}} \n                  \n                      {{\"home-button\" | translate}}      \n                \n            \n\n              \n                \n                  {{\"home2\" | translate}} \n                 {{\"home2-2\" | translate}}\n                  \n                      {{\"home-button\" | translate}}      \n                \n            \n\n              \n                \n                  {{\"home3\" | translate}} \n                 {{\"home3-3\" | translate}}\n                  \n                      {{\"home-button\" | translate}}      \n                \n            \n       \n\n    \n          \n            \n              {{\"home4\" | translate}} \n             {{\"home4-4\" | translate}}\n              \n                  {{\"home-button\" | translate}}      \n            \n        \n    \n          \n            \n              {{\"home5\" | translate}} \n             {{\"home5-5\" | translate}}\n              \n                 {{\"home-button\" | translate}}      \n            \n        \n    \n          \n            \n              {{\"home6\" | translate}} \n             {{\"home6-6\" | translate}}\n              \n                  {{\"home-button\" | translate}}      \n            \n        \n    \n    \n          \n            \n              {{\"home7\" | translate}} \n             {{\"home7-7\" | translate}}\n              \n                  {{\"home-button\" | translate}}      \n            \n        \n    \n          \n            \n              {{\"home8\" | translate}} \n             {{\"home8-8\" | translate}}\n              \n                  {{\"home-button\" | translate}}      \n            \n        \n    \n          \n            \n              {{\"home9\" | translate}}  \n             {{\"home9-9\" | translate}}\n              \n                  {{\"home-button\" | translate}}      \n            \n        \n    \n\n        \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./body.component.scss\n                \n                \n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n\n\n.four {\n    background-color: green;\n    Float: right;\n    width: 100px;\n    //height: 643px;\n}\n\n\n.five {\n    background-color: yellow;\n    Float: left;\n    width: 100px;\n   // height: 643px;\n}\n\n.six {\n    background-color: white;\n    overflow: hidden ;\n    //height: 1500px\n    \n}\n\n\n\n\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    mat-card-title, mat-card-content  {\n        color: mat-color($mywarn);\n    }\n}\ndiv {\n    @include corporateIdTextColor($theme);   \n}\n\n\n.img {\n\n    max-width: 400px;\n    max-height: 200px;\n}\n\n.card {\n    margin: 4px;\n    max-height: 470px;\n   \n}\n\nbutton.mat-raised-button{\n    color: white !important;\n  }  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                     {{\"home1\" | translate}}                  {{\"home1-1\" | translate}}                                         {{\"home-button\" | translate}}                                                                                  {{\"home2\" | translate}}                  {{\"home2-2\" | translate}}                                        {{\"home-button\" | translate}}                                                                                  {{\"home3\" | translate}}                  {{\"home3-3\" | translate}}                                        {{\"home-button\" | translate}}                                                                                 {{\"home4\" | translate}}              {{\"home4-4\" | translate}}                                {{\"home-button\" | translate}}                                                                  {{\"home5\" | translate}}              {{\"home5-5\" | translate}}                               {{\"home-button\" | translate}}                                                                  {{\"home6\" | translate}}              {{\"home6-6\" | translate}}                                {{\"home-button\" | translate}}                                                                      {{\"home7\" | translate}}              {{\"home7-7\" | translate}}                                {{\"home-button\" | translate}}                                                                  {{\"home8\" | translate}}              {{\"home8-8\" | translate}}                                {{\"home-button\" | translate}}                                                                  {{\"home9\" | translate}}               {{\"home9-9\" | translate}}                                {{\"home-button\" | translate}}                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CredentialsPostService.html":{"url":"injectables/CredentialsPostService.html","title":"injectable - CredentialsPostService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CredentialsPostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/credentialspost.service.ts\n        \n\n            \n                Description\n            \n            \n                a service for posting/storing users credentials to the server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitToServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/credentialspost.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HTTPClient service\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mat dialog component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitToServer\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitToServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/credentialspost.service.ts:31\n                \n            \n\n\n            \n                \n                    Case : sign up Button is clicked, below function is invoked.\nthe function posts the User credential data, submitted through HTML Form to the server and stores it in the data base if the user credentials are unique, in case a JSON object is returned from the post HTTP request, Dialog component with a message of \"sign up is successfull\" shows, otherwise Dialog component with a message of \"sign up failed \" shows up.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        JSON object or a message from the API \n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/credentialspost.service.ts:24\n                            \n                        \n\n                \n                    \n                        Mat dialog component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Users(\"\", \"\", \"\")\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/credentialspost.service.ts:17\n                            \n                        \n\n                \n                    \n                        a Users model variable \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Users } from '../Frontend-Models/users';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n/**\n * a service for posting/storing users credentials to the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CredentialsPostService {\n    \n    /**\n     * a Users model variable \n     */\n    user = new Users(\"\", \"\", \"\");\n  \n    /**\n     * \n     * @param http Angular HTTPClient service\n     * @param dialog Mat dialog component\n     */\n    constructor(private http : HttpClient, public dialog: MatDialog) { }\n    /**\n     * Case : sign up Button is clicked, below function is invoked.\n     *  \n     * the function posts the User credential data, submitted through HTML Form to the server and stores it in the data base if the user credentials are unique, in case a JSON object is returned from the post HTTP request, Dialog component with a message of \"sign up is successfull\" shows, otherwise Dialog component with a message of \"sign up failed \" shows up.\n     * @returns JSON object or a message from the API \n     */\n  submitToServer() {\n    console.log(this.user.email);\n    this.http.post ('http://localhost:3000/api/userspost', this.user).subscribe(response => { console.log(response.result);\n      if ( typeof response.result == 'object') {\n        this.dialog.open(DialogComponent, {data: { name: \"signup successful\"}});\n      }\n      else if ( typeof response.result == 'undefined')\n        this.dialog.open(DialogComponent, {data: { name: \"signup failed\"}});\n        \n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialog/dialog.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing dialog message to user, based on strings data stemming out from different sources\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialog/dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            if the string matches one of the following a corrosponding message will pop up, check HTML\n\"authenticate\"\n\"signup successful\"\n\"signup failed\"\n\"no room match\"\n\"room match\"\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a string that originates from autherization/ credential service as well as navigattion component.ts  (read Qr code/ Compare room methods)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialog/dialog.component.ts:37\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/dialog/dialog.component.ts:33\n                            \n                        \n\n                \n                    \n                        a string that originates from autherization/ credential service as well as navigattion component.ts  (read Qr code/ Compare room methods)\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, InjectionToken } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * a component for showing dialog message to user, based on strings data stemming out from different sources\n */\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n  \n  /**\n   * \n   * if the string matches one of the following a corrosponding message will pop up, check HTML\n   * \n   * \"authenticate\"\n   * \n   * \"signup successful\"\n   * \n   * \"signup failed\"\n   * \n   * \"no room match\"\n   * \n   * \"room match\"\n   * @param data a string that originates from autherization/ credential service as well as navigattion component.ts  (read Qr code/ Compare room methods)\n   * \n   * \n   * \n   */\n  constructor(@Inject(MAT_DIALOG_DATA) public data :any) {}\n  /**\n   * empty Initialization\n   */\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n        \n{{\"dialog-1\" | translate}}  \n\n{{\"dialog-2\" | translate}}\n\n{{\"dialog-3\" | translate}}\n\n{{\"dialog-4-1\" | translate}} {{data.roomQR.room}} {{\"dialog-4-2\" | translate}}  {{data.roomQR.building}}, {{data.roomQR.floor}} {{\"dialog-4-3\" | translate}} {{data.roomSet.room}} {{\"dialog-4-4\" | translate}} {{data.roomSet.building}}, {{data.roomSet.floor}} {{\"dialog-4-5\" | translate}}\n\n{{\"dialog-5\" | translate}} \n\n Ok \n\n\n\n    \n\n    \n                \n                    ./dialog.component.scss\n                \n                button {\n    color: white !important;\n}\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    h1  {\n        color: mat-color($mywarn);\n    }\n}\ndiv {\n    @include corporateIdTextColor($theme);   \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\"dialog-1\" | translate}}  {{\"dialog-2\" | translate}}{{\"dialog-3\" | translate}}{{\"dialog-4-1\" | translate}} {{data.roomQR.room}} {{\"dialog-4-2\" | translate}}  {{data.roomQR.building}}, {{data.roomQR.floor}} {{\"dialog-4-3\" | translate}} {{data.roomSet.room}} {{\"dialog-4-4\" | translate}} {{data.roomSet.building}}, {{data.roomSet.floor}} {{\"dialog-4-5\" | translate}}{{\"dialog-5\" | translate}}  Ok '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Events.html":{"url":"interfaces/Events.html","title":"interface - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Events\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/lectures-plan/eventsModel.ts\n        \n\n            \n                Description\n            \n            \n                A model that resembles the events that are going to happen during the current semester, for instance lectures plan.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        label\n                                \n                                \n                                        organiser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of the event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    optional attribute\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:         calendarEntry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         calendarEntry\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    extra information about the event; such as Starting/Ending Day/Date of the event as well as the semester in which the event will take place \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label of the event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organiser\n                                    \n                                \n                                \n                                    \n                                        organiser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    organiser of the event\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { calendarEntry} from './calenderEntry'\n/**\n * A model that resembles the events that are going to happen during the current semester, for instance lectures plan.\n */\nexport interface Events {\n    /**\n     * optional attribute\n     */\n    id?: string;  \n    /**\n     * organiser of the event\n     */\n    organiser: string;\n    /**\n     * label of the event\n     */\n    label: string;\n    /**\n     * description of the event\n     */\n    description: string;\n    /**\n     * extra information about the event; such as Starting/Ending Day/Date of the event as well as the semester in which the event will take place \n     */\n    info: calendarEntry;  \n}   \n\n        \n    \n\n    \n    \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/events/events.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing body elements of the events page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/events/events.component.ts:10\n                            \n                        \n\n                \n                    \n                            Empty constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/events/events.component.ts:19\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * a component for showing body elements of the events page\n */\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss']\n})\nexport class EventsComponent implements OnInit {\n  /**\n   * Empty constructor\n   */\n  constructor() { }\n  /**\n   * empty Initialization\n   */\n\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n        \n\n    \n    \n        {{\"event-header\" | translate}}\n        \n            \n                \n                     18-02-2021\n                     {{\"events1\" | translate}}  \n                     location_on {{\"event-virt\" | translate}} schedule09:00- 17:00  public {{\"event-lang-ger\" | translate}}\n                \n                 {{\"events1-1\" | translate}}\n            \n            \n                \n                     21-02-2021\n                     {{\"events2\" | translate}} \n                     location_on {{\"event-virt\" | translate}} schedule18:00 -20:00  public {{\"event-lang-ger\" | translate}}\n                \n                 {{\"events2-2\" | translate}}\n            \n            \n                \n                     22-02-2021\n                     {{\"events3\" | translate}} \n                     location_on {{\"event-virt\" | translate}} schedule16:00-17:00  public {{\"event-lang-eng\" | translate}}\n                \n                     {{\"events3-3\" | translate}}\n            \n            \n                \n                     22-02-2021\n                     {{\"events4\" | translate}}  \n                     location_on {{\"event-pres\" | translate}} schedule10:00-18:00  public {{\"event-lang-ger\" | translate}}\n                \n                 {{\"events4-4\" | translate}}\n            \n            \n                \n                     25-02-2021\n                     {{\"events5\" | translate}}  \n                     location_on {{\"event-virt\" | translate}} schedule18:00-19:30  public {{\"event-lang-ger\" | translate}}\n                \n                 {{\"events5-5\" | translate}}\n            \n            \n                \n                     27-02-2021\n                     {{\"events6\" | translate}}  \n                     location_on {{\"event-pres\" | translate}} schedule10:00-16:00  public {{\"event-lang-ger\" | translate}}\n                \n                 {{\"events6-6\" | translate}}\n            \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./events.component.scss\n                \n                @import './src/my-theme.scss';\n@import '~@angular/material/theming';\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn); \n    mat-panel-description, mat-panel-title, p  {\n        color: mat-color($mywarn);  \n    }\n    p.mat-display-1 {\n        color: mat-color($myprimary);\n    }\n}\nsection {\n    @include corporateIdTextColor($theme);  \n}\n\n\n\n mat-icon {\n    margin-right: 0.1em;\n    margin-left: 0.2em;\n}\n\n.center {\n    margin-left: 5%;\n    margin-right: 5%;\n   \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{\"event-header\" | translate}}                                                         18-02-2021                     {{\"events1\" | translate}}                       location_on {{\"event-virt\" | translate}} schedule09:00- 17:00  public {{\"event-lang-ger\" | translate}}                                 {{\"events1-1\" | translate}}                                                             21-02-2021                     {{\"events2\" | translate}}                      location_on {{\"event-virt\" | translate}} schedule18:00 -20:00  public {{\"event-lang-ger\" | translate}}                                 {{\"events2-2\" | translate}}                                                             22-02-2021                     {{\"events3\" | translate}}                      location_on {{\"event-virt\" | translate}} schedule16:00-17:00  public {{\"event-lang-eng\" | translate}}                                     {{\"events3-3\" | translate}}                                                             22-02-2021                     {{\"events4\" | translate}}                       location_on {{\"event-pres\" | translate}} schedule10:00-18:00  public {{\"event-lang-ger\" | translate}}                                 {{\"events4-4\" | translate}}                                                             25-02-2021                     {{\"events5\" | translate}}                       location_on {{\"event-virt\" | translate}} schedule18:00-19:30  public {{\"event-lang-ger\" | translate}}                                 {{\"events5-5\" | translate}}                                                             27-02-2021                     {{\"events6\" | translate}}                       location_on {{\"event-pres\" | translate}} schedule10:00-16:00  public {{\"event-lang-ger\" | translate}}                                 {{\"events6-6\" | translate}}                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Exam.html":{"url":"interfaces/Exam.html","title":"interface - Exam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Exam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/exams/examModel.ts\n        \n\n            \n                Description\n            \n            \n                a model for the exam schedule \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        courseOfStudy\n                                \n                                \n                                        day\n                                \n                                \n                                        duration\n                                \n                                \n                                        examiner\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        room\n                                \n                                \n                                        semester\n                                \n                                \n                                        subject\n                                \n                                \n                                        time\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseOfStudy\n                                    \n                                \n                                \n                                    \n                                        courseOfStudy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the exam belong to which course of study\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the day at which the exam will take place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    duration of the exam\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        examiner\n                                    \n                                \n                                \n                                    \n                                        examiner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    examiner name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    optional attribute\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        room\n                                    \n                                \n                                \n                                    \n                                        room:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    room at which the exam will take place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        semester\n                                    \n                                \n                                \n                                    \n                                        semester:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the exam belongs to a subject that is taken in which semester?\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    exam's subject\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the time at which the exam will take place\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    type of the exam; PSTA/ written/Oral\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Exam {\n    /**\n     * optional attribute\n     */\n    id?: string;  \n    /**\n     * exam's subject\n     */\n    subject: string;\n    /**\n     * the exam belong to which course of study\n     */\n    courseOfStudy: string;\n    /**\n     * the day at which the exam will take place\n     */\n    day: string;\n    /**\n     * the time at which the exam will take place\n     */\n    time: string; \n    /**\n     * duration of the exam\n     */\n    duration: string;\n    /**\n     * room at which the exam will take place\n     */ \n    room: string;\n    /**\n     * examiner name\n     */\n    examiner: string;\n    /**\n     * the exam belongs to a subject that is taken in which semester?\n     */\n    semester: string;\n    /**\n     * type of the exam; PSTA/ written/Oral\n     */\n    type: string;\n   \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExamsComponent.html":{"url":"components/ExamsComponent.html","title":"component - ExamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info/exams/exams.component.ts\n\n\n    \n        Description\n    \n    \n        this components shows the exam schedule, if the exam tab is clicked which resides in the info component \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-exams\n            \n\n            \n                styleUrls\n                ./exams.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./exams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                examService\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(examService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/exams/exams.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        examService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a get HTTP service for fetching Exam Model JSON objects from mongoDB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/exams/exams.component.ts:53\n                \n            \n\n\n            \n                \n                    A method for filtering the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the input that is filled in the form field (filter text field)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/exams/exams.component.ts:46\n                \n            \n\n\n            \n                \n                    after the component views have been fully initialized, the paginator is set \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/exams/exams.component.ts:39\n                \n            \n\n\n            \n                \n                    on component initilization a get HTTP request is performed \nit fetches the Exam model Json objects from mongoDB\nmat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/exams.component.ts:21\n                            \n                        \n\n                \n                    \n                        instantiating a mat table data source with Exam Models as parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['subject','courseOfStudy','day', 'time', 'duration','room','examiner','semester','type']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/exams.component.ts:25\n                            \n                        \n\n                \n                    \n                        specifying which properties of the Exam model I would like to show in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            examService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/exams.component.ts:30\n                            \n                        \n\n                \n                    \n                        a get HTTP service for fetching Exam Model JSON objects from mongoDB\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/exams.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit , ViewChild} from '@angular/core';\nimport { Exam } from './examModel';\nimport { HttpService } from './http.service';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n/**\n * this components shows the exam schedule, if the exam tab is clicked which resides in the info component \n*/\n@Component({\n  selector: 'app-exams',\n  templateUrl: './exams.component.html',\n  styleUrls: ['./exams.component.scss']\n})\n\nexport class ExamsComponent implements OnInit, AfterViewInit {\n \n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  /**\n   * instantiating a mat table data source with Exam Models as parameter\n  */\n  dataSource = new MatTableDataSource();   // it assumes it as an array of the model\n  /**\n   * specifying which properties of the Exam model I would like to show in the table\n  */\n  displayedColumns = ['subject','courseOfStudy','day', 'time', 'duration','room','examiner','semester','type'];  // array of string from the table column\n  /**\n   * Constructor\n   * @param examService a get HTTP service for fetching Exam Model JSON objects from mongoDB\n  */\n constructor( public examService : HttpService ) { }\n \n  /**\n    * on component initilization a get HTTP request is performed \n    * \n    * it fetches the Exam model Json objects from mongoDB\n    * \n    * mat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n  */\n  ngOnInit() {  \n    this.examService.getExamInfoFromServer();\n    setTimeout(() => {this.dataSource.data = this.examService.exam},1500);\n  }\n  /**\n   * after the component views have been fully initialized, the paginator is set \n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n  /**\n   * A method for filtering the table\n   * @param filterValue the input that is filled in the form field (filter text field)\n   */\n  filter( filterValue : string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n\n\n    \n\n    \n        \n\n    \n    \n        \n            \n                  \n            \n            \n                \n                    {{\"exams-table-subject\" | translate}}\n                     {{ element.subject }}\n                    \n                \n                \n                    {{\"exams-table-courseOfStudy\" | translate}}\n                     {{ element.courseOfStudy}}\n                    \n                \n                \n                    {{\"exams-table-day\" | translate}}\n                     {{ element.day}}\n                    \n                \n    \n                \n                    {{\"exams-table-time\" | translate}}\n                     {{ element.time}}\n                    \n                \n                \n                    {{\"exams-table-duration\" | translate}}\n                     {{ element.duration}}\n                    \n                \n                \n                    {{\"exams-table-room\" | translate}}\n                     {{ element.room}}\n                    \n                \n                \n                    {{\"exams-table-examiner\" | translate}}\n                     {{ element.examiner}}\n                    \n                \n\n                \n                    {{\"exams-table-semester\" | translate}}\n                     {{ element.semester}}\n                    \n                \n\n                \n                    {{\"exams-table-type\" | translate}}\n                     {{ element.type}}\n                    \n                \n                \n                \n                    \n        \n        \n            \n            \n        \n            \n        \n        \n            \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n                \n                    ./exams.component.scss\n                \n                table {\n    width: 90%;\n    margin-left:5%;\n    margin-right:5%;\n  }\n\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    mat-paginator{\n        color: mat-color($mywarn);\n    }\n}\ndiv {\n     @include corporateIdTextColor($theme); \n}\n\n\n\n.colorprimary {\n    background-color: #009fe3;\n    \n}\n.colorwarn {\n    background-color: #1a4273;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                          {{\"exams-table-subject\" | translate}}                     {{ element.subject }}                                                                        {{\"exams-table-courseOfStudy\" | translate}}                     {{ element.courseOfStudy}}                                                                        {{\"exams-table-day\" | translate}}                     {{ element.day}}                                                                            {{\"exams-table-time\" | translate}}                     {{ element.time}}                                                                        {{\"exams-table-duration\" | translate}}                     {{ element.duration}}                                                                        {{\"exams-table-room\" | translate}}                     {{ element.room}}                                                                        {{\"exams-table-examiner\" | translate}}                     {{ element.examiner}}                                                                        {{\"exams-table-semester\" | translate}}                     {{ element.semester}}                                                                        {{\"exams-table-type\" | translate}}                     {{ element.type}}                                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/footer/footer.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing footer elements for all pages\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/footer/footer.component.ts:10\n                            \n                        \n\n                \n                    \n                            empty constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/footer/footer.component.ts:18\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * a component for showing footer elements for all pages\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * empty constructor\n   */\n  constructor() { }\n  /**\n   * empty Initialization\n   */\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n        \n\n\n\n    \n    {{\"footer-page-contact\" | translate}} | {{\"footer-page-site-credit\" | translate}} | {{\"footer-page-data-protection\" | translate}} | {{\"footer-page-alumni\" | translate}} | {{\"footer-page-media\" | translate}} | {{\"footer-page-certificates\" | translate}} \n                \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                .seven {\n    background-color: white;\n    height: 100px;\n}\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn); \n    div  {\n        color: mat-color($mywarn);  \n    }\n    \n}\ndiv.seven {\n    @include corporateIdTextColor($theme);  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{\"footer-page-contact\" | translate}} | {{\"footer-page-site-credit\" | translate}} | {{\"footer-page-data-protection\" | translate}} | {{\"footer-page-alumni\" | translate}} | {{\"footer-page-media\" | translate}} | {{\"footer-page-certificates\" | translate}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FreeRoomComponent.html":{"url":"components/FreeRoomComponent.html","title":"component - FreeRoomComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FreeRoomComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info/freeRoom/freeRoom.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing lectures occuring in a specific room at a certain time/date\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-free-room\n            \n\n            \n                styleUrls\n                ./freeRoom.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./freeRoom.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chosenDate\n                            \n                            \n                                chosenDateTime\n                            \n                            \n                                chosenID\n                            \n                            \n                                chosenTime\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                ID\n                            \n                            \n                                    Public\n                                lecturesService\n                            \n                            \n                                paginator\n                            \n                            \n                                time\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printdata\n                            \n                            \n                                setDate\n                            \n                            \n                                setID\n                            \n                            \n                                setTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(lecturesService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/freeRoom/freeRoom.component.ts:49\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lecturesService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a get HTTP service for fetching lecture Model JSON objects from mongoDB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:84\n                \n            \n\n\n            \n                \n                    A method for filtering the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the input that is filled in the form field (filter text field)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:64\n                \n            \n\n\n            \n                \n                    after the component views have been fully initialized, the paginator is set \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:60\n                \n            \n\n\n            \n                \n                    empty ngOnInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printdata\n                        \n                        \n                    \n                \n            \n            \n                \nprintdata(id: any, dateTime: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:76\n                \n            \n\n\n            \n                \n                    on component initilization a get HTTP request is performed \nit fetches lecture model Json objects from mongoDB\nmat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        room ID returned after invoking setID method\n\n                                    \n                                \n                                \n                                    dateTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the concatenated chosenDateTime variable after setDate/ setTime method have been invoked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetDate(date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:114\n                \n            \n\n\n            \n                \n                    storing the selected date in chosenDate variable\nconcatenating selected date in the chosenDateTime variable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected date from the form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setID\n                        \n                        \n                    \n                \n            \n            \n                \nsetID(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:92\n                \n            \n\n\n            \n                \n                    storing the selected room ID in chosenID variable \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected room ID from the form \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetTime(x: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/freeRoom.component.ts:102\n                \n            \n\n\n            \n                \n                    storing the selected time slot in chosenTime variable\nconcatenating selected time slot in the chosenDateTime variable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected time slot from the form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Any Any 00 0000 00:00:00 GMT+0000 (Eastern European Standard Time)\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:45\n                            \n                        \n\n                \n                    \n                        a variable in which the selected date is stored in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenDateTime\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:49\n                            \n                        \n\n                \n                    \n                        a variable in which chosen date and time are concatenated together \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:37\n                            \n                        \n\n                \n                    \n                        a variable in which the selected room ID is stored in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chosenTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"00:00\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:41\n                            \n                        \n\n                \n                    \n                        a variable in which the selected time slot is stored in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:21\n                            \n                        \n\n                \n                    \n                        instantiating a mat table data source with Lectures Models as parameters\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['description','organiser','participants','startDateTime']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:25\n                            \n                        \n\n                \n                    \n                        specifying which properties of the Lecture model I would like to show in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10' ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:29\n                            \n                        \n\n                \n                    \n                        a list of room ids that a user can select in the form, to be used in the HTML template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lecturesService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:55\n                            \n                        \n\n                \n                    \n                        a get HTTP service for fetching lecture Model JSON objects from mongoDB\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00' ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/freeRoom.component.ts:33\n                            \n                        \n\n                \n                    \n                        a list of time slots that a user can select in the form, to be used in the HTML template\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit , ViewChild} from '@angular/core';\nimport { Lecture } from './lectureModel';\nimport { HttpService } from './http.service';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n/**\n * a component for showing lectures occuring in a specific room at a certain time/date\n */\n@Component({\n  selector: 'app-free-room',\n  templateUrl: './freeRoom.component.html',\n  styleUrls: ['./freeRoom.component.scss']\n})\n\nexport class FreeRoomComponent implements OnInit, AfterViewInit {\n \n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  /**\n   * instantiating a mat table data source with Lectures Models as parameters\n   */\n dataSource = new MatTableDataSource();   \n /**\n   * specifying which properties of the Lecture model I would like to show in the table\n   */\n displayedColumns = ['description','organiser','participants','startDateTime'];  \n /**\n  * a list of room ids that a user can select in the form, to be used in the HTML template\n  */\n ID = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10' ];\n /**\n  * a list of time slots that a user can select in the form, to be used in the HTML template\n  */\n time = ['08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00' ];\n /**\n  * a variable in which the selected room ID is stored in \n  */\n chosenID :string;\n /**\n  * a variable in which the selected time slot is stored in \n  */\n chosenTime= \"00:00\";\n /**\n  * a variable in which the selected date is stored in \n  */\n chosenDate= \"Any Any 00 0000 00:00:00 GMT+0000 (Eastern European Standard Time)\";\n /**\n  * a variable in which chosen date and time are concatenated together \n  */\n chosenDateTime;\n /**\n  * Constructor\n  * @param lecturesService a get HTTP service for fetching lecture Model JSON objects from mongoDB\n  */\n\n  constructor( public lecturesService : HttpService) { }\n \n    /**\n     * empty ngOnInit\n     */\n    ngOnInit() { }\n    /**\n      * after the component views have been fully initialized, the paginator is set \n    */\n    ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n    }\n    /**\n    * on component initilization a get HTTP request is performed \n    * \n    * it fetches lecture model Json objects from mongoDB\n    * \n    * mat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n     * @param id room ID returned after invoking setID method\n     * @param dateTime the concatenated chosenDateTime variable after setDate/ setTime method have been invoked\n     */\n    printdata(id: any, dateTime: any) {\n      this.lecturesService.getLectureInfoFromServer(id, dateTime);\n      setTimeout(() => {this.dataSource.data = this.lecturesService.lectures}, 1500);\n    }\n    /**\n      * A method for filtering the table\n      * @param filterValue the input that is filled in the form field (filter text field)\n    */\n    filter( filterValue : string) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    /**\n     * storing the selected room ID in chosenID variable \n     * @param x selected room ID from the form \n     */\n    setID(x : string) {\n      this.chosenID = x;\n      console.log(\"Room ID\", this.chosenID);\n    }\n    /**\n     * storing the selected time slot in chosenTime variable\n     * \n     * concatenating selected time slot in the chosenDateTime variable\n     * @param x selected time slot from the form\n     */\n    setTime(x : any) {\n      this.chosenTime = x;\n      console.log(\"Time\", this.chosenTime);\n      this.chosenDateTime= this.chosenDate.substring(0,10) + \" \" + this.chosenTime.substring(0,5);\n      console.log(\"Calling API with this Date/Time\", this.chosenDateTime);\n    }\n    /**\n     * storing the selected date in chosenDate variable\n     * \n     * concatenating selected date in the chosenDateTime variable\n     * @param date selected date from the form\n     */\n    setDate(date: any) {\n      // takes the time zone difference into account\n      const temp=  new Date(date.getTime()+ Math.abs(date.getTimezoneOffset()*60000) ) ;\n      this.chosenDate= temp.toISOString();\n      this.chosenDateTime= this.chosenDate.substring(0,10)+ \" \" + this.chosenTime.substring(0,5);\n      console.log(\"Calling API with this Date/Time\", this.chosenDateTime);\n    }\n\n}\n\n\n    \n\n    \n        \n    \n        \n            \n                \n                     {{\"freeRoom-page-room-id\" | translate}}\n                    \n                     {{id}} \n                    \n                \n\n                \n                     {{\"freeRoom-page-time\" | translate}}\n                    \n                     {{timeSlot}} \n                    \n                \n            \n            \n                \n                    \n                    \n                         keyboard_arrow_down\n                        \n\n                \n            \n            \n                 {{\"freeRoom-page-search-button\" | translate}}\n            \n        \n    \n   \n        \n        \n            \n                \n                     {{\"freeRoom-table-description\" | translate}}\n                     {{ element.description }}  \n                \n                \n                    {{\"freeRoom-table-organiser\" | translate}}\n                     {{ element.organiser}}   \n                \n                \n                    {{\"freeRoom-table-startDateTime\" | translate}}\n                     {{ element.startDateTime}}  \n                \n\n                \n                    {{\"freeRoom-table-participants\" | translate}}\n                     {{ element.participants}}     \n                \n        \n                \n                       \n            \n\n            \n\n            \n        \n        \n                        \n    \n        \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n                \n                    ./freeRoom.component.scss\n                \n                table {\n    width: 90%;\n    margin-left:5%;\n    margin-right:5%;\n   \n  }\n\n  .container {\n\n    display:flex;\n    justify-content: center;\n    //font-size: 5px;\n    \n  }\n\n  ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n    color: #009fe3;\n}\n\n  \n\n  .date {\n    margin-top: 17px; \n  }\n\n  .center {\n    display: flex;\n    justify-content: center;\n    \n    \n  }\n\nbutton {\n\n  margin-bottom: 10px;\n  color: white !important;\n  \n  \n}\n\nmat-form-field {\n\n  width : 200px;\n  margin: 20px;\n  \n}\n\n\n  @import './src/my-theme.scss';\n  @import '~@angular/material/theming';\n  \n  @mixin corporateIdTextColor($theme) {\n      $config: mat-get-color-config($theme);\n      $myprimary: map-get($config, primary);\n      $myaccent: map-get($config, accent);\n      $mywarn: map-get($config, warn);\n      mat-paginator{\n          color: mat-color($mywarn);\n      }\n  \n  }\n  div {\n       @include corporateIdTextColor($theme); \n  }\n  \n  \n  \n  .colorprimary {\n      background-color: #009fe3;\n      \n  }\n  .colorwarn {\n      background-color: #1a4273;\n  }\n  \n  .resizeField {\n    font-size: 1px;\n  }\n\n  .resizeDateField {\n    font-size: 10px;\n  }\n\n \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{\"freeRoom-page-room-id\" | translate}}                                         {{id}}                                                                          {{\"freeRoom-page-time\" | translate}}                                         {{timeSlot}}                                                                                                                                              keyboard_arrow_down                                                                                 {{\"freeRoom-page-search-button\" | translate}}                                                                                            {{\"freeRoom-table-description\" | translate}}                     {{ element.description }}                                                      {{\"freeRoom-table-organiser\" | translate}}                     {{ element.organiser}}                                                       {{\"freeRoom-table-startDateTime\" | translate}}                     {{ element.startDateTime}}                                                      {{\"freeRoom-table-participants\" | translate}}                     {{ element.participants}}                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FreeRoomComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        a component for showing header elements for all pages\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:10\n                            \n                        \n\n                \n                    \n                            Empty constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:18\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n/**\n * a component for showing header elements for all pages\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  /**\n   * Empty constructor\n   */\n  constructor() { }\n  /**\n   * empty Initialization\n   */\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n             \n\n        \n        \n              {{\"header-img-title-1\" | translate}}  {{\"header-img-title-2\" | translate}}{{\"header-img-title-3\" | translate}} {{\"header-img-title-4\" | translate}}\n        \n\n    \n   \n     \n        {{\"header\" | translate}}\n        {{\"header2\" | translate}}\n    \n\n\n     \n    \n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .one {\n    \n    height: 586px;\n\n    .overImage{\n        \n        position: absolute;\n        top: 15%;\n        font-size: 20pt;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        color: white;\n        margin-left: 50px;\n    }\n        .highlight  {\n\n            background-color: white;\n            color: black;\n            padding: 0;\n\n        }\n    \n   \n\n\n}\n\n\n.two {\n    background-color:white;\n    height: 150px;\n    \n}\n\n\n\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    p.mat-display-1, p.mat-subheading-2, span.highlight {\n        color: mat-color($myprimary);\n    }\n\n\n}\n\ndiv.two, div.overImage{\n     @include corporateIdTextColor($theme); \n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{\"header-img-title-1\" | translate}}  {{\"header-img-title-2\" | translate}}{{\"header-img-title-3\" | translate}} {{\"header-img-title-4\" | translate}}                            {{\"header\" | translate}}        {{\"header2\" | translate}}             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/exams/http.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for fetching ExamsModel JSON objects from database (Exams schedule)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exam\n                            \n                            \n                                exams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExamInfoFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/exams/http.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular HTTPClient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExamInfoFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetExamInfoFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/exams/http.service.ts:33\n                \n            \n\n\n            \n                \n                    invokes a get Http request to the API \n returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Exam[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/http.service.ts:21\n                            \n                        \n\n                \n                    \n                        transformed JSON object to user defined Exam model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/exams/http.service.ts:17\n                            \n                        \n\n                \n                    \n                        contains the JSON objects returned from the HTTP request\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Exam } from './examModel';\n/**\n * A service for fetching ExamsModel JSON objects from database (Exams schedule)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  /**\n   * contains the JSON objects returned from the HTTP request\n   *  \n   */\n  exams=[];  // before transformation\n  /**\n   *  transformed JSON object to user defined Exam model\n   */\n  exam: Exam[] = []; // after transformation\n  /**\n   * \n   * @param http angular HTTPClient service\n   */\n  constructor(private http : HttpClient) { }\n  /**\n   * invokes a get Http request to the API \n   * \n    * returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n  */\n  \n  getExamInfoFromServer() {\n      /**\n       * emptying both arrays before initiating the request from server\n       */\n      this.exam.splice(0, this.exam.length);\n      this.exams.splice(0, this.exams.length);\n    \n      \n    this.http.get('http://localhost:3000/exams') \n      /**\n       * transforming the JSON object to user defined Model \n       */ \n      .pipe(map((response :any) => {   \n              for ( let x in response) {\n                this.exams.push(response[x]);\n              };\n        return this.exams.map(x => { return { \n             subject: x.subject,\n             courseOfStudy: x.courseOfStudy,\n             day: x.day,\n             time: x.Time,\n             duration: x.duration,\n             room: x.room,\n             examiner: x.examiner,\n             semester: x.semester,\n             type: x.type,\n\n        }});\n        \n      }) )\n      \n     /**\n      * storing the transformed Json object to user defined Exam model in exam array\n      */\n      .subscribe( fetcheddata => { \n        for (let x in fetcheddata) {\n          this.exam[x] = fetcheddata[x];\n        }\n      });\n\n\n  }\n\n\n}\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService-1.html":{"url":"injectables/HttpService-1.html","title":"injectable - HttpService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/freeRoom/http.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for fetching specific LecturesModel JSON object that is going to be held in a specific room ID and at a specific date/time from database (free rooms)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lectures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLectureInfoFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/freeRoom/http.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular HTTPClient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLectureInfoFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetLectureInfoFromServer(id: any, dateTime: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/freeRoom/http.service.ts:33\n                \n            \n\n\n            \n                \n                    invokes a get Http request to the API \nreturned Json Objects are restructured to User defined Model, and stored in an array of that Model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID of the room set by the user in the form \n\n                                    \n                                \n                                \n                                    dateTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Time and date set by the user in the ngform\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lectures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lecture[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/freeRoom/http.service.ts:17\n                            \n                        \n\n                \n                    \n                        transformed JSON object to user defined data model \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Lecture } from './lectureModel';\n\n/**\n * A service for fetching specific LecturesModel JSON object that is going to be held in a specific room ID and at a specific date/time from database (free rooms)\n*/\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  \n  /**\n   * transformed JSON object to user defined data model \n  */\n  lectures: Lecture[] = [];\n  /**\n   * constructor\n   * @param http angular HTTPClient service\n  */\n  constructor(private http : HttpClient) { }\n\n  \n    /**\n      * invokes a get Http request to the API \n      * \n      * returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n      * @param id  ID of the room set by the user in the form \n      * @param dateTime Time and date set by the user in the ngform\n    */\n  \n    getLectureInfoFromServer(id:any, dateTime: any) {\n      /**\n       * emptying array before initiating the request from server\n       */\n      this.lectures.splice(0, this.lectures.length);\n      /**\n       * transforming the JSON object to user defined Model \n       */\n      let url = `https://thabella.th-deg.de/thabella/opn/period/findByRoom/${id}/${dateTime}`;\n      this.http.get(url)  \n          .pipe(map((response :any) => {  \n            for ( let x in response) {\n              this.lectures.push(response[x]); \n            };\n            return this.lectures.map(x => { return { \n              description: x.description,\n              organiser: x.organiser,\n              startDateTime: x.startDateTime,\n              participants: x.participants\n            }});\n          }))\n      /**\n        * storing the transformed Json object to user defined Exam model in exam array\n        */\n      \n        .subscribe( fetcheddata => { \n          console.log(fetcheddata);\n          for (let x in fetcheddata) {\n            this.lectures[x] = fetcheddata[x];\n            console.log(fetcheddata[x]);\n          }\n          \n        });\n\n\n    }\n\n\n}\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService-2.html":{"url":"injectables/HttpService-2.html","title":"injectable - HttpService-2","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/lectures-plan/http.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for fetching EventsModel JSON objects from database (for instance lecture plans)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                events\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEventInfoFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/lectures-plan/http.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular HTTPClient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventInfoFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventInfoFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/lectures-plan/http.service.ts:32\n                \n            \n\n\n            \n                \n                    invokes a get Http request to the API \n returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Events[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/http.service.ts:20\n                            \n                        \n\n                \n                    \n                        transformed JSON object to user defined data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/http.service.ts:16\n                            \n                        \n\n                \n                    \n                        contains the JSON objects returned from the HTTP request \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Events } from './eventsModel';\n/**\n * A service for fetching EventsModel JSON objects from database (for instance lecture plans)\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  /**\n   * contains the JSON objects returned from the HTTP request \n   */\n  events=[];  // before transformation\n  /**\n   * transformed JSON object to user defined data model\n   */\n  event: Events[] = []; // after transformation\n  /**\n   * \n   * @param http angular HTTPClient service\n   */\n  constructor(private http : HttpClient) {}\n  /**\n   * invokes a get Http request to the API \n   * \n    * returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n  */\n  \n  getEventInfoFromServer() {\n    /**\n       * emptying both arrays before initiating the request from server\n       */\n      this.event.splice(0, this.event.length);\n      this.events.splice(0, this.events.length);\n      \n      /**\n         * transforming the JSON object to user defined Model \n         */\n        this.http.get('https://thabella.th-deg.de/thabella/opn/api/events/20200318/')  \n          .pipe(map((response :any) => {   \n            for ( let x in response) {\n              this.events.push(response[x]);\n            };\n            return this.events.map(x => { return { \n              description: x.description,\n              organiser: x.organiser,\n              label: x.label,\n              info:{ end: x.calendarEntry.end, begin: x.calendarEntry.begin,  name: x.calendarEntry.name},  \n            }}); \n          }))\n      \n            /**\n              * storing the transformed Json object to user defined Exam model in exam array\n            */\n          .subscribe( fetcheddata => { \n            for (let x in fetcheddata) {\n              this.event[x] = fetcheddata[x];\n            }  \n          });\n\n        }\n  \n}\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService-3.html":{"url":"injectables/HttpService-3.html","title":"injectable - HttpService-3","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/mensa/http.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for fetching MensaModel JSON objects from database ( Mensa menu)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mensa\n                            \n                            \n                                mensas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMensaInfoFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/mensa/http.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular HTTPClient service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMensaInfoFromServer\n                        \n                        \n                    \n                \n            \n            \n                \ngetMensaInfoFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/mensa/http.service.ts:32\n                \n            \n\n\n            \n                \n                    invokes a get Http request to the API \n returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mensa\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Mensa[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/http.service.ts:21\n                            \n                        \n\n                \n                    \n                        transformed JSON object to user defined data model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mensas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/http.service.ts:16\n                            \n                        \n\n                \n                    \n                        contains the JSON objects returned from the HTTP request \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Mensa } from './mensaModel';\n/**\n * A service for fetching MensaModel JSON objects from database ( Mensa menu)\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  /**\n   * contains the JSON objects returned from the HTTP request \n   */\n  mensas=[];  // before transformation\n  /**\n   * transformed JSON object to user defined data model\n   *  \n   */\n  mensa: Mensa[] = []; // after transformation\n  /**\n   * \n   * @param http angular HTTPClient service\n   */\n  constructor(private http : HttpClient) { }\n  /**\n   * invokes a get Http request to the API \n   * \n    * returned Json Objects are restructured to User defined Model, and stored in an array of that Model\n  */\n  getMensaInfoFromServer() {\n      /**\n        * emptying both arrays before initiating the request from server\n      */\n      this.mensas.length=0;\n      this.mensa.length=0;\n    \n      this.http.get('http://localhost:3000/mensa') \n        /**\n         * transforming the JSON object to user defined Model \n         */ \n      .pipe(map((response :any) => {   \n        for ( let x in response) {\n          this.mensas.push(response[x]);\n        };\n          return this.mensas.map(x => { return { \n                day:x.day,\n                mainPlate: x.mainPlate,\n                salad: x.salad,\n                drinks: x.drinks,\n                price: x.price,\n                openingTime: x.openingTime,\n                closingTime: x.closingTime,}\n          });\n        \n      }))\n      /**\n      * storing the transformed Json object to user defined Exam model in exam array\n      */\n      .subscribe( fetcheddata => { \n        for (let x in fetcheddata) {\n          this.mensa[x] = fetcheddata[x];\n          console.log(\"reached\");\n        }\n        \n      });\n        \n  }\n\n}\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/I18nModule.html":{"url":"modules/I18nModule.html","title":"module - I18nModule","body":"\n                   \n\n\n\n\n    Modules\n    I18nModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/i18n/i18n.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translateLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  exports: [TranslateModule]\n})\nexport class I18nModule {\n\n  \n  constructor(translate: TranslateService) {\n    // translate.addLangs(['en', 'de']);\n    // translate.setDefaultLang('de');\n    // const browserLang = translate.getBrowserLang();\n    // translate.use(browserLang.match(/en|de/) ? browserLang : 'en');\n   \n  }\n}\n\nexport function translateLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info/info.component.ts\n\n\n    \n        Description\n    \n    \n        a component that allow us to navigate between child components through tabs\na parent component for \"freeRoom\", \"exams\", \"mensa\", \"lectures-plan\" components\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/info/info.component.ts:15\n                            \n                        \n\n                \n                    \n                            empty constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/info.component.ts:23\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n\n/**\n * a component that allow us to navigate between child components through tabs\n * \n * a parent component for \"freeRoom\", \"exams\", \"mensa\", \"lectures-plan\" components\n */\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n  /**\n   * empty constructor\n   */\n  constructor() { }\n  /**\n   * empty Initialization\n   */\n  ngOnInit(): void {}\n \n}\n\n    \n\n    \n        \n  \n     \n        \n          \n          \n        \n                      \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                 .six {\n    background-color: white;\n    height: 643px;\n    margin-left: 5%;\n    margin-right: 5%;\n  }\n\n\n  \n  \n\n  /* active tab */\n  ::ng-deep.mat-tab-list .mat-tab-labels .mat-tab-label {\n  color:white;\n  background-color: #009fe3;\n  }\n  \n \n  \n  \n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Lecture.html":{"url":"interfaces/Lecture.html","title":"interface - Lecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Lecture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/freeRoom/lectureModel.ts\n        \n\n            \n                Description\n            \n            \n                A model that represents lectures that are taking place in a specific room at a certain Date/time\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        organiser\n                                \n                                \n                                        participants\n                                \n                                \n                                        startDateTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    description of the subject teached\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    optional attribute\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organiser\n                                    \n                                \n                                \n                                    \n                                        organiser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the lecturer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participants\n                                    \n                                \n                                \n                                    \n                                        participants:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Lecture audience, from which faculty ? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDateTime\n                                    \n                                \n                                \n                                    \n                                        startDateTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    at what time the lecture starts on that chosen date\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Lecture {\n    /**\n     * optional attribute\n     */\n    id?: string; \n    /**\n     * description of the subject teached\n     */ \n    description: string;\n    /**\n     * the lecturer \n     */\n    organiser: string;\n    /**\n     * at what time the lecture starts on that chosen date\n     */\n    startDateTime: string;\n    /**\n     * Lecture audience, from which faculty ? \n     */\n    participants : string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LecturesPlanComponent.html":{"url":"components/LecturesPlanComponent.html","title":"component - LecturesPlanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LecturesPlanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info/lectures-plan/lectures-plan.component.ts\n\n\n    \n        Description\n    \n    \n        this components shows events that are planned for the year. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lectures-plan\n            \n\n            \n                styleUrls\n                ./lectures-plan.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lectures-plan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                eventsService\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(eventsService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/lectures-plan/lectures-plan.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a get HTTP service for fetching Event Model JSON objects from mongoDB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:55\n                \n            \n\n\n            \n                \n                    A method for filtering the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the input that is filled in the form field (filter text field)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:47\n                \n            \n\n\n            \n                \n                    after the component views have been fully initialized, the paginator is set \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:40\n                \n            \n\n\n            \n                \n                    on component initilization a get HTTP request is performed \nit fetches the Event model Json objects from mongoDB\nmat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:21\n                            \n                        \n\n                \n                    \n                        instantiating a mat table data source with Events Model as parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['description','organiser','label', 'name', 'begin','end']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:25\n                            \n                        \n\n                \n                    \n                        specifying which properties of the Event model I would like to show in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eventsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:31\n                            \n                        \n\n                \n                    \n                        a get HTTP service for fetching Event Model JSON objects from mongoDB\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/lectures-plan/lectures-plan.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit , ViewChild} from '@angular/core';\nimport { Events } from './eventsmodel';\nimport { HttpService } from './http.service';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n/**\n * this components shows events that are planned for the year. \n */\n@Component({\n  selector: 'app-lectures-plan',\n  templateUrl: './lectures-plan.component.html',\n  styleUrls: ['./lectures-plan.component.scss']\n})\n\nexport class LecturesPlanComponent implements OnInit, AfterViewInit {\n \n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  /**\n   * instantiating a mat table data source with Events Model as parameter\n   */\n  dataSource = new MatTableDataSource();   \n  /**\n   * specifying which properties of the Event model I would like to show in the table\n   */\n  displayedColumns = ['description','organiser','label', 'name', 'begin','end']; \n  /**\n   * Constructor\n   * @param eventsService a get HTTP service for fetching Event Model JSON objects from mongoDB\n   */ \n\n  constructor( public eventsService : HttpService) { }\n\n  /**\n    * on component initilization a get HTTP request is performed \n    * \n    * it fetches the Event model Json objects from mongoDB\n    * \n    * mat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n  */\n  ngOnInit() {  \n    this.eventsService.getEventInfoFromServer();\n    setTimeout(() => {this.dataSource.data = this.eventsService.event},1500); \n  }\n    /**\n      * after the component views have been fully initialized, the paginator is set \n    */\n    ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n    }\n  \n    /**\n      * A method for filtering the table\n      * @param filterValue the input that is filled in the form field (filter text field)\n    */\n    filter( filterValue : string) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n}\n\n\n\n\n\n\n    \n\n    \n        \n\n    \n          \n    \n    \n        \n            {{\"event-table-description\" | translate}}\n             {{ element.description }}\n           \n        \n        \n            {{\"event-table-organiser\" | translate}}\n             {{ element.organiser}}\n            \n        \n        \n            {{\"event-table-label\" | translate}}\n             {{ element.label}}\n        \n        \n            {{\"event-table-semester\" | translate}}\n             {{ element.info.name}}\n        \n        \n            {{\"event-table-begin\" | translate}}\n             {{ element.info.begin}}\n        \n        \n            {{\"event-table-end\" | translate}}\n             {{ element.info.end}}\n        \n\n        \n        \n            \n\n\n    \n    \n\n    \n\n                    \n\n    \n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./lectures-plan.component.scss\n                \n                \n\n\ntable {\n    width: 90%;\n    margin-left:5%;\n    margin-right:5%;\n   \n  }\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    mat-paginator{\n        color: mat-color($mywarn);\n    }\n\n}\n\ndiv {\n     @include corporateIdTextColor($theme); \n}\n\n\n\n.colorprimary {\n    background-color: #009fe3;\n    \n}\n.colorwarn {\n    background-color: #1a4273;\n}\n\n\nmat-form-field{\n    width:400px;  \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\"event-table-description\" | translate}}             {{ element.description }}                                       {{\"event-table-organiser\" | translate}}             {{ element.organiser}}                                        {{\"event-table-label\" | translate}}             {{ element.label}}                            {{\"event-table-semester\" | translate}}             {{ element.info.name}}                            {{\"event-table-begin\" | translate}}             {{ element.info.begin}}                            {{\"event-table-end\" | translate}}             {{ element.info.end}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LecturesPlanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        a component which contains the login/Sign up form \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n            \n                exportAs\n                ngForm\n            \n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginButtonSelected\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                signupButtonSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                selectButton\n                            \n                            \n                                selectButton2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CredentialsPostService, authService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CredentialsPostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for storing/posting User credentials on MongoDB\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for authenticating users credentials\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:58\n                \n            \n\n\n            \n                \n                    empty ngOnInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:72\n                \n            \n\n\n            \n                \n                    we have signup Button and login button in out HTML template with a type \"submit\"\nif login button is clicked \"Authorize\" method of the authorization service is invoked which authenticate the user.\nif signup button is clicked, \"submitToServer\" method is invoked within the Credential post service which stores the user credentials on MongoDB after ensuring that the user credentials are unique\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        fetches the values of submited credentials from the form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectButton\n                        \n                        \n                    \n                \n            \n            \n                \nselectButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:32\n                \n            \n\n\n            \n                \n                    on clicking login Button, \"loginButtonSelected\" variable is set and \" signupButtonSelected\" variable is reset\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectButton2\n                        \n                        \n                    \n                \n            \n            \n                \nselectButton2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:41\n                \n            \n\n\n            \n                \n                    on clicking signup Button, \"loginButtonSelected\" variable is reset and \" signupButtonSelected\" variable is set\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthorizationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                        A service for authenticating users credentials\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginButtonSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        A variable that is set when the login button is clicked\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CredentialsPostService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                        A service for storing/posting User credentials on MongoDB\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupButtonSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        A variable that is set when the signup button is clicked\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthorizationService } from '../services/authorization.service';\nimport { CredentialsPostService } from '../services/credentialspost.service';\nimport { NgForm } from \"@angular/forms\";\n\n/**\n * a component which contains the login/Sign up form \n */\n\n  @Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    exportAs: 'ngForm'\n  })\n\n  export class LoginComponent implements OnInit {\n      \n      \n      /**\n       * A variable that is set when the login button is clicked\n       */\n      loginButtonSelected: boolean = false;\n      /**\n       * A variable that is set when the signup button is clicked\n       */\n      signupButtonSelected: boolean = false;\n      \n      /**\n       * on clicking login Button, \"loginButtonSelected\" variable is set and \" signupButtonSelected\" variable is reset\n      */\n      selectButton() {\n        this.loginButtonSelected = true;\n        this.signupButtonSelected = false;\n        console.log(this.loginButtonSelected);\n        console.log(this.signupButtonSelected);\n      }\n      /**\n       * on clicking signup Button, \"loginButtonSelected\" variable is reset and \" signupButtonSelected\" variable is set\n      */\n      selectButton2() {\n        this.loginButtonSelected = false;\n        this.signupButtonSelected = true;\n        console.log(this.loginButtonSelected);\n        console.log(this.signupButtonSelected);\n      }\n      /**\n       * \n       * @param service A service for storing/posting User credentials on MongoDB\n       * @param authService A service for authenticating users credentials\n      */\n      constructor( public service: CredentialsPostService, public authService: AuthorizationService) {}\n      \n      /**\n       * empty ngOnInit\n      */\n\n      ngOnInit(): void {}\n    \n\n     \n\n      /**\n       * we have signup Button and login button in out HTML template with a type \"submit\"\n       * \n       * if login button is clicked \"Authorize\" method of the authorization service is invoked which authenticate the user.\n       * \n       * if signup button is clicked, \"submitToServer\" method is invoked within the Credential post service which stores the user credentials on MongoDB after ensuring that the user credentials are unique\n       * @param form fetches the values of submited credentials from the form\n      */\n\n      onSubmit(form: NgForm) {\n        if (this.signupButtonSelected == true) \n        this.service.submitToServer();\n        else if (this.loginButtonSelected == true) {\n          this.authService.Authorize(form.value.Name, form.value.email, form.value.password);\n        } \n      }\n        // extra functionality\n      // fetchdata() {\n      //   this.service.getFromServer();\n      // }\n\n      \n        // extra functionality\n      // deleteData(userid : string) {\n      //   this.service.deleteFromServer(userid);\n      //   console.log(this.service.Array[1].id);\n          \n      // }\n        \n  }\n\n    \n\n    \n        \n\n\n  \n        {{\"login-page-header\" | translate}}\n    \n               \n                {{\"name\" | translate}}\n                 \n                {{\"username-hint\" | translate}}   \n                 {{\"login-fill-error-username\" | translate}}\n                 Input required          \n            \n\n              \n                {{\"email\" | translate}}\n                 \n                 {{\"login-fill-error-email\" | translate}}\n                 Input required\n            \n\n            \n                {{\"password\" | translate}}\n                 \n                {{\"password-hint\" | translate}}\n                 {{\"login-fill-error-password\" | translate}}\n                 Input required\n            \n            \n            \n        \n            \n            \n                 {{\"login\" | translate}} \n                 {{\"signup\" | translate}} \n                  \n\n    \n    \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n\n.six {\n    background-color:white;\n    height: 643px;\n    margin-left: 5%;\n    margin-right: 5%;\n}\n\nmat-form-field {\n\n   width : 500px; \n}\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n    color: #009fe3;\n}\n #padding {\n    padding-top: 10px;\n    text-align: center;\n}\n\nbutton {\n    margin-right:10px;\n    margin-left: 10px; \n    margin-top:10px;\n    margin-bottom:10px;\n    color: white !important;\n}\n\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    p{\n        color: mat-color($myaccent);\n    }\n}\n div {\n     @include corporateIdTextColor($theme); \n}\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{\"login-page-header\" | translate}}                                   {{\"name\" | translate}}                                 {{\"username-hint\" | translate}}                    {{\"login-fill-error-username\" | translate}}                 Input required                                                    {{\"email\" | translate}}                                  {{\"login-fill-error-email\" | translate}}                 Input required                                        {{\"password\" | translate}}                                 {{\"password-hint\" | translate}}                 {{\"login-fill-error-password\" | translate}}                 Input required                                                                                     {{\"login\" | translate}}                  {{\"signup\" | translate}}                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarkerService.html":{"url":"injectables/MarkerService.html","title":"injectable - MarkerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MarkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/marker.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines two subjects; marker for point A and a marker for point B in order to send the coordinates of both markers to subscribed components \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                markerAstate$\n                            \n                            \n                                markerBstate$\n                            \n                            \n                                    Private\n                                markerSourceA\n                            \n                            \n                                    Private\n                                markerSourceB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendState\n                            \n                            \n                                sendState2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/marker.service.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendState\n                        \n                        \n                    \n                \n            \n            \n                \nsendState(coordinates: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker.service.ts:34\n                \n            \n\n\n            \n                \n                    Sends the langtitude and longtitude of point A to \"Navigation\" component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coordinates\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Lat/Long coordinates of a point A\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendState2\n                        \n                        \n                    \n                \n            \n            \n                \nsendState2(coordinates: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/marker.service.ts:41\n                \n            \n\n\n            \n                \n                    Sends the langtitude and longtitude of point B to \"Navigation\" component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    coordinates\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Lat/Long coordinates of a point B\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerAstate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.markerSourceA.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker.service.ts:21\n                            \n                        \n\n                \n                    \n                        makes the subject as an observable  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerBstate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.markerSourceB.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker.service.ts:29\n                            \n                        \n\n                \n                    \n                        makes the subject as an observable  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerSourceA\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject  ()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker.service.ts:17\n                            \n                        \n\n                \n                    \n                        a subject that represents the longtitude and langtitude of point A\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerSourceB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject  ()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/marker.service.ts:25\n                            \n                        \n\n                \n                    \n                        a subject that represents the longtitude and langtitude of point B\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** \n * Defines two subjects; marker for point A and a marker for point B in order to send the coordinates of both markers to subscribed components \n * \n*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkerService {\n    /** \n     * a subject that represents the longtitude and langtitude of point A\n    */\n    private markerSourceA = new Subject  ();  \n    /**\n     * makes the subject as an observable  \n    */\n    markerAstate$ = this.markerSourceA.asObservable();\n    /** \n     * a subject that represents the longtitude and langtitude of point B\n    */\n    private markerSourceB = new Subject  ();  \n    /**\n     * makes the subject as an observable  \n    */\n    markerBstate$ = this.markerSourceB.asObservable();\n    /**\n     * Sends the langtitude and longtitude of point A to \"Navigation\" component\n     * @param coordinates Lat/Long coordinates of a point A\n    */\n    sendState(coordinates: string[]) {       \n      this.markerSourceA.next(coordinates);    \n    }\n    /**\n      * Sends the langtitude and longtitude of point B to \"Navigation\" component\n      * @param coordinates  Lat/Long coordinates of a point B\n      */\n    sendState2(coordinates: string[]) {       \n      this.markerSourceB.next(coordinates);\n    }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mensa.html":{"url":"interfaces/Mensa.html","title":"interface - Mensa","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mensa\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/mensa/mensaModel.ts\n        \n\n            \n                Description\n            \n            \n                A model that resembles the Mensa menu\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        closingTime\n                                \n                                \n                                        day\n                                \n                                \n                                        drinks\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        mainPlate\n                                \n                                \n                                        openingTime\n                                \n                                \n                                        price\n                                \n                                \n                                        salad\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closingTime\n                                    \n                                \n                                \n                                    \n                                        closingTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    closing time of the mensa\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    day at which the menu is offered\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        drinks\n                                    \n                                \n                                \n                                    \n                                        drinks:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    drinks offered\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    optional attribute\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mainPlate\n                                    \n                                \n                                \n                                    \n                                        mainPlate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    main plate offered\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        openingTime\n                                    \n                                \n                                \n                                    \n                                        openingTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    opening time of the mensa\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    price of all items offered in the menu on that day\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salad\n                                    \n                                \n                                \n                                    \n                                        salad:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Salad offered\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Mensa {\n    /**\n     * optional attribute\n     */\n    id?: string;  \n    /**\n     * day at which the menu is offered\n     */\n    day: string;\n    /**\n     * main plate offered\n     */\n    mainPlate: string; \n    /**\n     * Salad offered\n     */\n    salad: string;\n    /**\n     * drinks offered\n     */\n    drinks: string;\n    /**\n     * price of all items offered in the menu on that day\n     */\n    price: string;\n    /**\n     * opening time of the mensa\n     */\n    openingTime: string;\n    /**\n     * closing time of the mensa\n     */\n    closingTime: string; \n}\n\n\n\n\n\n\n\n\n\n\n\n \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MensaComponent.html":{"url":"components/MensaComponent.html","title":"component - MensaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MensaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/info/mensa/mensa.component.ts\n\n\n    \n        Description\n    \n    \n        this components shows Mensa Menu. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mensa\n            \n\n            \n                styleUrls\n                ./mensa.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mensa.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    Public\n                                mensaService\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mensaService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app/info/mensa/mensa.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mensaService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a get HTTP service for fetching Mensa Model JSON objects from mongoDB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \nfilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/mensa/mensa.component.ts:54\n                \n            \n\n\n            \n                \n                    A method for filtering the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the input that is filled in the form field (filter text field)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/mensa/mensa.component.ts:47\n                \n            \n\n\n            \n                \n                    after the component views have been fully initialized, the paginator is set \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/info/mensa/mensa.component.ts:39\n                \n            \n\n\n            \n                \n                    on component initilization a get HTTP request is performed \nit fetches the Mensa model Json objects from mongoDB\nmat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/mensa.component.ts:22\n                            \n                        \n\n                \n                    \n                        instantiating a mat table data source with Mensa Model as parameter\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['day','mainPlate','salad','drinks', 'price', 'openingTime','closingTime']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/mensa.component.ts:26\n                            \n                        \n\n                \n                    \n                        specifying which properties of the Mensa model I would like to show in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mensaService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/mensa.component.ts:31\n                            \n                        \n\n                \n                    \n                        a get HTTP service for fetching Mensa Model JSON objects from mongoDB\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/info/mensa/mensa.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit , ViewChild} from '@angular/core';\nimport { Mensa } from './mensaModel';\nimport { HttpService } from './http.service';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\n\n/**\n * this components shows Mensa Menu. \n */\n@Component({\n  selector: 'app-mensa',\n  templateUrl: './mensa.component.html',\n  styleUrls: ['./mensa.component.scss']\n})\n\nexport class MensaComponent implements OnInit, AfterViewInit {\n \n  @ViewChild(MatPaginator) paginator : MatPaginator;\n  /**\n   * instantiating a mat table data source with Mensa Model as parameter\n  */\n  dataSource = new MatTableDataSource();  \n  /**\n   * specifying which properties of the Mensa model I would like to show in the table\n  */\n  displayedColumns = ['day','mainPlate','salad','drinks', 'price', 'openingTime','closingTime'];\n  /**\n   * Constructor\n   * @param mensaService a get HTTP service for fetching Mensa Model JSON objects from mongoDB\n  */  \n constructor( public mensaService : HttpService) { }\n  /**\n      * on component initilization a get HTTP request is performed \n      * \n      * it fetches the Mensa model Json objects from mongoDB\n      * \n      * mat table data is filled with data after a time out of 1500 milli seconds, so that get HTTP request has finished fetching the JSON objects  \n    */\n  ngOnInit() {  \n    this.mensaService.getMensaInfoFromServer();\n    setTimeout(() => {this.dataSource.data = this.mensaService.mensa;},1500)\n      \n  }\n    /**\n      * after the component views have been fully initialized, the paginator is set \n    */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n    /**\n      * A method for filtering the table\n      * @param filterValue the input that is filled in the form field (filter text field)\n    */\n  filter( filterValue : string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n\n\n    \n\n    \n        \n    \n        \n              \n        \n        \n            \n                {{\"mensa-table-day\" | translate}}\n                 {{ element.day }}\n                \n            \n            \n                {{\"mensa-table-mainPlate\" | translate}}\n                 {{ element.mainPlate }}\n                \n            \n            \n                {{\"mensa-table-salad\" | translate}}\n                 {{ element.salad}}\n                \n            \n            \n                {{\"mensa-table-drinks\" | translate}}\n                 {{ element.drinks}}\n                \n            \n\n            \n                {{\"mensa-table-price\" | translate}}\n                 {{ element.price}}\n                \n            \n            \n                {{\"mensa-table-openingTime\" | translate}}\n                 {{ element.openingTime}}\n                \n            \n            \n                {{\"mensa-table-closingTime\" | translate}}\n                  {{ element.closingTime}}\n                \n            \n            \n            \n            \n                \n    \n    \n        \n        \n    \n        \n    \n                        \n    \n        \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n                \n                    ./mensa.component.scss\n                \n                table {\n    width: 90%;\n    margin-left:5%;\n    margin-right:5%;\n   \n  }\n\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn);\n    mat-paginator{\n        color: mat-color($mywarn);\n    }\n\n}\ndiv {\n     @include corporateIdTextColor($theme); \n}\n\n\n\n.colorprimary {\n    background-color: #009fe3;\n    \n}\n.colorwarn {\n    background-color: #1a4273;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      {{\"mensa-table-day\" | translate}}                 {{ element.day }}                                                        {{\"mensa-table-mainPlate\" | translate}}                 {{ element.mainPlate }}                                                        {{\"mensa-table-salad\" | translate}}                 {{ element.salad}}                                                        {{\"mensa-table-drinks\" | translate}}                 {{ element.drinks}}                                                        {{\"mensa-table-price\" | translate}}                 {{ element.price}}                                                        {{\"mensa-table-openingTime\" | translate}}                 {{ element.openingTime}}                                                        {{\"mensa-table-closingTime\" | translate}}                  {{ element.closingTime}}                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MensaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NachrichtenComponent.html":{"url":"components/NachrichtenComponent.html","title":"component - NachrichtenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NachrichtenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nachrichten/nachrichten.component.ts\n\n\n    \n        Description\n    \n    \n        a component that shows news elements for the news page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nachrichten\n            \n\n            \n                styleUrls\n                ./nachrichten.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nachrichten.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/nachrichten/nachrichten.component.ts:11\n                            \n                        \n\n                \n                    \n                            empty constructor\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nachrichten/nachrichten.component.ts:19\n                \n            \n\n\n            \n                \n                    empty Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * a component that shows news elements for the news page\n */\n@Component({\n  selector: 'app-nachrichten',\n  templateUrl: './nachrichten.component.html',\n  styleUrls: ['./nachrichten.component.scss']\n})\nexport class NachrichtenComponent implements OnInit {\n  /**\n   * empty constructor\n  */\n  constructor() { }\n  /**\n   * empty Initialization\n  */\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n        \n     {{\"news-header\" | translate}}\n      \n          \n        \n            {{\"news1\" | translate}}\n                01-02-2021\n                {{\"news1-1\" | translate}}\n            \n              \n                  {{\"news-button\" | translate}}      \n            \n            \n        \n    \n      \n          \n        \n            {{\"news2\" | translate}}\n                    27-01-2021\n                {{\"news2-2\" | translate}}\n            \n              \n                  {{\"news-button\" | translate}}      \n            \n        \n    \n      \n          \n        \n            {{\"news4\" | translate}}\n                    25-01-20121\n                {{\"news4-4\" | translate}}\n            \n              \n                  {{\"news-button\" | translate}}      \n            \n        \n    \n      \n          \n        \n            {{\"news3\" | translate}}\n                    20-01-2021\n                {{\"news3-3\" | translate}}\n            \n              \n                  {{\"news-button\" | translate}}      \n            \n        \n    \n      \n          \n        \n            {{\"news5\" | translate}}\n                    18-01-2021\n                {{\"news5-5\" | translate}}\n            \n              \n                  {{\"news-button\" | translate}}      \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./nachrichten.component.scss\n                \n                \n\n.card {\n    \n    max-height: 150px;\n   \n}\nspan.setEnd {\n    \n    float:right;\n}\n\n\n.center {\n    margin-left: 5%;\n    margin-right: 5%;\n   \n}\n@import './src/my-theme.scss';\n@import '~@angular/material/theming';\n@mixin corporateIdTextColor($theme) {\n    $config: mat-get-color-config($theme);\n    $myprimary: map-get($config, primary);\n    $myaccent: map-get($config, accent);\n    $mywarn: map-get($config, warn); \n    p,span {\n        color: mat-color($mywarn);\n    }\n    p.mat-display-1 {\n        color: mat-color($myprimary);\n    }\n\n}\n\ndiv.center {\n     @include corporateIdTextColor($theme);  \n}\n\n\nbutton.mat-raised-button{\n    color: white !important;\n  }  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{\"news-header\" | translate}}                                    {{\"news1\" | translate}}                01-02-2021                {{\"news1-1\" | translate}}                                            {{\"news-button\" | translate}}                                                                              {{\"news2\" | translate}}                    27-01-2021                {{\"news2-2\" | translate}}                                            {{\"news-button\" | translate}}                                                                  {{\"news4\" | translate}}                    25-01-20121                {{\"news4-4\" | translate}}                                            {{\"news-button\" | translate}}                                                                  {{\"news3\" | translate}}                    20-01-2021                {{\"news3-3\" | translate}}                                            {{\"news-button\" | translate}}                                                                  {{\"news5\" | translate}}                    18-01-2021                {{\"news5-5\" | translate}}                                            {{\"news-button\" | translate}}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NachrichtenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/Navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        a component for creating the navigation bar elements\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DomUserAuthenticated\n                            \n                            \n                                languages\n                            \n                            \n                                state\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Public\n                                userIsAuthenticated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStoredUserAuthenticationState\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                            \n                                openNavigationBar\n                            \n                            \n                                useLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SideNavigationService, translate: TranslateService, authService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/Navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SideNavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for sending clicks observables that is executed on side navigation icon\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a service for translating to other language\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a service for authenticating users\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStoredUserAuthenticationState\n                        \n                        \n                    \n                \n            \n            \n                \ngetStoredUserAuthenticationState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:56\n                \n            \n\n\n            \n                \n                    converting DOM element \"userAuthenticated\", which is of type string to a boolean variable \"userIsAuthenticated\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:48\n                \n            \n\n\n            \n                \n                    on component initialization, we subscribe to a boolean observable which is recieved from the authorization servic\", the observable tells whether the user is authenticated or not.\nwe set/ reset \"userIsAuthenticated\" boolean variable based on the string value of the DOM key element \"userAuthenticated\" to hide/show log out button in our HTML template\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogout\n                        \n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:93\n                \n            \n\n\n            \n                \n                    once logout button is pressed, logout method in the authorization service is invoked, which sets the token to null, routes to home page, removes the token from the local storage and sends a false boolean observable ( authentication status) through the authorization service \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNavigationBar\n                        \n                        \n                    \n                \n            \n            \n                \nopenNavigationBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:68\n                \n            \n\n\n            \n                \n                    on each click on the side navigation icon, state variable is toggeled \nit sends the state variable as an observable using \"sideNavigationService\" to app-component to control the opened/closed property of  tag element \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            useLanguage\n                        \n                        \n                    \n                \n            \n            \n                \nuseLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Navbar/navbar.component.ts:83\n                \n            \n\n\n            \n                \n                    set the language to be used in the translate service \ninvokes translatioon service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a string variable that is selected from a list in the HTML form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DomUserAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:23\n                            \n                        \n\n                \n                    \n                        variable for storing DOM element variable \"userAuthenticated\" which reflects the status of user Authentication\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['en', 'de']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Array of offered languages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:19\n                            \n                        \n\n                \n                    \n                        side navigation icon click state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:42\n                            \n                        \n\n                \n                    \n                        a service for translating to other language\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userIsAuthenticated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                        a boolean that reflects the authentication state, to be used in HTML template to show/hide logout button\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SideNavigationService } from '../services/sidenav.service'\nimport { AuthorizationService } from '../services/authorization.service';\n\n/**\n * a component for creating the navigation bar elements\n */\n\n  @Component({\n    selector: 'app-navbar',\n    templateUrl: './navbar.component.html',\n    styleUrls: ['./navbar.component.scss']\n  })\n  export class NavbarComponent implements OnInit  {\n        /**\n         * side navigation icon click state\n         */\n        state : boolean = false;\n        /**\n         * variable for storing DOM element variable \"userAuthenticated\" which reflects the status of user Authentication\n         */\n        DomUserAuthenticated:string; \n        /**\n         * Array of offered languages\n         */\n        languages = ['en', 'de'];\n        /**\n         * a boolean that reflects the authentication state, to be used in HTML template to show/hide logout button\n         */\n        public userIsAuthenticated: boolean = false;\n      \n    \n      /**\n       * \n       * @param service A service for sending clicks observables that is executed on side navigation icon\n       * @param translate a service for translating to other language\n       * @param authService a service for authenticating users\n       */\n\n    \n        constructor( private service : SideNavigationService, public translate: TranslateService, private authService: AuthorizationService ) {}\n        /**\n         * on component initialization, we subscribe to a boolean observable which is recieved from the authorization servic\", the observable tells whether the user is authenticated or not.\n         * \n         * we set/ reset \"userIsAuthenticated\" boolean variable based on the string value of the DOM key element \"userAuthenticated\" to hide/show log out button in our HTML template\n         */\n        ngOnInit() {\n         \n          this.authService.getAuthStatusListener().subscribe(isAuthenticated => { this.userIsAuthenticated= isAuthenticated;});\n          this.getStoredUserAuthenticationState();\n        }\n        /**\n         * converting DOM element \"userAuthenticated\", which is of type string to a boolean variable \"userIsAuthenticated\"\n         */\n        getStoredUserAuthenticationState() {\n          this.DomUserAuthenticated = localStorage.getItem(\"userAuthenticated\");\n          if(this.DomUserAuthenticated == \"true\")\n            this.userIsAuthenticated = true;\n          else this.userIsAuthenticated = false; \n        }\n        \n        /**\n         * on each click on the side navigation icon, state variable is toggeled \n         * \n         * it sends the state variable as an observable using \"sideNavigationService\" to app-component to control the opened/closed property of  tag element \n         */\n        openNavigationBar() {          \n          if (this.state == false)\n          this.state = true;\n          else this.state = false;\n          this.service.sendState(this.state);\n          console.log(this.state);   \n        }\n\n        \n        /**\n         * set the language to be used in the translate service \n         * \n         * invokes translatioon service\n         * @param lang a string variable that is selected from a list in the HTML form\n         */\n        useLanguage( lang : string) {\n          this.translate.use(lang);\n          console.log(\"clicked\");\n          console.log(lang);\n        }\n\n        /**\n         * once logout button is pressed, logout method in the authorization service is invoked, which sets the token to null, routes to home page, removes the token from the local storage and sends a false boolean observable ( authentication status) through the authorization service \n         */\n\n        onLogout() {\n          this.authService.logout();\n          console.log(this.authService.getAuthStatusListener());\n        }\n\n  }\n\n    \n\n    \n        \n    \n            \n                reorder\n            \n                 \n            \n                \n                     {{'language' | translate}}\n                    \n                     {{lang}} \n                    \n                \n                \n                    \n                    Home\n                    {{\"news\" | translate}}\n                     {{'events' | translate}} \n                     {{'navigation' | translate}} \n                     Info \n                    person_outline{{\"login\" | translate}} \n                     person_outline{{\"logout\" | translate}}\n                    \n                \n            \n            \n        \n        \n    \n     \n         Exam Rooms \n         Free Rooms \n         MENSA \n         LECTURE PLAN \n    \n    \n    \n\n    \n    \n\n    \n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                \n\n.Nav {\n    margin-top: 0px;\n    margin-bottom: 0px;\n    margin-left: 0px;\n    border : 1 px solid; \n    background-color :#009fe3 ;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    position: sticky;\n    top: 0px;\n    z-index: 2;\n   \n    \n    \n}\n\n.image {\n    margin-left: 20px;\n\n}\n\n\n\n\n\na {\n    color: black;\n}\n\n\n\n\nbutton, a, mat-form-field {\n    color: white !important;\n}\n\n\n\n \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                reorder                                                                              {{\\'language\\' | translate}}                                         {{lang}}                                                                                             Home                    {{\"news\" | translate}}                     {{\\'events\\' | translate}}                      {{\\'navigation\\' | translate}}                      Info                     person_outline{{\"login\" | translate}}                      person_outline{{\"logout\" | translate}}                                                                                              Exam Rooms          Free Rooms          MENSA          LECTURE PLAN                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigateService.html":{"url":"injectables/NavigateService.html","title":"injectable - NavigateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NavigateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/navigate.service.ts\n        \n\n            \n                Description\n            \n            \n                a service to fetch RoomsModel JSON objects from server and send their long/lat coordinates to \"MarkerService\" where they are treated as observables \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                selectedRoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchFromServer\n                            \n                            \n                                fetchRoomFromServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, markerSer: MarkerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/navigate.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angulat HHTPClient service\n\n                                                        \n                                                \n                                                \n                                                        markerSer\n                                                  \n                                                        \n                                                                        MarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service that considers the longtitude and langtitude of 2 points as abservables and publish them to subscribed components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchFromServer\n                        \n                        \n                    \n                \n            \n            \n                \nfetchFromServer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:36\n                \n            \n\n\n            \n                \n                    Simulates the QR code reading of a specific room\nfetching a random RoomsModel JSON object from the server and assigning it to the location variable \n  sends the longtitude and langtitude coordinates of the fetched RoomsModel JSON object to the \"markerService\"  \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchRoomFromServer\n                        \n                        \n                    \n                \n            \n            \n                \nfetchRoomFromServer(room: Room)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/navigate.service.ts:54\n                \n            \n\n\n            \n                \n                    fetches a RoomsModel JSON object from server in which RoomsModel's \"room\" property matches the room selected from the list in HTML template \nsends the longtitude and langtitude coordinates of the fetched RoomsModel JSON object to the \"markerService\" \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        submitted room number in the HTML form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Room\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/navigate.service.ts:17\n                            \n                        \n\n                \n                    \n                        a random RoomsModel JSON object fetched from MongoDB\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoom\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/navigate.service.ts:21\n                            \n                        \n\n                \n                    \n                        fetched RoomsModel Json object in which Model's \"room\" property matches the room selected from a list of rooms in the submission form\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Room } from '../Frontend-Models/room';\nimport { MarkerService } from './marker.service';\n\n/**\n * a service to fetch RoomsModel JSON objects from server and send their long/lat coordinates to \"MarkerService\" where they are treated as observables \n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigateService {\n  /**\n   * a random RoomsModel JSON object fetched from MongoDB\n  */\n  location: Room ;\n  /**\n   * fetched RoomsModel Json object in which Model's \"room\" property matches the room selected from a list of rooms in the submission form\n   */\n  selectedRoom;   \n  \n  /**\n   * \n   * @param http Angulat HHTPClient service\n   * @param markerSer A service that considers the longtitude and langtitude of 2 points as abservables and publish them to subscribed components\n   */\n  constructor(private http: HttpClient, private markerSer: MarkerService) { }\n  /**\n   * Simulates the QR code reading of a specific room\n   * \n   * fetching a random RoomsModel JSON object from the server and assigning it to the location variable \n   * \n   *  sends the longtitude and langtitude coordinates of the fetched RoomsModel JSON object to the \"markerService\"  \n   */\n    fetchFromServer() {\n      this.http.get('http://localhost:3000/api/rooms')   // the json object we are getting from mongodb\n        .subscribe( fetcheddata => { \n        const location = new Room(fetcheddata[0].room,fetcheddata[0].floor, fetcheddata[0].building, fetcheddata[0].long, fetcheddata[0].lat);\n        this.location= location;\n        console.log(this.location.building);\n        this.markerSer.sendState2([this.location.long, this.location.lat]);  \n      });\n    }\n\n\n\n  /**\n   * fetches a RoomsModel JSON object from server in which RoomsModel's \"room\" property matches the room selected from the list in HTML template \n   * \n   * sends the longtitude and langtitude coordinates of the fetched RoomsModel JSON object to the \"markerService\" \n   * @param room submitted room number in the HTML form\n   */\n  fetchRoomFromServer(room : Room) {\n    this.http.post ('http://localhost:3000/api/rooms', room)\n    .subscribe(response => { console.log(response);\n        this.selectedRoom= response;\n        this.markerSer.sendState([this.selectedRoom.long, this.selectedRoom.lat]);\n        console.log(this.selectedRoom.floor);\n      });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n    \n        Description\n    \n    \n        a component that allows users to navigate from one building to another with the campus of the university \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coordinatesLatA\n                            \n                            \n                                coordinatesLatB\n                            \n                            \n                                coordinatesLongA\n                            \n                            \n                                coordinatesLongB\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogStatus\n                            \n                            \n                                enabled\n                            \n                            \n                                    Public\n                                latlngA\n                            \n                            \n                                    Public\n                                latlngB\n                            \n                            \n                                layer\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                marker\n                            \n                            \n                                rooms\n                            \n                            \n                                route\n                            \n                            \n                                secondMarker\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearMarkers\n                            \n                            \n                                fetchQRroom\n                            \n                            \n                                fetchSelectedRoom\n                            \n                            \n                                    Private\n                                initmap\n                            \n                            \n                                makeMarker\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navigate: NavigateService, dialog: MatDialog, markerSer: MarkerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:91\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service to fetch RoomsModel JSON objects from server and send their long/lat coordinates to \"MarkerService\" where they are treated as observables \n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component\n\n                                                        \n                                                \n                                                \n                                                        markerSer\n                                                  \n                                                        \n                                                                        MarkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Defines two subjects; marker for point A and a marker for point B in order to send the coordinates of both markers to subscribed components \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMarkers\n                        \n                        \n                    \n                \n            \n            \n                \nclearMarkers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:176\n                \n            \n\n\n            \n                \n                    clears the markers layer from the map\nclears the routes from the map \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchQRroom\n                        \n                        \n                    \n                \n            \n            \n                \nfetchQRroom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:247\n                \n            \n\n\n            \n                \n                    uses the \"navigate service\" to fetch any RoomsModel JSON object from the aggregate \nwaits 700 milli second till the fetch request is finished,\nchecks whether the fetched RoomsModel Json object matches the fetched RoomsModel JSON object of the \"fetchSelectedRoom\" method\nthen it shows a dialog that corresponds to the result; \"Room match\"/\"No room match\"\none Dialog message can be shown either that of \"fetchSelectedRoom\" or \"fetchQRroom\" method since \"fetchSelectedRoom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to false on the other hand \"fetchQRroom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to true.\nclicking on QR icon in HTML sets the dialog status to true\nselecting a room from the list in HTML set the dialog status to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchSelectedRoom\n                        \n                        \n                    \n                \n            \n            \n                \nfetchSelectedRoom(room: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:201\n                \n            \n\n\n            \n                \n                    uses the \"navigate service\" to Find one RoomsModel Json object from the server, in which RoomsModel's \"room\" property matches the room selected from the list in HTML template \nwaits 700 milli second till the fetch request is finished,\nchecks whether the fetched RoomsModel Json object matches the fetched RoomsModel JSON object of the \"fetchQRroom\" method\nthen it shows a dialog that corresponds to the result; \"Room match\"/\"No room match\"\none Dialog message can be shown either that of \"fetchSelectedRoom\" or \"fetchQRroom\" methods since \"fetchSelectedRoom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to false on the other hand \"fetchQRroom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to true.\nclicking on QR icon in HTML set the dialog status to true\nselecting a room from the list in HTML set the dialog status to false\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Selected room from a list in HTML template\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initmap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initmap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:138\n                \n            \n\n\n            \n                \n                    instantiates a leaflet map variable and sets the focus view on TH deggendorf coordinates\ncreates a tilelayer from openstreetmap and sets the maximum zoom to 18\nadds the tiles layer to the map\ncreates a Marker layer and adds it to the map\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeMarker\n                        \n                        \n                    \n                \n            \n            \n                \nmakeMarker(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:159\n                \n            \n\n\n            \n                \n                    on clicking navigation Icon, it checks if there is previous route, it will clear them from the map\nit checks if there are previous markers on the map, it clears the layer of markers\ncreates a point A marker with leaflet latlng variable as an argument and adds it to the marker layers.\ncreates a point B marker with leaflet latlng variable as an argument and adds it to the marker layers.\ncreate a Leaflet route between both points and adds it to the map \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                            L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the instantiated Leaflet map variable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:116\n                \n            \n\n\n            \n                \n                    subscribes to coordinates observables of point A and point B using the \"Marker Service\"\nPoint A is the selected Room from the list\nPoint B is the QR room\nstores the recieved array of Lat/Lng coordiantes in a separate lat coordiantes variable and lng coordinates variable for both points A and B\ncreates a LatLng leaflet variable out of lat coordiantes variable and lng coordinates variable for both points. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:281\n                \n            \n\n\n            \n                \n                    nulls the location variable and selectedRoom variable that are returned from the HTTP requests in the \"Navigate service\" on component destruction \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:103\n                \n            \n\n\n            \n                \n                    Empty ngOnInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesLatA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:47\n                            \n                        \n\n                \n                    \n                        Langitude of point A\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesLatB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:55\n                            \n                        \n\n                \n                    \n                        langtitude of point B\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesLongA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:43\n                            \n                        \n\n                \n                    \n                        Longtitude of point A \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesLongB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:51\n                            \n                        \n\n                \n                    \n                        Longtitude of point B\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:99\n                            \n                        \n\n                \n                    \n                        Angular Material component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:87\n                            \n                        \n\n                \n                    \n                        a variable used to prevent multiple dialog messages from showing in User interface once the user clicks on read QR code button and selects a room from the list at the same time.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:91\n                            \n                        \n\n                \n                    \n                        A boolean to enable the navigate icon only if both QR icon has been clicked and a room have been selected from the form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latlngA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.LatLng\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:59\n                            \n                        \n\n                \n                    \n                        A leaflet LatLng variable for point A\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            latlngB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.LatLng\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:63\n                            \n                        \n\n                \n                    \n                        A leaflet LatLng variable for point B \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     L.LayerGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:67\n                            \n                        \n\n                \n                    \n                        A leaflet layer for markers, different than tiles layer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:39\n                            \n                        \n\n                \n                    \n                        A leaflet map global variable in which the map will be defined \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            marker\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:75\n                            \n                        \n\n                \n                    \n                        A leaflet marker variable for point A \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rooms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['A101', 'A201', 'A301', 'A401', 'B101', 'C201', 'D301', 'E401', 'F401', 'G401' ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:83\n                            \n                        \n\n                \n                    \n                        rooms list that will be linked to  in HTML\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            route\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:71\n                            \n                        \n\n                \n                    \n                        A leaflet Routing variable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondMarker\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:79\n                            \n                        \n\n                \n                    \n                        A leaflet marker variable for point B \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\nimport { NavigateService } from '../services/navigate.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { Room } from '../Frontend-Models/room';\nimport * as L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport { MarkerService } from '../services/marker.service';\nimport { icon, Marker } from 'leaflet';\n\nconst iconRetinaUrl = './assets/marker-icon-2x.png';\nconst iconUrl = './assets/marker-icon.png';\nconst shadowUrl = './assets/marker-shadow.png';\nconst iconDefault = icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nMarker.prototype.options.icon = iconDefault;\n\n/**\n * a component that allows users to navigate from one building to another with the campus of the university \n*/\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit, AfterViewInit, OnDestroy {\n    /**\n     * A leaflet map global variable in which the map will be defined \n    */\n    public map;\n    /**\n     * Longtitude of point A \n    */\n    coordinatesLongA:string;\n    /**\n     * Langitude of point A\n    */\n    coordinatesLatA:string;\n    /**\n     * Longtitude of point B\n    */\n    coordinatesLongB:string;\n    /**\n     * langtitude of point B\n    */\n    coordinatesLatB:string;\n    /**\n     * A leaflet LatLng variable for point A\n    */\n    public latlngA : L.LatLng;\n    /**\n     * A leaflet LatLng variable for point B \n    */\n    public latlngB :L.LatLng;\n    /**\n     * A leaflet layer for markers, different than tiles layer\n    */\n    layer: L.LayerGroup;\n    /**\n     * A leaflet Routing variable \n    */\n    route; \n    /**\n     * A leaflet marker variable for point A \n    */\n    marker;\n    /**\n     * A leaflet marker variable for point B \n    */\n    secondMarker;\n    /**\n     * rooms list that will be linked to  in HTML\n    */\n    rooms = ['A101', 'A201', 'A301', 'A401', 'B101', 'C201', 'D301', 'E401', 'F401', 'G401' ];\n    /**\n     * a variable used to prevent multiple dialog messages from showing in User interface once the user clicks on read QR code button and selects a room from the list at the same time.  \n    */\n    dialogStatus: boolean =false;\n    /**\n     * A boolean to enable the navigate icon only if both QR icon has been clicked and a room have been selected from the form\n     */\n    enabled:boolean = true;\n \n   /**\n    * Constructor\n    * @param navigate A service to fetch RoomsModel JSON objects from server and send their long/lat coordinates to \"MarkerService\" where they are treated as observables \n    * @param dialog Angular Material component\n    * @param markerSer Defines two subjects; marker for point A and a marker for point B in order to send the coordinates of both markers to subscribed components \n    */\n    constructor( private navigate: NavigateService, public dialog: MatDialog, private markerSer: MarkerService) { }\n   /**\n    * Empty ngOnInit\n    */\n    ngOnInit(): void {}\n\n    /**\n     * subscribes to coordinates observables of point A and point B using the \"Marker Service\"\n     * \n     * Point A is the selected Room from the list\n     * \n     * Point B is the QR room\n     * \n     * stores the recieved array of Lat/Lng coordiantes in a separate lat coordiantes variable and lng coordinates variable for both points A and B\n     * \n     * creates a LatLng leaflet variable out of lat coordiantes variable and lng coordinates variable for both points. \n    */\n    ngAfterViewInit(): void {\n      this.initmap();\n      this.markerSer.markerAstate$.subscribe(coordinates => { this.coordinatesLongA= coordinates[0];\n        this.coordinatesLatA= coordinates[1];\n        this.latlngA = L.latLng(parseFloat(this.coordinatesLatA),parseFloat(this.coordinatesLongA));\n        console.log(this.latlngA);\n      });\n      this.markerSer.markerBstate$.subscribe(coordinates => { this.coordinatesLongB= coordinates[0];\n        this.coordinatesLatB= coordinates[1];\n        this.latlngB = L.latLng(parseFloat(this.coordinatesLatB),parseFloat(this.coordinatesLongB));\n        console.log(this.latlngB);\n      });\n    }\n      /**\n       * instantiates a leaflet map variable and sets the focus view on TH deggendorf coordinates\n       * \n       * creates a tilelayer from openstreetmap and sets the maximum zoom to 18\n       * \n       * adds the tiles layer to the map\n       * \n       * creates a Marker layer and adds it to the map\n      */\n      private initmap(): void {\n        this.map = L.map('map').setView([48.8296,12.9547], 17.5); \n        const tiles= L.tileLayer ('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n          maxZoom: 18, attribution: '&copy; OpenStreetMap contributors'\n        }); \n        tiles.addTo(this.map);\n        this.layer =L.layerGroup().addTo(this.map);  \n      }\n\n      /**\n       * on clicking navigation Icon, it checks if there is previous route, it will clear them from the map\n       * \n       * it checks if there are previous markers on the map, it clears the layer of markers\n       * \n       * creates a point A marker with leaflet latlng variable as an argument and adds it to the marker layers.\n       * \n       * creates a point B marker with leaflet latlng variable as an argument and adds it to the marker layers.\n       * \n       * create a Leaflet route between both points and adds it to the map \n       * @param map the instantiated Leaflet map variable\n      */\n    makeMarker( map: L.Map): void {\n      if(this.route)\n      this.route.remove();\n      if(this.marker && this.secondMarker)\n      this.layer.clearLayers();\n      this.marker = L.marker(this.latlngA).addTo(this.layer);\n      this.secondMarker = L.marker(this.latlngB).addTo(this.layer);\n      this.route = L.Routing.control({ router: L.Routing.osrmv1({}),showAlternatives: false,\n      show: true,\n      routeWhileDragging: false, waypoints:[this.latlngB,this.latlngA]}).addTo(this.map);\n    };\n    \n    /**\n     * clears the markers layer from the map\n     * \n     * clears the routes from the map \n    */\n    clearMarkers() {\n      this.layer.clearLayers();\n      this.route.remove();\n    }\n\n\n\n\n\n    /**\n     * uses the \"navigate service\" to Find one RoomsModel Json object from the server, in which RoomsModel's \"room\" property matches the room selected from the list in HTML template \n     * \n     * waits 700 milli second till the fetch request is finished,\n     * \n     * checks whether the fetched RoomsModel Json object matches the fetched RoomsModel JSON object of the \"fetchQRroom\" method\n     * \n     * then it shows a dialog that corresponds to the result; \"Room match\"/\"No room match\"\n     * \n     * one Dialog message can be shown either that of \"fetchSelectedRoom\" or \"fetchQRroom\" methods since \"fetchSelectedRoom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to false on the other hand \"fetchQRroom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to true.\n     * \n     * clicking on QR icon in HTML set the dialog status to true\n     * \n     * selecting a room from the list in HTML set the dialog status to false\n     * @param room Selected room from a list in HTML template\n     */\n    fetchSelectedRoom(room : string) {\n      \n      const oneRoom: Room= {room: room, building: \"\", floor: \"\", long: \"\", lat: \"\"};\n      this.navigate.fetchRoomFromServer(oneRoom);\n      this.dialogStatus = false;\n        if( this.navigate.location != null) {\n          setTimeout(() => {\n            if (this.navigate.selectedRoom.room == this.navigate.location.room ) {\n              console.log(\"room match\");\n              if (!this.dialogStatus) {\n                const dialogRef= this.dialog.open(DialogComponent, {data: { name: \"room match\"}, height: '230px', width: '600px'} );\n                dialogRef.afterClosed().subscribe(result => {\n                this.dialogStatus= result; \n                });  \n              }\n            }\n            else {\n              console.log(\"no room match\");\n              console.log(this.navigate.selectedRoom.room);\n              console.log(this.navigate.location.room);\n              console.log(this.navigate.location);\n              if (!this.dialogStatus) {\n                const dialogRef =this.dialog.open(DialogComponent, {data: { name: \"no room match\",  roomSet: this.navigate.selectedRoom, roomQR: this.navigate.location}, height: '230px', width: '600px'} ); \n                  dialogRef.afterClosed().subscribe(result => {\n                    this.dialogStatus= result;\n                  });\n              }  \n            }\n          },700);\n        }\n    } \n    /**\n     * uses the \"navigate service\" to fetch any RoomsModel JSON object from the aggregate \n     * \n     * waits 700 milli second till the fetch request is finished,\n     * \n     * checks whether the fetched RoomsModel Json object matches the fetched RoomsModel JSON object of the \"fetchSelectedRoom\" method\n     * \n     * then it shows a dialog that corresponds to the result; \"Room match\"/\"No room match\"\n     * \n     * one Dialog message can be shown either that of \"fetchSelectedRoom\" or \"fetchQRroom\" method since \"fetchSelectedRoom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to false on the other hand \"fetchQRroom\" method's dialog message is only shown when the \"dialogStatus\" variable is set to true.\n     * \n     * clicking on QR icon in HTML sets the dialog status to true\n     * \n     * selecting a room from the list in HTML set the dialog status to false\n     */\n    fetchQRroom() {\n      this.enabled= false;\n      this.dialogStatus = true;\n      this.navigate.fetchFromServer();\n      if( this.navigate.selectedRoom != null) {\n        setTimeout(() => { \n          if (this.navigate.selectedRoom.room == this.navigate.location.room ) {   \n            console.log(\" room match\");\n            if (this.dialogStatus) {\n              const dialogRef = this.dialog.open(DialogComponent, {data: { name: \"room match\"}, height: '230px', width: '600px'});  \n              dialogRef.afterClosed().subscribe(result => {\n                this.dialogStatus= !result;\n              });  \n            }   \n          }\n          else {\n            console.log(\"no room match\");\n            console.log(this.navigate.selectedRoom.room);\n            console.log(this.navigate.location.room);\n            console.log(this.navigate.location);\n            if (this.dialogStatus) {\n              const dialogRef = this.dialog.open(DialogComponent, {data: { name: \"no room match\",  roomSet: this.navigate.selectedRoom, roomQR: this.navigate.location}, height: '230px', width: '600px' } ); \n              dialogRef.afterClosed().subscribe(result => {\n                this.dialogStatus= !result; \n              }); \n            }\n          } \n\n        } ,700);\n      }\n    }\n    /**\n     * nulls the location variable and selectedRoom variable that are returned from the HTTP requests in the \"Navigate service\" on component destruction \n    */\n    ngOnDestroy() {\n            this.navigate.location= null;\n            this.navigate.selectedRoom= null;\n    }\n\n\n\n\n}\n\n\n\n\n\n\n    \n\n    \n        \n  \n     Campus Navigation  \n    \n\n    \n        \n         {{\"navig-page-form\" | translate}}\n        \n        \n             {{room}} \n        \n    \n    \n        qr_code_scanner  \n         navigation \n          {{\"navig-page-clearMarker-button\" | translate}}\n    \n\n\n\n\n\n    \n          \n    \n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                \n\n    \n    .six {\n        background-color: white;\n       \n        padding-top: 50px;\n        margin-left: 5%;\n        margin-right: 5%;\n    }\n    \n\n    .map-container {\n        height: 600px;\n        background-color: white;\n        margin-left : 15%;\n        margin-right : 15%;\n        \n        \n    }\n    \n    \n    \n    .map-frame {\n        border: 2px solid black;\n        height: 100% ;\n        width: 100%\n        \n        \n    }\n    \n    #map {\n        height: 100%;\n    }\n\n    button {\n        margin-left:10px;\n        margin-right:10px;\n        margin-bottom:10px;\n        color: white !important;\n    }\n    \n    mat-form-field{\n        width:400px;  \n      }\n      ::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n        color: #009fe3;\n    }\n      \n\n    \n    \n    @import './src/my-theme.scss';\n    @import '~@angular/material/theming';\n    \n    @mixin corporateIdTextColor($theme) {\n        $config: mat-get-color-config($theme);\n        $myprimary: map-get($config, primary);\n        $myaccent: map-get($config, accent);\n        $mywarn: map-get($config, warn);\n        p{\n            color: mat-color($myaccent);\n        }\n    }\n     div {\n         @include corporateIdTextColor($theme); \n    }\n    \n      \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Campus Navigation                           {{\"navig-page-form\" | translate}}                             {{room}}                         qr_code_scanner           navigation           {{\"navig-page-clearMarker-button\" | translate}}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BodyComponent', 'selector': 'app-body'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'ExamsComponent', 'selector': 'app-exams'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FreeRoomComponent', 'selector': 'app-free-room'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoComponent', 'selector': 'app-info'},{'name': 'LecturesPlanComponent', 'selector': 'app-lectures-plan'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MensaComponent', 'selector': 'app-mensa'},{'name': 'NachrichtenComponent', 'selector': 'app-nachrichten'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NavigationComponent', 'selector': 'app-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Room.html":{"url":"classes/Room.html","title":"class - Room","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Room\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Frontend-Models/room.ts\n        \n\n            \n                Description\n            \n            \n                a Model that is used for storing the langtitude and longtitude of a room, to be used later in navigation service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                building\n                            \n                            \n                                    Public\n                                floor\n                            \n                            \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                lat\n                            \n                            \n                                    Public\n                                long\n                            \n                            \n                                    Public\n                                room\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(room: string, floor: string, building: string, long: string, lat: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Frontend-Models/room.ts:10\n                            \n                        \n\n                \n                    \n                            constructor for RoomsModel, will be used in the navigate service and marker service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        room\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Room number\n\n                                                        \n                                                \n                                                \n                                                        floor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Floor of the room\n\n                                                        \n                                                \n                                                \n                                                        building\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Building label in which the room exists\n\n                                                        \n                                                \n                                                \n                                                        long\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Longtitude coordinate of the building\n\n                                                        \n                                                \n                                                \n                                                        lat\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Langtitude coordinate of the building\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            building\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:19\n                            \n                        \n\n                \n                    \n                        Building label in which the room exists\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            floor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:19\n                            \n                        \n\n                \n                    \n                        Floor of the room\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:10\n                            \n                        \n\n                \n                    \n                        optional attribute\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:19\n                            \n                        \n\n                \n                    \n                        Langtitude coordinate of the building\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:19\n                            \n                        \n\n                \n                    \n                        Longtitude coordinate of the building\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            room\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/room.ts:19\n                            \n                        \n\n                \n                    \n                        Room number\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Room {\n    /**\n     * optional attribute\n     */\n     public id?: string;\n     /**\n      * constructor for RoomsModel, will be used in the navigate service and marker service\n      * @param room Room number\n      * @param floor Floor of the room\n      * @param building Building label in which the room exists\n      * @param long Longtitude coordinate of the building\n      * @param lat Langtitude coordinate of the building\n      */\n    constructor( public room: string, public floor: string, public building: string, public long: string, public lat: string) {} \n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SideNavigationService.html":{"url":"injectables/SideNavigationService.html","title":"injectable - SideNavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SideNavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/sidenav.service.ts\n        \n\n            \n                Description\n            \n            \n                a service for sending a click observable whenever the user clicks on the side nav icon in the Nav Bar component\nUse case: so that I can control the opening and closing of the side nav container that exists in the app component\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                headerSource\n                            \n                            \n                                headerstate$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendState\n                        \n                        \n                    \n                \n            \n            \n                \nsendState(message: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/sidenav.service.ts:24\n                \n            \n\n\n            \n                \n                    Sends the state variable to the \"app\" component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a state variable that originates from the \"navbar\" component \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headerSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject  ()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidenav.service.ts:14\n                            \n                        \n\n                \n                    \n                        a subject that toggles a state variable on each click on the side navigation icon\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerstate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.headerSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/sidenav.service.ts:18\n                            \n                        \n\n                \n                    \n                        makes the subject as an observable  \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * a service for sending a click observable whenever the user clicks on the side nav icon in the Nav Bar component\n * \n * Use case: so that I can control the opening and closing of the side nav container that exists in the app component\n */\n@Injectable()\n\nexport class SideNavigationService {\n  /** \n    * a subject that toggles a state variable on each click on the side navigation icon\n  */\n  private headerSource = new Subject  ();  \n  /**\n    * makes the subject as an observable  \n  */\n  headerstate$ = this.headerSource.asObservable();                 \n    \n  /**\n   * Sends the state variable to the \"app\" component\n   * @param message a state variable that originates from the \"navbar\" component \n   */\n  sendState(message: boolean) {       /**pushing the message sent from header */\n    this.headerSource.next(message);      \n  }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Frontend-Models/users.ts\n        \n\n            \n                Description\n            \n            \n                a Model that represents user credentials; username, email and password\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Public\n                                Name\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Name: string, email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/Frontend-Models/users.ts:9\n                            \n                        \n\n                \n                    \n                            constructor of user credentials, will be used in the credentialPost service and Autherization service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        Name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the user\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Email of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Password of the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/users.ts:16\n                            \n                        \n\n                \n                    \n                        Email of the user\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/users.ts:9\n                            \n                        \n\n                \n                    \n                        optional attribute\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/users.ts:16\n                            \n                        \n\n                \n                    \n                        Name of the user\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/Frontend-Models/users.ts:16\n                            \n                        \n\n                \n                    \n                        Password of the user\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Users {\n    /**\n     * optional attribute\n     */\n    id?: string;  \n    /**\n     * constructor of user credentials, will be used in the credentialPost service and Autherization service\n     * @param Name Name of the user\n     * @param email Email of the user\n     * @param password Password of the user\n     */\n    constructor (  public Name: string, public email: string, public password: string) {\n        this.Name = Name;\n        this.email = email;\n        this.password = password;\n       \n        \n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/authorizationGuard.html":{"url":"guards/authorizationGuard.html","title":"guard - authorizationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    authorizationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/login/Auth-guard.ts\n            \n\n                \n                Description\n                \n                \n                    A guard to protect certain routes from unauthorized users\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthorizationService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/Auth-guard.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A service for authenticating users\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/Auth-guard.ts:23\n                \n            \n\n\n            \n                \n                    calls the \"tokenExists\" method within the authorization service which checks if a token is available in the local storage of the DOM\nif a token exists the route guard is lifted, and route to desired component is activated\nif there is no Token, route is detoured to login page\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        can/can't activate the route \n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthorizationService } from '../services/authorization.service';\n/**\n * A guard to protect certain routes from unauthorized users\n */\n@Injectable()\nexport class authorizationGuard implements CanActivate {\n    /**\n     * Constructor\n     * @param authService A service for authenticating users\n     * @param route Angular Router service\n    */\n    constructor( private authService: AuthorizationService, private route: Router) {}\n    /**\n     * calls the \"tokenExists\" method within the authorization service which checks if a token is available in the local storage of the DOM\n     * \n     * if a token exists the route guard is lifted, and route to desired component is activated\n     * \n     * if there is no Token, route is detoured to login page\n     * @returns can/can't activate the route \n    */\n    canActivate() : boolean { \n        if (this.authService.tokenExists()) {\n            return true;\n        } \n        else {\n        this.route.navigate(['./login']);\n        return false;\n        }\n    }\n}\n    \n    \n       \n    \n         \n        \n   \n       \n       \n            \n\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/calendarEntry.html":{"url":"interfaces/calendarEntry.html","title":"interface - calendarEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  calendarEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/info/lectures-plan/calenderEntry.ts\n        \n\n            \n                Description\n            \n            \n                an interface that will take part in the Events model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        begin\n                                \n                                \n                                        end\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                    \n                                \n                                \n                                    \n                                        begin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Starting day/ Date of the event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ending day/Date of the event\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    semester in which the event will take place \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface calendarEntry {  \n    /**\n     * Starting day/ Date of the event\n     */\n    begin: string;\n    /**\n     * Ending day/Date of the event\n     */\n    end: string;\n    /**\n     * semester in which the event will take place \n     */\n    name: string;    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Frontend-Models/room.ts\n            \n            class\n            Room\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/Frontend-Models/users.ts\n            \n            class\n            Users\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/Navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            translateCacheFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            translateLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth-interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/body/body.component.ts\n            \n            component\n            BodyComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/i18n/i18n.module.ts\n            \n            function\n            translateLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/info/exams/examModel.ts\n            \n            interface\n            Exam\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/info/exams/exams.component.ts\n            \n            component\n            ExamsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/info/exams/http.service.ts\n            \n            injectable\n            HttpService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/info/freeRoom/freeRoom.component.ts\n            \n            component\n            FreeRoomComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/info/freeRoom/http.service.ts\n            \n            injectable\n            HttpService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/info/freeRoom/lectureModel.ts\n            \n            interface\n            Lecture\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/info/info.component.ts\n            \n            component\n            InfoComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/info/lectures-plan/calenderEntry.ts\n            \n            interface\n            calendarEntry\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/info/lectures-plan/eventsModel.ts\n            \n            interface\n            Events\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/info/lectures-plan/http.service.ts\n            \n            injectable\n            HttpService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/info/lectures-plan/lectures-plan.component.ts\n            \n            component\n            LecturesPlanComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/info/mensa/http.service.ts\n            \n            injectable\n            HttpService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/info/mensa/mensa.component.ts\n            \n            component\n            MensaComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/info/mensa/mensaModel.ts\n            \n            interface\n            Mensa\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/login/Auth-guard.ts\n            \n            guard\n            authorizationGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/nachrichten/nachrichten.component.ts\n            \n            component\n            NachrichtenComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            variable\n            iconDefault\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            variable\n            iconRetinaUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            variable\n            iconUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            variable\n            shadowUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/services/credentialspost.service.ts\n            \n            injectable\n            CredentialsPostService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/marker.service.ts\n            \n            injectable\n            MarkerService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/services/navigate.service.ts\n            \n            injectable\n            NavigateService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/services/sidenav.service.ts\n            \n            injectable\n            SideNavigationService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/flex-layout : ^11.0.0-beta.33\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @ngx-translate/core : ^13.0.0\n        \n            @ngx-translate/http-loader : ^6.0.0\n        \n            anywhere : ^1.5.0\n        \n            bcrypt : ^5.0.0\n        \n            body-parser : ^1.19.0\n        \n            bootstrap : ^3.4.1\n        \n            bootstrapp : 0.0.0\n        \n            cors : ^2.8.5\n        \n            esri : 0.0.1-security\n        \n            express : ^4.17.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            leaflet : ^1.7.1\n        \n            leaflet-routing-machine : ^3.2.12\n        \n            lrm : ^1.0.0\n        \n            lrm-graphhopper : ^1.3.0\n        \n            mongoose : ^5.10.16\n        \n            mongoose-unique-validator : ^2.0.3\n        \n            ngx-translate-cache : ^9.0.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            translateCacheFactory   (src/.../app.module.ts)\n                        \n                        \n                            translateLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            translateLoaderFactory   (src/.../i18n.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            translateCacheFactory\n                        \n                        \n                    \n                \n            \n            \n                \ntranslateCacheFactory(translateService, translateCacheSettings)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translateService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translateCacheSettings\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translateLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \ntranslateLoaderFactory(httpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpClient\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/i18n/i18n.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            translateLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \ntranslateLoaderFactory(httpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpClient\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nMyApp\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nNavigation-MIT-project\nproject is cloned.\n\n\n\n\n\n\n\n5fecab9b36037971e921c0ffb8e451a37400740d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        I18nModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyComponent\n\nBodyComponent\n\nAppModule -->\n\nBodyComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nAppModule -->\n\nEventsComponent->AppModule\n\n\n\n\n\nExamsComponent\n\nExamsComponent\n\nAppModule -->\n\nExamsComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFreeRoomComponent\n\nFreeRoomComponent\n\nAppModule -->\n\nFreeRoomComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLecturesPlanComponent\n\nLecturesPlanComponent\n\nAppModule -->\n\nLecturesPlanComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMensaComponent\n\nMensaComponent\n\nAppModule -->\n\nMensaComponent->AppModule\n\n\n\n\n\nNachrichtenComponent\n\nNachrichtenComponent\n\nAppModule -->\n\nNachrichtenComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nI18nModule\n\nI18nModule\n\nAppModule -->\n\nI18nModule->AppModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAppModule -->\n\nAuthorizationService->AppModule\n\n\n\n\n\nSideNavigationService\n\nSideNavigationService\n\nAppModule -->\n\nSideNavigationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            iconDefault   (src/.../navigation.component.ts)\n                        \n                        \n                            iconRetinaUrl   (src/.../navigation.component.ts)\n                        \n                        \n                            iconUrl   (src/.../navigation.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            shadowUrl   (src/.../navigation.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/navigation/navigation.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            iconDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconRetinaUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : './assets/marker-icon-2x.png'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : './assets/marker-icon.png'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shadowUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : './assets/marker-shadow.png'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
